{
    "error": false,
    "course": {
        "id": 220,
        "subject": "COMP",
        "code": "3111",
        "name": "Software Engineering",
        "description": "Methods and tools for planning, designing, implementing, validating, and maintaining large software systems. Project work to build a software system as a team, using appropriate software engineering tools and techniques.",
        "categories": [],
        "website": "https://course.cse.ust.hk/comp3111/",
        "credits": 4,
        "semesters": [
            2230,
            2210,
            2130,
            2110,
            2030,
            2010,
            1930,
            1910,
            1830,
            1810,
            1730,
            1710,
            1630,
            1610,
            1530,
            1510,
            1430,
            1410
        ],
        "prerequisites": "<a class=\"course-link\" data-subject=\"COMP\" data-code=\"2012\" href=\"/review/COMP2012\" target=\"_blank\">COMP 2012</a> OR <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2012H\" href=\"/review/COMP2012H\" target=\"_blank\">COMP 2012H</a>",
        "corequisites": "",
        "exclusions": "<a class=\"course-link\" data-subject=\"COMP\" data-code=\"3111H\" href=\"/review/COMP3111H\" target=\"_blank\">COMP 3111H</a>, <a class=\"course-link\" data-subject=\"ISOM\" data-code=\"3210\" href=\"/review/ISOM3210\" target=\"_blank\">ISOM 3210</a>",
        "rating_content": 3.2,
        "rating_teaching": 3.47,
        "rating_grading": 3.51,
        "rating_workload": 3.2,
        "review_count": 49,
        "single_review": false,
        "enrollment_status": 3,
        "is_favourited": false,
        "is_subscribed": false,
        "user_review_hash": "",
        "contributor_has_more": false,
        "instructors": [
            {
                "id": 124,
                "name": "LEUNG, Wai Ting",
                "count": 29
            },
            {
                "id": 96,
                "name": "KIM, Sung Hun",
                "count": 14
            },
            {
                "id": 111,
                "name": "LOCHOVSKY, Frederick Horst",
                "count": 4
            },
            {
                "id": 131,
                "name": "QU, Huamin",
                "count": 1
            }
        ]
    },
    "reviews": [
        {
            "hash": "6nT3pC2fxDq6LM2n3lgnyrJIJN49ghrd",
            "semester": "2016-17 Spring",
            "instructors": [
                {
                    "id": 111,
                    "name": "LOCHOVSKY, Frederick Horst",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Brian",
            "date": "Jun 10, 2017",
            "title": "üçÜüçÜüò©üò©üò©üò©üçÜüçÜ",
            "comment_content": "This course teaches you methods of modelling software using different techniques. It also &quot;teaches&quot; you how to use C#/ASP .NET to develop an MVC web app.",
            "comment_teaching": "In-class teaching is pretty good. Concepts are easy to learn. However, a lot of the content is on the slides and can be easily crammed in a day.<br /><br />Each lab has like 10-20 pages of notes to read before you can actually do the lab work. The best way to learn is to turn to the person next to you and ask, &quot;How the fuck do you do this?&quot;",
            "comment_grading": "Studied about 3 days for the midterm, got mean.<br /><br />Went LKF before the final, crammed the post-midterm syllabus the morning after, got mean.<br /><br />Project was slightly above mean with a .9 contribution multiplier.<br /><br />B- overall",
            "comment_workload": "The bad part about this course is that you are forced to use Windows and Visual Studio Enterprise Edition to work on the project. Luckily, there is a virtual desktop for those who don't use a Windows operating system.<br /><br />The worst part about this course is that the virtual desktop almost never fucking worked.<br /><br />Taking this course is the equivalent of being Dan Bilzerian with erectile dysfunction.<br /><br />As much as I would like to work on the project and learn C#/ASP .NET, I am limited by the operating system, and am forced to walk all the way to the barn and wait 20 minutes for the Visual Studio to load. Each time I want to test my code, I have to wait for the lab computer to build the program (~20-30s), with a 20% chance that it will just crash Visual Studio.<br />Just as a Dan Bilzerian with erectile dysfunction would love to fuck all his bitches, he just can't get it up. So what does he do? He has to walk all the way to the pharmacy, buy Viagra, take it, wait for the Viagra to kick in, and then fuck his bitches. While he's deep in the action, there is a chance that he has to stop, take more Viagra, and wait for it to get up again. How annoying is that? Pretty fucking annoying.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": true,
            "has_presentation": false,
            "upvote_count": 36,
            "vote_count": 37,
            "voted": false,
            "is_upvote": false,
            "comment_count": 2,
            "attachments": []
        },
        {
            "hash": "MMd17uhUXU6VkTnw9rrNYWmoUP57EC9p",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ptrknow",
            "date": "Jun 13, 2020",
            "title": "",
            "comment_content": "1. A lot of theory<br />To be specific, a lot of diagrams drawing and a lot of software management(?) stuff. Although some more practical things such as scrum, testing and design patterns are also covered, the project is just too small a scale for these things to be utilized.<br /><br />2. Bad lecture notes<br />The lecture notes are the most deceptive one I have ever seen. They are deceptive in the sense that, at the first glance, you may think they are structured and detailed and summarized what Kenneth has said, but when you really read them, you would figure out these lecture notes are in fact so badly designed....<br /><br />3. Labs are too simple<br />Given that you have experience in C++ in COMP2011+2012/2012H, each lab can be finished like in half an hour. They could have taught us more complicated things in lab to make the course more practical (and interesting, maybe).",
            "comment_teaching": "I would classify the 20 something lectures into two types: diagram drawing lecture and powerpoint reading lecture.<br /><br />1. Regarding the diagram drawing lecture<br />Kenneth is quite interactive in this regard to answer students' questions, but this is just because his standard on diagram drawing is just so ambiguous and students have many questions on his standard or perspective. Honestly, even after hearing all his clarifications, I don't still quite get what he actually wants.<br /><br />2. Regarding the powerpoint reading lecture<br />Well, I must say, sometimes he did clarify some points he is previously reading. But most of the time, he is just reading aloud, &quot;with a smile&quot;, just like what other reviews have mentioned.<br /><br />3. Exam-oriented?<br />&quot;Class diagram is important, because I guarantee that there will be one question in the final exam asking you to draw class diagram&quot;<br />&quot;You should pay attention to use-case diagram, because I guarantee that there will be one question in the final exam asking you to draw use-case diagram&quot;<br />&quot;You better understand what is state-machine diagram, because I guarantee that there will be one question in the final exam asking you to draw state-machine diagram&quot;<br />&quot;You should practice drawing flow graph, because I guarantee that there will be one question in the final exam asking you to draw a flow graph&quot;<br />Does he imply that these things are useless when he didn't test these in exam?<br /><br />4. Do you want good grade?<br />&quot;Do you want tips on the exam? Do you want me to give out better grade?&quot; asked Kenneth during exam review, with a BIG smile. Unfortunately, I personally dislike his way of asking these questions.<br /><br />Even though I am being quite critical here, his teaching is actually better than average (I would leave you to judge whether his teaching is exemplary). I also see Kenneth's and Nam Kiu's (the TA) effort in trying to help us as much as possible, where they open a Telegram group for students to ask about the project or anything, and they attempt to prevent freerider from ruining other members in the project.",
            "comment_grading": "First 50% = In-class ex. + Lab + Project<br />Easy marks. Some review said the project is just a COMP2012H assignment. I don't agree. I would say that the project is even easier than a COMP2012 assignment, just that you need to self-learn JavaFX, JUnit and Javadoc, but for the purpose of the project, they are not difficult at all. (Well, the caveat is you have experience in C++ in COMP2011+2012/2012H.)<br /><br />Another 50% = Final Exam<br />Well, this is the interesting part. First thing first off, this is a game of pure luck. There is basically no use to review the lecture notes or the in-class exercise (except the MC questions where you have the exam review to refer to), because they didn't give you sufficient evidence to judge Kenneth's standard on diagram drawing, or inferring functionality and requirement. This also means that it makes no sense to talk about the difficulty of the exam, since you are literally doing guessing in the 2 or something hours.<br /><br />This leads to the second thing: everyone's mark is just so concentrated. It's like 5X to 7X marks out of 95. Everyone is just guessing. You get a slightly higher mark because you are a slightly better guesser, not because you know slightly better the course material. I also remembered one question in the exam is autograded. What is the consequence? You just see a whole column of 0s for that question in the mark sheet given out by Kenneth. Really fucking interesting.<br /><br />And that leads to the third thing: there is no point talking about the mean or SD. Your grade is determined by your rank in the exam, and the rank is determined by your luck. Because of this, I would give a &quot;D&quot; in this grading column.<br /><br />But I decide to give out a &quot;C&quot; for this column instead, because Kenneth's grading distribution is really lenient.<br />First 50%: got 49.1% (I lost that 0.9% just because my use-case specification does not include an alternative flow)<br />Second 50% (final exam): 65/95 (so that I rank 20 out of 100 something students)<br />Grade: A<br /><br />However, I won't speak in favor of this course's grading scheme just because I got the second best grade possible, since I don't really know how the marks are earned or lost in the exam, and I don't think it is reasonable when your luck is a decisive factor of your grade. (Remember his COMP2711, when your carefulness decides your grade?)",
            "comment_workload": "When Kenneth's COMP2711 is a 4-credit course with 2-credit workload, then his COMP3111 is a 4-credit course with 3-credit workload. Here is the main workload:<br /><br />1. Attend his lesson to gain access to his in-class exercise, and finish the exercise<br /><br />2. Labs: as I have mentioned, each lab can be finished within half an hour, assuming you didn't encounter any technical problems<br /><br />3. Project<br />The project just gives a taste of how it feels when you code with others. It is not complex enough to render those design pattern or testing things useful, and it is quite fine even when you write sphagetti code or create a god class. The main workload actually comes from self-learning JavaFX, JUnit and Javadoc, if you didn't take COMP1022P or COMP3021 before.<br /><br />4. Exam<br />It just didn't deserve your time of revision.<br /><br />Indeed, the course does have a bit of workload when you need to manage your project and meet the deadline, but in terms of a software engineering course, this workload is just nothing, because the project scale is small. The &quot;A&quot; for this column is given under the context of a software engineering course.",
            "rating_content": 2,
            "rating_teaching": 4,
            "rating_grading": 3,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 23,
            "vote_count": 24,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "SoENUlPiN9crDo3iNyCYbhjiZcWxCK2W",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "rind",
            "date": "Dec 11, 2021",
            "title": "Nightmare, the next comp course to revamp.",
            "comment_content": "If I have to conclude this course: For those who have Software Engineering experience before may/may not learn something from this course; For those who have no idea what software engineering is, you will still know nothing after this course.<br /><br />Software Engineering is a very interesting topic, unlike Civil Engineering, they may visualise the structure, calculate the forces, stress/strain, and usually they know can the building withstand different shocks in design stage. However, Software Engineering is a completely different topic, there is no single &quot;best structure&quot; to tackle certain problems and usually we cannot foreseen how does the final system behave, or ensure it is bug-free. It is an artwork.<br /><br />However, this course probably was designed in the worst way of teaching Software Engineering, cover everything but not deep enough, not even at a point to understand why I have to do these things.<br />------<br />The Lecture Contents are mainly:<br />1. Modelling Software System<br />This is an important topic, may be it sounds a little bit stupid to draw those class diagram, but it is a way that developers communicate, when you work in the industry with larger system/complicated structure, drawing class diagram is important for communication.<br /><br />2. Software Development<br />Introduction to some software development pattern but too brief, basically if you have not participated in that pattern before, you will not know why it is good/bad.<br /><br />3. System Requirement Capture<br />4. Implementation<br /><br />5. Testing<br />Testing is taught in a dumb way that basically it covers those basic ICT stuff and teach you to draw more diagram. They also teach Integration Testing Using Stub which is very important if you are in Test-Driven-Development, but they omit the important part that is the implementation of Stub (Loosely-coupled principle).<br /><br />6. System Analysis and Design<br />Design Pattern should be the most valuable thing you can learn from this course, some principle like &quot;loosely-coupled&quot;, &quot;composition rather inheritance&quot;... are taught, but only a very brief introduction. BTW his slides is using all the images and derivation of a book: &quot;Head First Software Development&quot; which is a starter-friendly one. Check out this book to learn something valuable.<br /><br />7. Some QA and Management Stuff<br />------<br />Kenneth's slides are colourful, hard-to-read and vague. You may always find some statement like: &quot;Ignore the inappropriate requirements&quot;. Thanks for that information.<br /><br />I have no big problem with Kenneth's slides since it is quite hard to cover all important material within 1 semester, it's fine. However, the arrangement of project is really a mess, I will talk about that in Teaching part.<br /><br />If you do not have any Software Engineering experiences, when you read the slides and attend the lecture, you may think: why am I wasting time for this????<br />Indeed, studying this course without any prior knowledge just like reading a random book written by a random guy, and follow his rules to complete some tasks without any rationale/understanding. But believe me (not Kenneth kind of &quot;believe me&quot;), Software Engineering is a very important topic and it is way more fun than what you experienced in this course.<br /><br />For those who want to take this course (CPEG/ IT minor) and really want to learn solid Software Engineering, don't register this course, go find an internship instead, it is a waste of time and effort.",
            "comment_teaching": "Let's start with Kenneth. Kenneth is nice and he always try to please students, that makes this course a bit exam-oriented since he always say &quot;this will be in the final exam&quot;, but still I think he really want students behave well and get good grades (he even provide hints during the final exam).<br /><br />For the TAs, let's start with the labs.<br />We have 8 labs this year and each lab is teaching something that will be used in the team project. Something like Git and GitHub, JUnit, JavaDoc...etc, but don't expect to learn Git inside this course, they merely teach you the command to stage/commit/branch/push/clone, without much rationale behind it.<br />I am pretty sure some TAs are not well-prepared because there is some bug during lab7, the TA claim that it works on last year, and finally a student help the TA solve the problem. And the problem is &quot;deprecated module&quot;, sarcastically happening in a &quot;Software Engineering&quot; course.<br /><br />When we have questions about the lab, usually the TAs they are not quite sure about how to deal with it. I guess it may be the problem that they are selecting Eclipse as an IDE, and I wonder who is the genius that come up with the idea using Eclipse for this course. Google: &quot;why Eclipse IDE is bad&quot;, you will know how painful it is doing all the stuff using Eclipse. <br /><br />The next one is Project, I am speechless with this project.<br />The first problem is that the project scale is too small, I am not talking about the number of team members in each team but the tasks we are doing can basically done within 2-3 days, which does not really have to be a Team Project.<br /><br />The next problem is interesting, this course is Software Engineering. So I expect we are doing something like modular development (every teammate do one feature and merge together). However, it is not what the TA expect. When someone asking whether they can use separate controller classes for different tasks, the TA said he suppose us to do all our development inside one class. WTF???? Don't they know there is something call MERGE CONFLICTS???? No single company will code like this.<br /><br />Finally, in the grading of the project, this course is Software Engineering. So I expect they are checking whether we are doing some Software Engineering Best Practices (comments, organised, easy-to-read code, refactor code...). But NO, they don't look at the source code, as long as your application is working and you submit all the requirement documents, you are good to get full points. WTF??<br /><br />Every Team has a TA as Team coach, but actually the team coach is not necessary except you can ask about his/her grading criteria, that's it.<br /><br />So what is the point of doing this project???",
            "comment_grading": "---Update after grade release---<br />To be honest, this should be the most &quot;good grade&quot; course in CSE department, of course here my definition is the overall grading instead of whether the grade reflects ability/hard work, scoring mean in this course yields B/B+, me personally get mean in exam, project slightly above mean but I miss 1% in quizzes. Total score of 88.xx% that leads to a B+ grade which is unexpected.<br /><br />However, it is still worth mentioning the exam format.<br />This year Kenneth tries to avoid ambiguity, so instead of drawing the whole class diagram, he gave a skeleton diagram and we fill in the multiplicity into it. There are several reading comprehension, weird questions and ambiguous questions.<br /><br />When I am doing the exam paper, I feel so disappointed, feeling like an idiot fooled by others to take an exam of searching stuff from notes (the exam is open-notes), reading passages to fill in the blanks, and draw a state-diagram to some &quot;SOFTWARE SYSTEM&quot; which is just a vending machine. I want to give up the exam several time as it really does not examining anything. If you ask experienced FAANG Software Engineer to take this exam, believe me, they will also get the mean mark.<br /><br />They release scores for individual problems, and this is the first time that I get every single questions so close to mean. Not only me but also my friends, everyone is getting similar scores on each problem. The reason behind this is that TAs are just following Kenneth's marking scheme, and his marking scheme is crazily picky and not reasonable. In the appeal section, one TA also thinks that our consideration is correct, but Kenneth just don't think it is necessary, the TA has to follow the marking scheme and give out points.<br /><br />The course is a good grade course in the sense that, every person gets the same score, the s.d. of final exam is around 6 out of 100, which is super crazy for a COMP course. Kenneth does keep his promise to maximize A/B ranges, and put as much B+/A+ as possibles. That makes 88% gets B+ but 92% gets A+.<br /><br />For those A-rangers, it is a hard course to get A, but if you are just an average person and don't mind learning nothing, register this course.",
            "comment_workload": "This course has basically no workload, or if you compare it with other courses, it worth at most 3 credits.<br /><br />Out of those 3 credits, 2 credits come from Eclipse. <br />It take you some time to boot up the whole IDE, and when you add some files into the workspace folders, you are very likely not to see them in the IDE. Then you have to shut down Eclipse and open it again. No Auto-Complete means that you have to type every fxxking character. When you edit some code you try to see its effect, it takes Eclipse some time to figure out the build gradle file, and run the gradle project. And there is a very high chance to fail since you did not set up the build path correctly. What is buildpath?? Sorry, it is not taught in labs. Find the solution yourself.<br /><br />When you face some problem in Eclipse and try to StackOverflow, usually there is no question asked for your problem cause any sensible programmer would not use Eclipse IDE anymore. If you can find something, there is a high chance that the answer is: it is the intrinsic design problem of Eclipse, remove all folders from workspace and restart Eclipse.<br /><br />There can be so many cool things that this course can do, e.g. Remove all the lectures and focus on one big project. The team coach guide you to finish each tasks and teach you some Software Development Practices, also your team can choose a development pattern you like. Having meeting with Teach Coach every week to report progress and ask for suggestions. Finally, assessment based on the practices used, the way the team tackle problems...<br /><br />Of course there are still a lot of ways that this course can be conducted, just not the current way.",
            "rating_content": 1,
            "rating_teaching": 3,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 16,
            "vote_count": 16,
            "voted": false,
            "is_upvote": false,
            "comment_count": 2,
            "attachments": []
        },
        {
            "hash": "KsyC25lEURu2oHEUZmOhyyejfBLlnCQ7",
            "semester": "2018-19 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Tommy Li",
            "date": "May 29, 2019",
            "title": "Good grade course (if you have good luck)",
            "comment_content": "A lot of boring theory stuff about software engineering. Not as practical as others claimed. Useful development approaches in real life like agile and scrum only get mentioned briefly. Topics include:<br /><br />Modeling Software Systems using UML<br />- Software Development<br />- System Requirements Capture<br />- Implementation<br />- Testing<br />- System Analysis &amp; Design<br />- Software Quality Assurance<br />- Managing Software Development<br /><br />For previous semesters, you can get a taste of software engineering by staring everything from scratch to build a working project. You have to think about the structure, and you have to think about how to build a good UI, and much more. After Kenneth have revamped the course, the project becomes like like an COMP 2012(H) assignment, you just copy and modify some things in skeleton code. You can attain full marks without considering any design patterns or OO concepts, or even with spaghetti code. (you won't get penalized for bad code!) I personally think the project in COMP 2012H is more like an software engineering project. That project requires you a good OO structure and the program have to be well-documented.",
            "comment_teaching": "I would say most reviews have Kenneth's teaching skills overrated. He is not bad compared to other lecturers, but he definitely is not as good as how the other reviews claimed.<br /><br />All he did in the lecture is reading the powerpoint with a smile. He did not elaborate the points too much, and most of the time he just read out the content without emphasizing the main points.<br /><br />I don't get how to draw a good class diagram or a state machine diagrams. Both Kenneth and the TA said it is ok as long as it is reasonable. But I don't quite get what is reasonable. I just cant extract the main points from the problem statement. <br /><br />It is good that he provide some in-class exercises to let you know what can be the question type in exams. But still, there are some variations in exams.<br /><br />Sorry to all Kenneth fans. He is nice and passionate but he really can't make me understand the content. He did give good grades tho in some sense.",
            "comment_grading": "Most students got full marks in project, and full mark can be obtained both in-class exercise and lab by sufficient attendance. The overall grade mostly depends on the final exam.<br /><br />The final exam is mostly based on luck. Most students including my friends and myself do not have complete understanding of the concepts like drawing class diagrams and state machine diagram. If you draw the thing that he expected, then you will get the mark. But you can never guess the marking scheme because there are insufficient examples to judge that. The only thing you can do is memorize all the MCQ Kenneth gave and the three principals of the design pattern (you must use the EXACT wording from the in-class exercise to get the mark!).<br /><br />In-class exercise: 10/10<br />Labs: 10/10<br />Project: 30/30<br />Final exam: 90/100 (Mean: ~70, SD: ~10.8, Max: 91.5) =&gt; 45/50<br />Overall: 95/100 =&gt; A+<br /><br />My grade is probably not that useful for judging the grading scheme. I will ask for my friends for more statistics about the grading and post an update here.<br /><br />EDIT: My friend who got 80.5 in final (+1sd) and everything else full. Got A+ also. Extremely good grade.<br /><br />EDIT2: Another friend: final mean + else all full =&gt; B+",
            "comment_workload": "The workload is average. It is not too much nor too heavy.<br /><br />Both in-class exercise and lab require attendance. You can get full in in-class exercise by completing 10 exercises in lecture. Not all of the labs are mandatory so have a look on the course webpage regularly.<br /><br />Although most parts of the group project are graded individually, the workload still depends on your groupmates. Having a good groupmate, especially one that keep track of the progress and requirements well, do help quite a bit. Conversely, if you got a freerider, you still have to do some of the group stuff by yourself like the unit test and coverage.<br /><br />For exam preparation, recite the MCQs Kenneth gave (he claimed all MCQs are from the review, but somehow some of them aren't) and the three design principal of design pattern (that three points in the in-class exercise). There is nothing else that you can do to prepare. There is no use doing exercises without Kenneth/Kevin's marking scheme.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 13,
            "vote_count": 13,
            "voted": false,
            "is_upvote": false,
            "comment_count": 3,
            "attachments": []
        },
        {
            "hash": "vKC6iLfVlvdfrUZG4MCcsop1ls8uo71i",
            "semester": "2018-19 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "funsun",
            "date": "Aug 20, 2019",
            "title": "A rager's restrained review on Software Project Management 101",
            "comment_content": "I expected this course would be about developing and maintaining huge and complex codebases, but this can't be any farther from reality. This course is more like Software Project Management 101. There's a lot of &quot;what are the different types of requirements&quot;, &quot;how do you turn this vague description of a system / procedure into a diagram that no one really reads in real life&quot;, &quot;what counts as a state? Or is it a transition?&quot;, weird stuff like that.<br /><br />It covers some technical things like testing and oop design patterns, but in a very superficial way.",
            "comment_teaching": "Speaking for 2711 as well. Kenneth Leung seems like a genuine nice person, but god do I hate his courses.<br /><br />1) His slides are very hard to read, especially for the easily distracted! There's no consistent structure! No alignment! Too liberal use of bold, italics, underline, and animations! And COLORS! A pride parade is less vibrant compared to his slides.<br /><br />2) He always makes the assessments way too easy, for &quot;our benefits&quot; he claimed. Some questions are copied verbatim from the revision exercises. So the mean is absurdly high. In the end, I feel like we are punished for making careless mistakes, rather then for being poor at software engineering.<br /><br />3) Sorry, this is personal. Something about the way he talks makes me wanna whack him. He tries too hard at making mundane stuff sounds cute or interesting.",
            "comment_grading": "I will preface by saying that I skipped classes A LOT, and didn't revised for the final (out of self-destruction, and disgust for this course). I deserve the B+. But still, here comes my wall of rage.<br /><br />Full marks on everything except the final where I got 71/100 =&gt; B+. FUCK! I have a friend who also received full marks for everything else and 80.5/100 for final, and he got A+. So, it's like, what, total marks 85 = B+, 90 = A+ !!? This is not a reasonable reflection on students' performance.<br /><br />Moral of the story: Be careful with Kenneth Leung's courses. He makes everything so freaking simple, everybody got full marks, and in the end losing a few marks due to silly mistakes for the final with cost you a letter grade.<br /><br />PARTICIPATION (full mark): <br />Just hand in 12 in-class exercises and you're done.<br /><br />LAB (full mark):<br />Basic Java programming. Basic Git usage. Very straightforward, each can be completed within half an hour.<br /><br />PROJECT (full mark):<br />Basically make a desktop app. If you are comfortable with Java and GUI programming this is simple. The 'documentation' part is a no-brainer. They don't even care about the quality. As long as it's there and it kind of make sense then you will get full mark.<br /><br />FINAL (71/100; weighted 50%; around mean)<br />MC worth about 30% of the paper. Kenneth will give you the questions and answer as revision exercise before the final.<br /><br />The rest are utter mess! Ambiguous load of crap. They are long version of various in-class exercises. Usually involves drawing flow-chart like diagrams, and categorizing the components of problem statements. There are no unique solution! Different people can interpret the statements differently. To give you a feeling: during the final, people are raising their hands requesting for clarification non-stop for 3 hours. The girl in front of me raises hers &gt; 10 times. And only Kenneth is answering because the TAs are just as confused. During the paper checking session, people were swarming the TAs and the assistant professor trying to explain why they think their answer is right.<br /><br />This course is NEVER about realistic software engineering practices, it's all about EXAM TECHNIQUES. So be sure to attend the classes to get a feel of what Kenneth wants.",
            "comment_workload": "Doesn't feel like a 4-credit course. <br /><br />Most of the workload comes from the project. Whether it is heavy or not HIGHLY depends on your coding skills. Three areas that may be new to people coming from only COMP1022* and COMP2012 are 1) GUI library (JavaFX) + MVC pattern; 2) Java threads; 3) Git. Learning and debugging the first two IMO can be quite time consuming.<br /><br />See GRADING for further break down.",
            "rating_content": 2,
            "rating_teaching": 3,
            "rating_grading": 2,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 11,
            "vote_count": 11,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "eotLYNZbx62z13YxAPNoHcy2EbdWwfXC",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Hei123",
            "date": "May 31, 2021",
            "title": "God does not play dice, but Kenneth does.",
            "comment_content": "Modeling Software Systems using UML<br />Software Development<br />System Requirements Capture<br />Implementation<br />Testing<br />System Analysis &amp; Design<br />Software Quality Assurance<br />Managing Software Development<br /><br />Simple but boring and I don't think the materials are useful and up-to-date. The only thing I found slightly useful is System Design, but it was taught quickly and poorly. <br /><br />There is a project in the course, but it was poorly designed and you will never apply what you've learnt from the course. All you learn is how to use github. I think it could be better if it was designed in a way that we could use some system design in it. Implementation is the best way to learn.<br /><br />Overall speaking, google and learn will be better than studying this course.",
            "comment_teaching": "I like the way of pre-recorded lectures and quizzes, but the questions in the quizzes are stupid sometimes and you have to guess the wordings. <br /><br />Having pre-recorded lectures is a good idea, but Kenneth is just reading everything aloud. Most videos last 20-30 minutes, but you will frequently see NG clips (cost about 5 mins) recorded by Kenneth in each video, and he doesn't even bother to cut them out. From his face, I feel like he's about to say the F word but he can't lol.<br /><br />For the TAs, I would give an E. Their names are Maryam, Dimitris, Kexin, and Namkiu. From their project, zoom proctor, and final grading, I would say their attitudes and working manners are poor (except Dimitris). They always release our scores before each question has been graded. Also, they never tell you what you've done wrong. They won't even give you a comment and sometimes your score is even missing. When you send an email to ask for a comment, they just ask to appeal. Seriously??? After appealing, they told me that I got 0/10 for commendable features. lol wtf. I'm tired of sending a second appeal. Btw, Maryam graded my project. I asked a friend of mine and he was graded by Dimitris. He included fewer extra features than mine, but he got a higher score for commendable features.",
            "comment_grading": "Pre-Lecture Quizzes 10%<br />In-class practice Exercises 10%<br />Labs 10%<br />Project 30%<br />- Activity 1: System Requirements Specification (5/30%)<br />- Activity 2: System Implementation &amp; Testing (25/30%)<br />Final Exam 40%<br /><br />I'm not sure about the grades, but no matter how Kenneth claims he is lenient in grades, it is useless. The TAs never mark the works appropriately. Just rmb to appeal, appeal and appeal. The mean of the final changed from 40 to 50 lol.<br /><br />The final exam is disastrous, like in lectures they tell you that UML diagrams do not have specific answers, but in exams, you will be graded with a model answer, that gives all or nothing. The question asks you to identify mistakes in the class diagram, but if you have studied the course, you will know class diagrams are kinda subjective and there is no exact right or wrong. So all you need is to guess the mistake. <br /><br />Btw, if you study this course, be aware with your English as it might sometimes cost you a score. e.g. In Lab2, if you wrongly say &quot;implements&quot; using the word inheritance but not interface, your score will be deducted.<br /><br />[Edit 1] Poor score but Good grades.<br />Kenneth is really lenient in grades, here I mean the score-and-grade relationship, so I'll change it from D to C to avoid confusion. <br /><br />Project Mean: 27.2/30 + 55.9/70<br />Final Mean: 14.24/15 (MC) + 50.18/85 (LQ)<br /><br />Student 1: A-<br />Project: 27 + 60<br />Final: 15 + 58<br /><br />Student 2: B+<br />Project: 29 + 58<br />Final: 14 + 48<br /><br />Student 3: B<br />Project: 27 + 60<br />Final: 15 + 45<br /><br />Student 4: C<br />Project: 27 + 36<br />Final: 15 + 39",
            "comment_workload": "The workload is extremely light. Reading through the notes once is already enough for the final exam. Let your luck do the rest. This course does not worth 4 credits.",
            "rating_content": 3,
            "rating_teaching": 2,
            "rating_grading": 3,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 9,
            "vote_count": 10,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "rq4YRoekWuqvbqEcVtKx353CHth8Zr4d",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "youth222",
            "date": "May 31, 2021",
            "title": "Non-sense",
            "comment_content": "Simple concepts about software engineering. The concepts are easy and understandable comparing to other comp courses. However, when it comes to exam, it's terrible (please see the grading part)",
            "comment_teaching": "So-so. His accent is okay and he provides in-class exercise for &quot;preparing&quot; the exam. It may seem useful,&nbsp;&nbsp;in fact, it's trash. (please see the grading part)<br />He always emphasizes that he will give out good grade.<br /><br />In the last two lectures, he keeps encouraging students to fill in the SFQ and give him positive comments. Why the SFQ cannot be finished after final exam? Whatever, I didn't do it :)",
            "comment_grading": "I am angered by the final exam. The exam was open notes.<br /><br />There was technical error in the exam. (This is already the third semester with online exams........) The exam was submitted suddenly and we got multiple attempts. However, we were not able to view what we have answered in the previous attempt. <br /><br />First, for the multiple choices part, ALL questions (really all) can be found from pre-lecture quizzes or exam reviews. Yeah, so everyone get full marks. Although I got full marks, I really do not know what's the point of setting the questions like this<br />P.S. I am a lazy student, but I really really dislike this.<br /><br />For the long question part, it's interesting.<br />In lectures, he mentioned that that's no absolute answer on drawing diagrams. I thought I will gain reasonable marks, unless I write something like &quot;the sun rises from the west&quot;.&nbsp;&nbsp;In fact, there should be a marking scheme that gives 0 or all only, and Kenneth is not willing to release the marking scheme. Are we supposed to read his mind and get what he wants when we are doing the paper?<br />To be honest, this course is theoretically important for our future career. The TA only gives out how the marks are distributed within the question, instead of pointing out what logic/mistakes I have made. <br />So, what's the point for me to sit for this exam, just for grade????",
            "comment_workload": "As a 4 cred course, the workload is light. Just pre-lecture quizzes which take you 10 minutes to complete them per week. <br />The group project and lab are easy to complete as well.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 8,
            "vote_count": 9,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "nm3eshjZoecXYl3USZUlJCkyzEva44MO",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "V8_BITURBO",
            "date": "May 27, 2022",
            "title": "Totally Shxt",
            "comment_content": "Instead of&nbsp;&nbsp;software engineering, the style and content of the lectures are very similar to those offered in the school of Business, it should be called MGMT3111. <br />Apart from this, just like those business courses, the questions in the exercises are vague and incomprehensible, and you might not be able to retrieve any useful solutions from the lecture notes. Don't worry about cheating in this course. Because the cheater cannot figure out the answers anyway, even if he is able to read the course materials during the exam. <br />The powerpoint slides are not well organized and they are more colorful than my K70RGB.",
            "comment_teaching": "Ist das der Engel, der vom d√§mmernden Himmel hinunterflog?<br />Ist das der Teufel, der aus Felsenspalte herauskroch?",
            "comment_grading": "Can't look back<br />My GPA will not come back<br />Can't be afraid<br />It's time after time<br />Once again<br />I'm hiding in my room<br />The online sems have made us blind<br />So you can't pass if you never try<br />You told me, ,, Oh, long ago<br />But you left the quiz<br />Outside and closed book<br />So more than ever, It's real<br /><br />It was like a nightmare<br />It's painful for me<br />Because nobody wants to fail too fast<br />Remember the day of reg<br />Now it's strange for me",
            "comment_workload": "Pre-lecture quiz in the weekends<br />Labs every week<br />Group project<br />Quiz<br />Final Exam",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 8,
            "vote_count": 11,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "6syKe3hGgfqTRYmjYsT7tllhrh16XPkE",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ogt",
            "date": "May 31, 2021",
            "title": "Disappointing course",
            "comment_content": "I am disappointed with the course content. There really isn't anything useful. Unless you are working as a contractor for other companies, there is 90% chance you will not use most of the content and all of the different diagrams.<br /><br />I feel like this course is wasted on content that anyone can learn in 20 minutes on google. Surely there are more interesting things to talk about in SWE? Would have loved to talk more about system design and architectures, and have real-world problems like how to design Instagram, how to design a Messenger app.",
            "comment_teaching": "Kenneth's teaching is OK. I didn't watch the pre-recorded videos, just quickly went through the slides to answer the pre-class quizzes.<br /><br />The labs are unfortunately not useful. I didn't attend them as the content is very simple and could do it by myself quickly.",
            "comment_grading": "Grading is disappointing. There is a complete lack of transparency: how can we appeal an exam without the solution or any grading comments??? So I appealed everything.<br />My appeal got me +9 points/85...a significant amount. I don't think it is acceptable to miss so many points whilst grading.<br /><br />For a course that is &quot;simple&quot;, the mean on the final was pretty low.<br /><br />Regarding the other stuff:<br />- Project: I also had to appeal (+9 points). The mean is 45/60 on the source code part.<br />- Labs &amp; Quizzes: you can expect almost everyone gets full marks<br /><br />=&gt; Despite some grading hiccups, the final grade is good.<br /><br />My advice:<br />=&gt; Go the extra mile on the course project. Do the commendable features because they are worth 10 points of a 30% project. So 3% of your final grade. With the final score being so tight and a bit random, 3% can make a big difference!",
            "comment_workload": "Mostly OK.<br />The big workload was the course project. We had to make a Java app for recommending names. I don't think I learned anything, unfortunately, just a programming assignment.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 6,
            "vote_count": 7,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "xWLCykVxrllQxr3enSJr8lQZW91VOpDf",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "B.T.",
            "date": "Jun 12, 2020",
            "title": "Content is actually not bad, unlike what claimed in other reviews.",
            "comment_content": "This course is more or less about theories. Tho may not be all practical, this does not mean the content is not good. Just because all other CSE courses in HKUST are about coding and programming, none of them taught you how to effectively write a program.<br /><br /><br />This course teaches you ‚Äúhow‚Äù to write a software, but not only ‚Äúwhat‚Äù to code. I mean you are still nothing even you learnt all syntax and algorithms, if you don‚Äôt know how to systematically write a large program. ‚ÄúWhen you enter the industry, you eventually want to be a manager‚Äù, said Kenneth, which is indeed very true. No one wants to be a programmer for the whole life without being promoted to the managerial level.",
            "comment_teaching": "Not good and not bad. He teaches with reasonable efforts and speaks clearly. Sometimes students may ask some advanced questions that make Kenneth utters. His powerpoint slides are quite difficult to follow, so you may need to go to class or watch lecture video and jot notes on your own.<br /><br /><br />He is kind and helpful, and is willing to help outside class, so I am fine with him.",
            "comment_grading": "10% in-class exercise, count best 10 out of 19.<br />10% labs (6 graded labs, each 1.67 pt)<br />30% project (6% for drawing theoretical stuff + 24% coding and testing)<br />50% final examination <br /><br />I would say the grading criteria is reasonable.<br /><br /><br />VERY good grade:<br />-I got full for labs and in-class exercises.<br />-I got 28/30 for project (most students got full or very close to full, mean is 27.6/30)<br />-I got 69.6/100 for the final exam. This year the mean is quite low, maybe due to online. Mean for final around ~ 58-60 (not disclosed but we can see the scores for all students)<br /><br /><br />Final grade: A+ !!<br />Kenneth is really lenient in grading.",
            "comment_workload": "I would say is appropriate. Given it is 4-cred.<br /><br /><br />You will need to spend some efforts to deal with the graded labs, the project may take some time if you are not familiar with Github, Java and Javafx. If you came from 1022p instead of 1021/1022q, it may be better.<br /><br /><br />For the final exam, you can only prepare for the Multiple Choices that Kenneth gives out during the exam review section, other questions are really luck cuz you won‚Äôt know how it is marked. Better to revise yourself with English reading comprehension skills cuz you will face thousand-word problem statements.... In my opinion, the exam is nothing about Software Engineering, it does not worth your precious exam-period time to study too much for this course.",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 6,
            "vote_count": 7,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "29RUB9FNzvbEYeaM0ypYV7ROX8kYL0Oy",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "Brian So",
            "date": "Jan 06, 2017",
            "title": "Ridiculous course",
            "comment_content": "ContentÂÜáÈõ¢È°å‰øÇÂîØ‰∏ÄÂîîÊãéEÊó¢ÁêÜÁî±<br />NoteÂîîÊï¥ÈΩäÔºåÂÜáÊ¢ùÁêÜ<br />ÂâçÈù¢StateÂ∑¶ÂπæÂÄãTermsÂá∫‰æÜ‰πãÂæåÔºåÂæåÈù¢Ëß£ÈáãÂ∑¶‰∏ÄÂÄãTerm‰πãÂæåÂ∞±ÂÜáÂÖ∂‰ªñTermÊó¢Ëß£ÈáãÔºåË∂ÖÂîîÊ∏ÖÊô∞„ÄÇ<br />Ëá™Â∑±ÊêµË≥áÊñô‰ª≤Â•Ω<br /><br />DesignÂÄãCourseÊó¢ÊôÇ‰æØÂÜáÁêÜÂ≠∏ÁîüÊó¢ËÉåÊôØ<br />AngularJS ÊûúdÁõ¥Êé•‰æÜÔºåÂèàÂÜáË∂≥Â§†materialÂÅöreference<br />ËÄÉË©¶ÁÑ°lalaËÄÉJava Code, Â§ß‰Ω¨ÊúâÂÜáË´óÈÅéÊúâ‰∫∫ÂÜáÂ≠∏ÈÅéJava?",
            "comment_teaching": "ÂîîË≠òÊïôÊõ∏ÔºåÈõñÁÑ∂ÊàëÂîî‰øÇÊàêÊó•‰∏äÂ†ÇÔºå‰ΩÜ‰∏ä‰Ω¢Â†ÇÊàêÊó•ÈÉΩÊúÉÁôºË¶∫Êúâd‰Ωç‰Ω¢skipÂ∑¶„ÄÇ<br /><br />ÂîîË≠òÂàÜÈáçÈªûËºïÈáçÔºåÊáâËß£ÈáãÊó¢ÂîîËß£ÈáãÔºåÊáâËºïËºïÂ∏∂ÈÅéÊó¢ÂèàË¨õÂæóËÄê<br />‰ª•ÊúÄÂ∞æ‰∏ÄÂ†ÇÁÇ∫‰æãÔºåÊàêÂÄãÈêòÂéª‰ªãÁ¥πdeep learningÔºå‰ΩÜÁî®‰∏ÄÂàÜÈêòÈÉΩÂÜáÂ∏∂ÈÅéÂ∑¶neuron, neural networkÂÄãdÈáéÔºåÂæåÈù¢Ë¨õtensorflow d codingË¨õÂ∑¶ÂãÅËÄê„ÄÇÂ§ß‰Ω¨‰∫∫Âú∞ÈÉΩÊú™Ê∏ÖÊ•öneural network‰øÇ‰πú‰Ω†ÂíÅÂø´Ë¨õcodeÂÅö‰πúÔºü<br />linear regressionÂêålogistic functionÊó¢‰ΩúÁî®ÂèàÂÜáË¨õÔºåÈªûÂºïËµ∑‰∫∫Âú∞ËààË∂£ÂëÄÔºü<br /><br />‰Ω¢ÊïôÊõ∏ÂÄãÊÖãÂ∫¶‰øÇOKÊó¢ÔºåÂ•ΩÂ•ΩÁ¨ëÂÆπÔºå‰øÇÂîîÂ§™Ë≠òÊãøÊçèÊïôÊõ∏Êó¢ÊñπÊ≥ïÂêåÈÄüÂ∫¶",
            "comment_grading": "Â•ΩÂîîÂ•ΩGradeÂ∞±ÁùáÂÖ∂‰ªñpostÂï¶(8XÂàÜÊãéC+)ÔºåÊàëËëóÈáçË¨õGrading SchemeÂêàÂîîÂêàÈÅ©<br /><br />50% 5-7 people Project<br />10% 2 individual assignments (small project)<br />10% lab<br />10% mid term<br />20% final exam<br /><br />ÂÄãGrading SchemeÁ∞°Áõ¥‰øÇRidiculous<br /><br />Âπæ‰πéÊâÄÊúâassignmentÂÄãdistributionÈÉΩÈõÜ‰∏≠Ëµ∑ÊªøÂàÜÂ∫¶ÔºåprojectÊúÄÂ∞æoverall min 22/30, mean 26/30, max 28/30<br /><br />ËÄÉË©¶ÂÖàË¶ãÁúüËªçÔºåËÄÉË©¶‰øÇËÉåÊõ∏ÁÇ∫‰∏ªÔºåÂÖ∂Ê¨°Á¥Ñ15%‰øÇSoftwareÊó¢Design pattern„ÄÇ<br /><br />ÂîîÊòéÈªûËß£Ë¶ÅdesignÊàêÂíÅÔºåÂÜáÊÑèÊÄùÔºåÂ∞±ÁÆóassignment 90%ÔºåËÄÉË©¶10%ÈÉΩÂ•ΩÔºåÈÉΩ‰øÇËÄÉË©¶Ê±∫ÂãùË≤†„ÄÇ<br /><br />ÂèçËÄå‰Ω†d lab attendance, peer evaluation Â∞±Â•ΩÈáçË¶ÅÔºåÂÜáÂéª‰∏ÄÂÄãlab = ‰Ω†ËÄÉË©¶10ÂπæÂàÜ„ÄÇpeer evaluationÊØî‰∫∫Ë©±‰øÇfree riderÂç≥Áàõgrade„ÄÇÁµÑË£èÈù¢ÊØèÂ§ö‰∏ÄÂÄãfree rider, ‰Ω†Â∞±ÊÑàÈ´òÂàÜ(Free riderÊâ£Â∑¶Êó¢ÂàÜÊúÉÂàÜÊØîÁµÑÂì°)„ÄÇ<br /><br />ÊãéÂ•ΩGrade: ËÉåÂ•ΩËÄÉË©¶ÂÖßÂÆπ+ÂéªÈΩäLab+ÊãõÂ§öd FreeriderÂÖ•Ëá™Â∑±ÁµÑ(ÂèçÊ≠£projectÈªûÂ∑ÆÈÉΩÊúâ22/30)",
            "comment_workload": "Êú¨Ë∫´Ë≠òÂØ´Á∂≤È†ÅÊó¢‰∫∫workloadÊáâË©≤‰øÇC<br /><br />projectÊó¢Èáé99%Ëá™Â≠∏ÔºåprofessorÁî®2Â†ÇË¨õÂÆåangular jsÂ∞±ÁÆó„ÄÇ<br />50ÂàÜÊó¢ProjectÊúÉ‰ª§‰Ω†ÂÅöÂ•ΩÂ§öÈáéÔºå‰ΩÜ‰Ω†ÁùáÂÆåÊàëÂë¢ÁØáÂ∞±Áü•ÔºåÂîî‰ΩøÂÅöÂíÅÂ§öÈáéÊû∂Ôºå‰Ω¢ÈÉΩÂîîÊúÉcheck‰Ω†codeÔºåÂÅöÂÄãÊ®£ÔºåpresentÊØî‰Ω¢Áü•‰Ω†ÊúâÂë¢ÂÄãfeatureÂ∞±OK, videoÂÖ•Èù¢workÂ∞±ÂæóÔºåhard codeÈÉΩÂèØ‰ª•Ôºå‰Ω†ÊúâÂÜáÁî®angular jsÔºüË©±Áü•‰Ω†ÔºÅÊâÄ‰ª•Êú¨Ë∫´Ë≠òÂØ´Á∂≤È†ÅÊó¢Ë©±Â•ΩËºïÈ¨Ü„ÄÇ<br /><br />Áï∂ÁÑ∂ÔºåÊàëÂÄãÈô£ÂÅöÂîîÁü•‰Ω¢Áî®video gradeÔºåÂÅöÂà∞Ê≠ªÁãóÂíÅ<br /><br />lab, assignment Ëá™ÁÑ∂ÊúÉÊªøÂàÜ, ËÄÉË©¶ÁØÑÂúçÈÉΩOKÊó¢ÂîîÁÆóÂ§öÂîîÁÆóÂ∞ë„ÄÇ",
            "rating_content": 2,
            "rating_teaching": 2,
            "rating_grading": 1,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 7,
            "vote_count": 9,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "V1n7MBYWaVQ3nqch6TCeQ9upQ1MBbv9y",
            "semester": "2015-16 Spring",
            "instructors": [
                {
                    "id": 111,
                    "name": "LOCHOVSKY, Frederick Horst",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "JS",
            "date": "Aug 10, 2016",
            "title": "All bads go to assignment",
            "comment_content": "UML, Class diagram, MVC, stuff. Go google it software engineer.<br /><br />Language used: HTML, C#, CSS, SQL, &quot;WTF?&quot;, &quot;WHY?&quot;, &quot;COME ON YOU PIECE OF SXXT&quot;, &quot;GO GET VISUAL STUDIO OPENED FIRST!&quot;",
            "comment_teaching": "Fred is good at teaching, at least he is good at delivering concepts.<br /><br />However, the TAs were the other way around, uhm.... just forget it. Nobody took tutorials. I was just a fool sitting at the back bore to death.",
            "comment_grading": "The grading is super strict. The assignment is divided into a numberless of 0.1, 0.2, 0.3 etc. You did? point 1 point to you! You didn't, oh I hope the relating function could still work, otherwise -10 to you coz the whole thing didn't work as they expected! Boo......<br /><br />There were in-class exercises. Make sure you don't miss them. They are the easiest thing to do in this course.<br /><br />The grade is not bad though, I was expecting a C but you know what? A C+! Yeah! At least not a C#! Seriously, If you do average in midterms and project assignment, C+ B- is inevitable.",
            "comment_workload": "The heaviest workload course in UG COMP in my opinion. 1 Big assignment project, 2 midterms, and labs every week, no final and presentation. The labs are about the assignment though. <br /><br />I wish there would be a final rather than a second midterm. It is just like an early final, accompanying the assignment, the two deadlines at the end of the semester are perfect for killing your passion in pursuing to be a software engineer.<br /><br />The assignment is the KILLER. First, Microsoft. Second, god damn laggy visual studio. Third, god damn ASP.NET. Who the heck still use ASP.NET? I heard that the Fall sem 3111 was using Node.js....interesting...<br /><br />In short, if you like &quot;legacy thing&quot;, Spring. &quot;New thing, energetic?&quot; Fall. &quot;Meh, I don't even know what ASP.NET and Node.js is&quot; Fly! You fool.",
            "rating_content": 4,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": false,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "f00ly59HNK1q0Gp8pZX8hlfd15c8xKUE",
            "semester": "2022-23 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ricecrackie",
            "date": "Nov 06, 2022",
            "title": "A game of pure luck",
            "comment_content": "1. Introduction<br />2. Modeling Software Systems using UML<br />3. Software Development<br />4. System Requirements Capture<br />5. Implementation<br />6. Testing<br />7. System Analysis and Design<br />8. Software Quality Assurance<br />9. Managing Software Development<br /><br />Basically drawing diagrams + memorization",
            "comment_teaching": "Kenneth's teaching is fine. Not sure how is the TAs' teaching as I never attend the lab session nor watch the recordings.",
            "comment_grading": "Pre-lecture quizzes 10%<br />In-class exercise 10%<br />Labs 10% (8 in total)<br />Project 20%<br />Quiz(aka midterm) 15%<br />Final 35%<br /><br />I must say the announcement from TA and instructor are always contradicting the written material on canvas.<br /><br />Eclipse is used for labs and project but IntelliJ is also approved. However, the instructions for labs and project are very confusing and inconsistent. Your marks get deducted for something you didn't do and they didn't mention but they expected you to have done so. (They accept the member who setup project repository to submit project URL for lab5, but they didn't clearly explain what else should have be done for members who submit project URL.)<br /><br />Also, the project description writes &quot;You‚Äôll be given a set of data ‚ÄúStuPi‚Äù in csv file format with a record size of 100 student records. ...The project team has to design a program to distribute those 100 students into 33 project teams. &quot; and somebody ask whether we can expect the size of students is always 100. And the instructor says no??",
            "comment_workload": "Only the weekly pre-lecture quizzes and in-class exercises. The quizzes have 2 attempts and they will show correct answers. You get the score for in-class exercises as long as you actually worked on it, doesn't matter if it's wrong. The project might be a bit challenging if you are not familiar with java.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 2,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "jWwByU87qdZ4M5GXgh5KrUf3jHpkfmwT",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "{Curly Braces}",
            "date": "Dec 14, 2021",
            "title": "WTF is this...?",
            "comment_content": "Simply asking, WTF is this?<br />The course basically talks about what software engineering activities will do from the beginning.<br /><br />Syllabus<br />1.Introduction (L1)<br />2.Modeling Software Systems using UML (L2, 3)<br />3.Software Development (L4, 5)<br />4.System Requirements Capture (L6 - 9)<br />5.Implementation (L10, 11)<br />6.Testing (L12 - 14)<br />7.System Analysis and Design (L15 - 18)<br />8.Software Quality Assurance (L19)<br />9.Managing Software Development (L20)<br /><br />The order is messed up I would say. Why are you doing system analysis after testing? This, unless you told me you are not teaching these stages in order, or else it really makes no sense to me.",
            "comment_teaching": "Indeed, Kenneth is generous and tried his best to make us to have a good grade and reasonable amount of A-range as possible. He also tried his best to make the lecture videos with quality in the summer so that we can have a more relax-paced blended learning mode course.<br /><br />Then, onto slides. It is colourful. Just WAY too colourful. Sometimes some unimportant words are highlighted, which can confuse us when making notes. Also, as it is pdf version, the words that are supposed to appear after animation will not be there in the pdf.<br /><br />The TAs. Well, their tips on project are so useful (sarcasm intended). &quot;The truth lies in the dataset, make sure you provide the most COMPLETE and ACCURATE data&quot;, that's basically what exactly what our TA reiterates every time we asked questions about the project. I think this sentence will forever echo inside my brain.",
            "comment_grading": "Welp, Kenneth is generous with grades. But just *WAY* too generous. <br />This makes the mean *WAY* too high. Especially for exam, Kenneth even give tips on exam. This surely made some stress on&nbsp;&nbsp;us not to make careless mistakes. But who cares? It's all about guessing and luck because you can't read Kenneth and the TAs' minds.<br /><br />Grading scheme:<br />Class Quiz: 10%<br />Labs: 10%<br />Class Exercise: 10%<br />Project: 30%<br />Final: 40%<br /><br />My scores are as follows:<br />Class quiz, Labs, Class exercises: 100%<br />Project: 98.5/100 (Mean: ~91.1, SD: ~12.3)<br />Final: 79.7/100 (Mean: ~76, SD: ~6.1)<br />Final grade: A (91.4%)<br /><br />My group lost 1.5 marks in project because we generalized the use case diagram in Activity 1. WTF? That's what you told us to do in lecture, why do you punish us for doing that?<br /><br />Welp, as you can see the grade is generally good, or is it? Here is my teammates' statistics:<br />Teammate 1: ~90.5% in total =&gt; A-<br />Teammate 2: ~89.4% in total =&gt; B+<br />Yes, I am not joking here. 1% = 1 subgrade??? I don't know if it is just a special case or something, but it happened. I believe it is because too many people got nearly full mark in everything (except exam, of course), and had a small SD in final, resulting in such a tight grade range.",
            "comment_workload": "The workload I would say it is slightly tight.<br /><br />For quizzes, it is given 2 attempts and the correct answer will be shown. So in fact, student can basically randomly answer the question in the first attempt, and memorize the answer, and answer the correct answer on 2nd try. In fact, we don't even need to watch the lecture video to do the questions.<br /><br />For class exercises, Holy cow. The time provided is very tight. Especially for students who do their work on paper (i.e. me). Let's say you were provided 20 minutes to do the exercise, you need to leave about 5 minutes to scan and upload your work. So you actually have 15 minutes to do.<br />Luckily, you don't have to get the exactly correct answer to get the score. They give you score if you are doing something similar. If so, one can simply randomly draw some diagrams that's looks like what the question wants and get the score.<br /><br />For labs, they teach you something that are rather simple, like how to make GitHub repo, how to do commit, how to use Eclipse (Though I used IntelliJ in the end lmao), how to code some basic Java, how to make unit test blah blah‚Ä¶ Those things are actually easy if you have some basic knowledge on those, like done a project (e.g. COMP2012H), or went for internship before.<br /><br />For project, seriously, I say it is quite cursed. As I said in grading section, my group lost 1.5 marks as a punishment of generalizing the use-case diagram, while the lecture telling us to generalize cases that are too specific. Their borderline on this really shifts back and forth.<br />For the second activity, I must say the scale is small. The workload is about like 3 PAs from Java Programming course combined. Therefore, we can basically done the main core in 2-3 days. We even upload Gantt chart and Burndown chart that is made in like 2 hours by checking against our GitHub commit log, and still get full marks on documentation.<br />Sarcastically, that &quot;truth&quot; within the dataset, according to our TA said, actually means everything. We did not filter out any inaccurate data (e.g. sudden drop in number in &quot;accumulative&quot; data) and still get full mark in source code part. I searched up on the origin of the provided dataset, there already exist some errors like the aforementioned one. Indeed, complete and accurate data is what the client, i.e. the TAs want, but I must say this tip really put me in worry for sometimes.<br /><br />Exam, even though it is open notes, I am totally speechless. Kenneth even give us tips on exam, trivialized some questions on the exam. But still, ambiguity exist in the exam.<br />Firstly, the UML diagram ones, their model answer added multiplicity next to aggregation, while the lecture told us that aggregation already implicitly gave multiplicity so it is not necessary to write it down.<br />The State Machine Diagram question even give a quite misleading instruction, causing most of the students got it wrong (According to TA in-charge) and lose 1.8 marks (Indeed it seems small, but remember it is about 0.3 SD in this exam. It contributes to 0.72% of total grade score and, in this case, may cost you a sub-grade!).<br />These places surely makes the exam itself more than just cursed.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 2,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 5,
            "vote_count": 8,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "lQFA8XOfuMos76jHjrDIiXVXOLeWCIFg",
            "semester": "2017-18 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "toxicboi",
            "date": "Jun 20, 2018",
            "title": "Easy course, but still very informing",
            "comment_content": "Most of the content is very theory based. You will learn how teams work in Software Development companies. There was way too much theory. <br /><br />UML Modelling<br />Development<br />Requirements Capturing<br />Implementation<br />Testing<br />Analysis &amp; Design<br />SQA<br />Project Management<br /><br />A lot of it is very relevant though if you plan on working a tech job. <br /><br />The Project is worth 50% and uses Java (thank lord not ASP). There will be some DIY tutorials for it, but it is very easy to do intuitively learn it. Github tutorials are the ones you need to pay good attention to. Thanks to this course, I have finally gotten around to learning it, and it is something that you will definitely use in the future.",
            "comment_teaching": "Kenneth is funny, but the course content is boring as hell, and it gets really tough to focus on class. But other than that he is really nice, understanding and has definitely made this course better than what Daddy Lochovsky was doing. <br /><br />Peter is really good in the labs.",
            "comment_grading": "Exercises (in-class practice exercises) - 10% (After you answer exercise questions for 12 lectures, you will obtain full scores)<br />Almost every class, the professor will hand in an in-class exercise. You can do it then, or if you didn't pay attention, bring it to next class and copy the solutions. These exercises help a lot for the final though, so might as well pay attention. You only need to do about half of them. <br /><br /><br />Labs - 10%<br />Quite easy, follow it yourself labs. I wished they would be more to learn. <br /><br />Project: <br />Project SIgn Up - 2%<br />Activity 1: System Requirements Specification - 15%<br />Simple UML and Use Case diagram<br /><br />Activity 2: System Implementation &amp; Testing - 30%<br />A full-fledged Java project with GitHub integration. <br /><br />Meeting Minutes and Gannt Chart - 3%<br /><br />Final Exam - 30%<br />The professor will give the MCQ questions, learn them well. <br />Rest will be a lengthy yet easy exam, the professor will tell you what type of questions will come so that you don't need to focus much on the theory. But mean was quite high. <br /><br />Got full in everything<br />Project - 46/50 (should have done the unit testing)<br />Exam - 85.4/100 (mean 79.9)<br /><br />Got B+, pretty happy, if only our team had tried to do something about the unit testing in the project, would have been A. Professor was pretty lenient with the marking.",
            "comment_workload": "The workload is aite. Just need to really pump it up if you have left your project until the end. And by that I mean really. My team and I worked multiple hours over a week, trying to get it done and stressing out. But we did it.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 3,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "ySCWn6GYLwT8HwHq5DXFgQNZ8DUXl96j",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Bael",
            "date": "Aug 24, 2022",
            "title": "",
            "comment_content": "Teach programming as a team<br />-How to draw Gantt chart, use case diagram, flow chart, etc.<br />-Introductions of testing,&nbsp;&nbsp;risk management, design pattern, etc.",
            "comment_teaching": "Really short pre-recorded pre-lecture videos are available which summarize most of the contents of the lecture.",
            "comment_grading": "Pre-lecture quiz: Full<br />Mid-term quiz: 32/50 (mean 39)<br />Project: 100/100 (mean 96)<br />Final exam: 75/100 (mean 70)<br />B+",
            "comment_workload": "-One lecture and lab each week.<br />-Only 8 labs.<br />-20 Pre-lecture quizzes. (easy)<br />-One mid-term quiz and final exam. (difficult for drawing graph questions)<br />-One Java group project with almost no instructions on how to use Github, JavaFX, and Java.<br />Workload D because of the project, have to use a lot of time to do self-study.",
            "rating_content": 3,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "fuP60ehjnfcDfho2JuSKc9qnY1eO74CA",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "asdfghjkl123",
            "date": "Dec 26, 2021",
            "title": "Better grading than expected",
            "comment_content": "Lectures' topics include: <br />1. Introduction<br />2. Modeling Software Systems using UML<br />3. Software Development<br />4. Domain Modeling and Use Case Modeling<br />5. Use Case Specification and Non-Functional Requirements<br />6. Implementation<br />7. Unit Testing, Integration Testing, and System Testing<br />8. System Analysis and Design<br />9. Design Patterns<br />10. SQA <br />11. Managing Software Development<br /><br />This course only teaches about the most fundamental and basic things about software engineering. To be honest, I don't actually learn much new things from the lectures. The powerpoint slides are hard to read and too colourful. Personally, I don't prefer this kind of slides, but I understand that it is difficult to have clear and&nbsp;&nbsp;organised notes for software engineering.",
            "comment_teaching": "We have to watch pre-lecture recording videos on Canvas before attending every weekly lectures. During the lecture time, we have to do in-class practice exercises. <br /><br />Kenneth only reads nearly every words on the powerpoint slides. He seldom gives extra explanations on some points. I have to Google myself if I want to know more or I have doubts on some certain points.&nbsp;&nbsp;He is not teaching badly but definitely not the best. <br /><br />Kenneth is nice and really wants to give us good grading. During lectures (not pre-lecture recordings), he sometimes says that this kind of question will/won't be appeared in the final exam. Before final exam, he provides us a set of MCQs, which some questions will appear in the final exam. Also, he talks about the question type of every final exam question, like Q4 is about drawing UML, Q7 is about unit testing. During final exam, he even gives us hints. <br /><br />For the TAs, I am a bit disappointed. Firstly, it is good that we have a telegram group and thanks for that. However, TAs usually replies students' questions after a long period of time, like a few hours later or a day later. For the labs, which is prepared by TAs, sometimes there are unclear instructions. Especially for Lab 7, it is a nightmare. Many students have troubles when trying to get the expected results. When asking the TA in charge, the TA only says the lab exercise should work... When students ask questions about this lab, the TA sometimes relies something irreverent. Finally, a student, instead of that TA, solve the problem of this given lab.",
            "comment_grading": "Course Requirements:<br />Pre-Lecture Quizzes 10%<br />In-class Exercises 10%<br />Labs 10%<br />Project 30%<br />&nbsp;&nbsp;&nbsp;Activity 1 5%<br />&nbsp;&nbsp;&nbsp;Activity 2 25%<br />Final Exam 40%<br /><br />My grade:<br />Pre-Lecture Quizzes 10/10<br />In-class Exercises 10/10<br />Labs 10/10<br />Project (mean: 92.09/100)<br />&nbsp;&nbsp;&nbsp;Activity 1 30/30<br />&nbsp;&nbsp;&nbsp;Activity 2 70/70<br />Final Exam 77.9/100 (mean before score appeal: 75.33 (combine with COMP3111H))<br />Overall 91.16% --&gt; A",
            "comment_workload": "Less workload than a normal 3 credit courses<br /><br />Pre-lecture Quizzes: <br />Easy with all MCQs. Given two chances, after answering for the first times, the correct choices of MCQs are displayed. So, just simply screenshot it and try for the second time. <br /><br />In-class Exercises:<br />No matter do the exercises wrongly or correctly, marks will be given. That is if you attend lectures, you should be able to gain the marks for in-class exercise. <br /><br />Labs:<br />Theoretically, all labs can be finished very fast. Not all labs have to be handed-in. <br /><br />Project:<br />The project doesn't really help me to understand more about the content of this course. It is a team project (Java) but can finish it in 2-3 days. The most difficult part may be the use of Eclipse (really baddddd). <br /><br />Final exam:<br />Open-book. Hints are given before and during the final exam. I am speechless with the marking scheme, even for the TAs, they can't explain about the solutions...",
            "rating_content": 2,
            "rating_teaching": 3,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "eQL2wnSP0KpylzKBEtakdSx8ElwFoi0G",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "AW123",
            "date": "Jun 05, 2021",
            "title": "",
            "comment_content": "Topics:<br />1.Introduction<br />2.Modeling Software Systems using UML<br />3.Software Development<br />4.System Requirements Capture<br />5.Implementation<br />6.Testing<br />7.System Analysis and Design<br />8.Software Quality Assurance<br />9.Managing Software Development<br /><br />Comparing to other COMP courses, it covers more conceptual items such as UML modelling and Agile development process instead of mathematics and coding. It feels like an advanced course of ICT in DSE",
            "comment_teaching": "Lectures are provided with pre-recorded videos. Since the professor has edited the video to minimize the error, I think the presentation and fluency are better than a real-time lecture.",
            "comment_grading": "Unlike other COMP courses, there is no definite answer for the final exam in questions such as Use case modelling. As a result, the marking scheme is not very consistent and convincing as well. <br /><br />Quiz: 88/90<br />Lab: 8/8<br />Project: 29.5/30 + 48/60<br />Final: 14/15 + 48/60",
            "comment_workload": "Overall speaking, the grading is lenient as my overall course grade is just slightly above the mean. Nonetheless, I still received a B+ and it is rather lenient comparing to our COMP course.<br /><br />2 Lecture quizzes per week (Asking simple questions from the lecture notes)<br />1 Lab work per week <br />1 Project (quite heavy as we are designing software from the beginning)",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "nYP6OKUkMGgmTvMegLplPmxXqPRYhv2y",
            "semester": "2014-15 Spring",
            "instructors": [
                {
                    "id": 131,
                    "name": "QU, Huamin",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "allen",
            "date": "Sep 21, 2015",
            "title": "",
            "comment_content": "It is about software engineering theory, concept and tool, such as water flow model, agile development, UML diagram, design pattern, testing and etc. <br /><br />Project: calendar software using Java Swing. One team four students. It is related to lectures very little. It seems like the topic and programming language changed in the next semester.",
            "comment_teaching": "TA help us a lot solving technical problem in project. <br /><br />Professor can help student understand the content in slides better and his teaching is quite efficient like his other courses.",
            "comment_grading": "Since a few students take the course in spring, it is absolute grading. <br /><br />The project and exam is important. The exam is not too difficult but need to memorize many thing in slide. <br /><br />The project is graded by how many test passed in demonstration. If it is programmed in a reasonable way and follow the instruction carefully, most test cases can be passed. Also, it is a good idea to think about the bonus part if only a few group in that semester.",
            "comment_workload": "The project take lots of time if teammates is not good at programming. <br /><br />The exam is relative easier but need to spend some time for memorize key point in slides.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "o7gYYtsTCsK8SY9MnsbOzdRsGJT1BopV",
            "semester": "2022-23 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "sleepingbag",
            "date": "Dec 28, 2022",
            "title": "Not bad course",
            "comment_content": "There are introductions about how to translate requirements from application domain to technical domain, how to translate technical domain to implementation details, how to plan the project and what to beware of when doing the planning, what action to take to avoid cost for developing the project, etc. You'll also get experience with a group project that involves designing UI, implement functions, using github, write requirement description to discuss with the customer (TA), draw GANTT chart, do testing.... Basically many taught content could be seen in the required element in the project.<br /><br />The course tries to cover the entire lifecycle of software development. It is really hard to cover all of them while giving students some good practice on each topic. I agree that simply study those theories but not actually practicing could lose a lot of effect on learning, but this is hkust's plan for CS student and all what professor Kenneth is to try to give us everything in a course. I believe Kenneth and the TA spend a lot of time designing the project to let student get as much hands-on experience as possible.",
            "comment_teaching": "It's blended learning mode: watch video before class and do the lecture exercise during the class. <br /><br />To be honest the slides are hard to study, more specifically the slides are not designed for students to study for the exams. However the slides do provide sufficient information about software engineering.",
            "comment_grading": "I give an A here to address how large the A+ range is. After revealing the score for the final, I think my letter grade could be between A- to A, but eventually turn out to be A+. If you want to know how the A,B range is distributed, you might need to refer to other posts.<br /><br />My suggestion on getting a good grade is:<br />1. For midterm study quiz questions and beware of important parts in the slide, try to memorize them if possible. Midterm is easy and shouldn't get a low score<br />2. For project, try to get almost full mark. Many teams get full mark so I believe if you scheduled it well it shouldn't be hard to get almost full. Apart from following the provided instructions, it is important to build the project in a way that makes sense to you in each part. Eventually there would be a project demo where you need to explain why you design to do something.<br />3. Final: It's the most important part, there are really long descriptions for the problems for drawing diagrams. To study it's better to get used to capturing necessary information for each diagram in a long description. I think it's indeed a little bit based on luck but that shouldn't influence too much if you study well.",
            "comment_workload": "Lecture exercise + Quiz: Really light workload<br />Midterm + Final: Same as other courses<br />Lab exercise:&nbsp;&nbsp;takes around 1 hour for each exercise, 7 in total<br /><br />Project = Activity 1 ( hand in a document ) + Programming + Activity 2 (another document) + A chill demo<br /><br />Activity 1: It would take around 3-4 hours because it's the first time for student to draw the class diagram, write user requirement specifications, etc. But it's not really difficult.<br /><br />Programming: I think most of time taken is for the discussion with&nbsp;&nbsp;the teammates. The assignment itself is not hard at all. But you have to wait for your teammate or discuss how to combine the work from two people, etc. <br /><br />Activity 2: If you do the programming well, activity 2 is easy.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": true,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "H5qjsFEw2b3CDitbLv30VK7ddKclGRau",
            "semester": "2016-17 Spring",
            "instructors": [
                {
                    "id": 111,
                    "name": "LOCHOVSKY, Frederick Horst",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ÈòøÈÅì",
            "date": "Jan 23, 2018",
            "title": "",
            "comment_content": "Content is out-dated and we were forced to use ASP.net. You can get away with reading powerpoint slides and not going to class.",
            "comment_teaching": "Prof. Lochovsky is pretty bad at teaching and sometimes confuses himself. He makes simple mistakes and ended up in the hospital because of health issues this semester.",
            "comment_grading": "The midterms and finals were super easy, but most of the grading depends on the final project anyways. Don't procrastinate and choose your teammates wisely.",
            "comment_workload": "Not much work aside from the project and you can complete all lab assignments just by following along and copy pasting. As long as you find reasonably good teammates you should be able to finish the term project.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "4UmZoZ7H0uOfbi4O80ws6p3UyISXfkgV",
            "semester": "2017-18 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "HarrySze",
            "date": "Jan 22, 2018",
            "title": "Better choose your groupmates wisely",
            "comment_content": "The content is quite boring and you need to memorize most of them in order to get a good mark in mid-terms.",
            "comment_teaching": "Professor is fine but still the course material is too boring which downgrades the lesson experience.",
            "comment_grading": "Grading:<br />2 mid-terms<br />1 Individual Assignment<br />7 labs<br />1 Group Project (including presentation)",
            "comment_workload": "The workload of this course is very heavy. First of all, the group project is about making a LINE chatbot which is mainly written in Java. Professor will not talk much about Java and if you don't know much about it, you need to learn it yourself. Someone once said that it is a course for you to distinguish freeriders and I agree.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": false,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "7aGgyglTz2u5oqZVti5wbEaxbSbqoyPE",
            "semester": "2017-18 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "iebardarov",
            "date": "Jan 09, 2018",
            "title": "",
            "comment_content": "Content is very much related to Computer Science and it is base principles thay everyone needs to know. Some of them are a bit boring and is hard to follow during the lectures.",
            "comment_teaching": "The teacher is the best one I have had in UST. Even though the material is boring sometimes the Sim makes sure that you are very well entertained during lectures.",
            "comment_grading": "The grading is weird. And a bit unfair I would say.",
            "comment_workload": "The workload is very high. There is a lab every week and the project is pretty big. I had some problems with my teammates which made it even more tough.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "nIjWECz0DlEsqZN7lTs6mvtxPYyZDiEs",
            "semester": "2017-18 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "LinkedList",
            "date": "Jan 01, 2018",
            "title": "Very High Workload 's Compulsory Course",
            "comment_content": "content are generally related to computer software engineering issue, refactoring or some working models, the beginning parts(MT1) of this course I give D because it s totally useless and just like blow water.<br /><br />The later part(MT2) I give B because it 's really related to programming and more logical.",
            "comment_teaching": "For the lecture, Kim Sung is okay.<br /><br />For the project, however as well as LINE 's loading speed <br />may not respond immediately, but the TA would give you 0 immediately instead of waiting for the response.",
            "comment_grading": "grading is normally Computer Science grading, nothing to comments.",
            "comment_workload": "Very High workload.Since all the work build it by yourself and your mates.Especially the deadline always near the midterm exam and assignment deadline.<br /><br />So Time management and manipulate resource of manpower are indeed if you want to perform well in Project.<br /><br />Moreover, the quiz 's content is not easy.<br /><br />So, 1 course = 2 Computer Science Course I think.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 4,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "MHoOLRJwlu7sJEjC7RvNzfyvyBndNQOD",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ken fung",
            "date": "Feb 01, 2017",
            "title": "",
            "comment_content": "Talking about how to develop a system. The content is good without the project. The project cause the workload very heavy and no time to learn the lecture.",
            "comment_teaching": "lecture and tutor and group project are totally not related...",
            "comment_grading": "The most important part is the group project. However, at the last moment it only require a video. You just need to show it work but it dont need actually work.",
            "comment_workload": "It will be very very hard to develop a website in these short time. Dont forget you have other course.",
            "rating_content": 4,
            "rating_teaching": 3,
            "rating_grading": 2,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "nlBdg5kg7lhYr2fhdWJ1mdu0QMoXYg0G",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Lee Wasin",
            "date": "Jan 24, 2017",
            "title": "",
            "comment_content": "The content learnt is actually useful because they are the basic steps of what you will be doing if you want to study and work in web development.",
            "comment_teaching": "Its actually funny and relaxed in his lecture. However, u may not understand what he is doing in his demonstration because it is too fast to see.",
            "comment_grading": "It is horrible. The mean is so high that u need overall around 90% to get an A range. For mean, it is around C+ to B- which is normal but its quite hard to get mean in this course.",
            "comment_workload": "Super heavy workload. The project itself takes around 4-5 hours per week and if you are assigned with something you are not familiar with inside your group, you may take even more time to study the matters and it will further increase your workload.",
            "rating_content": 4,
            "rating_teaching": 3,
            "rating_grading": 2,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "9VpdBjJXqrisWHbU9vC61uFOMu4JoBqh",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Gavinchan39",
            "date": "Jan 11, 2017",
            "title": "",
            "comment_content": "ÂÖßÂÆπÂ•ΩÂ§ö,ÊØèÂ†ÇÈÉΩË¨õÂ•ΩÂ§öÈáé,ÊâÄ‰ª•‰∏ÄÊúâÂ∞ëÂ∞ëÈáéÂîîÊòéÂ∞±Â•ΩÊòìÂç°Â∑¶‰øÇÂà∞ÊúÄÂæåÂÖ®ÈÉ®Áî©Êôí<br />ÂÖ•Èù¢Ë¶ÅÊé•Ëß∏HTML,CSS/Bootstrap,Â∞ëÂ∞ëLinux,JAVASCRIPT,angular,Firebase, ÈªûÁî®GITHUBÁ≠âÁ≠â.Â∞±ÂíÅÁùáÈÉΩÁü•Ë¶ÅÊéÇÂ•ΩÂ§öÈáé",
            "comment_teaching": "Lecture note ÂØ´ÂæóÂ•ΩË©≥Á¥∞,Âõ†ÁÇ∫‰øÇquoteÂá∫Èù¢dÊõ∏. Âë¢Ê®£ÂΩåË£úÂ∑¶‰Ω¢ÂÄãÁ®Æfreestyle ÁöÑÊïôÊ≥ï.ËàáÂÖ∂Ë©±‰øÇLecture,Êõ¥Â§öÊôÇÈñì‰øÇDemo,Âë¢Â±§ÊúâËæ£ÊúâÂîîËæ£Âêß.<br />Âç≥‰ΩøÂîî‰∏äÂ†ÇÁùánoteÈÉΩÂèØËÉΩÂ∑≤Á∂ìË≠òÊôí. ÊúâDÂú∞Êñπ‰ª≤ÊúÉdefaultË¶∫ÂæóÂ≠∏ÁîüË≠òÊôí,ÊâÄ‰ª•ÂÜáÈªûË¨õ,‰ΩÜÊúÉÂïèÂ≠∏ÁîüÊòéÂîîÊòé.Áï∂ÁÑ∂Â•ΩÂ§öÊôÇÈÉΩ‰øÇÂÜá‰∫∫ÂïèÂïèÈ°åÊâÄ‰ª•Áï∂Ë≠òÊôí<br /><br />d tutorial Â∞±ÁÆóÂêßla......Âí™Êèê",
            "comment_grading": "Â§ßÈÉ®‰ªΩÂàÜ‰øÇPROJECT(50%),mid-term Âêåfinal Áõ∏Â∞çÊØîËºÉÂ∞ë<br />ËÄÉË©¶È°åÁõÆÂ§öÊï∏‰øÇÂá∫Ëøîlecture ÊïôÈÅédÈáéÂêåexample,ÊâÄ‰ª•ÂîîÈõ£Êêû<br />projectÂè™Ë¶Å&quot;Ë≠òÂÅö&quot;,ÂÖ∂ÂØ¶workloadÂîîÂ§ß,ÊØîÂàÜÈÉΩÂîîÁ∑ä,‰ΩÜÂ•ΩÊòìpk<br />ÂÖ∂‰∏≠Êúâ‰∏çÂ∞ëÂÅá,Â§ß,Á©∫.....Âõ†ÁÇ∫Áúü‰øÇË¶ÅËá™Â∑±Áî®dÂ≤©Â≤©Â≠∏ÁöÑÈáéÊï¥Âà∞d‰ººÊ®£ÁöÑÈáéËøîÈªéË∂≥Â§†ÂÅöÂà∞p‰øÇÂà∞.....",
            "comment_workload": "Âë¢ÂÄãË¶ñ‰πé&quot;Ë≠òÂîîË≠òÂÅö&quot;la<br />&quot;Ë≠òÂÅö&quot;Â∞±Áúü‰∫¶ÂÅáÊôÇÂÅá‰∫¶Áúü<br />&quot;ÂîîË≠òÂÅö&quot;ÊôÇÈáéÈáéÁ°¨È£üworkloadÁï∂ÁÑ∂Èáç<br />Âè¶Â§ñ‰ª≤Ë¶ÅÁùá‰∏ãgroupmateÈªûÊêû",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 2,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "nPmSDqx47ICO0riEHZKitlN1aV03xUJ4",
            "semester": "2015-16 Spring",
            "instructors": [],
            "is_author": false,
            "author": "logchan",
            "date": "Jan 04, 2017",
            "title": "Fred or Kim, that is a question",
            "comment_content": "At the moment this course has (at least) two versions. I took the Fred one, but also learnt a lot about the Kim one.<br /><br />Common:<br />Software design principles and patterns.<br />Software development workflows.<br /><br />The common things are basically memorization, like most of the COMP courses in UST.<br /><br />Fred: lab and project is ASP.NET WebForms website. You learn latest C#, T-SQL and write a somewhat complicated website to satisfy a long and vague requirement document. Closer to large, old, non-Internet enterprises in the real world.<br /><br />Kim: lab and project uses latest frontend libraries (e.g. ng), No-SQL db and Java to build an app with both web and Android clients. You have more freedom (and obligation) to show your creativity. Closer to newborn, Internet enterprises.",
            "comment_teaching": "Fred is rather nice, despite being a bit arrogant.<br /><br />You can expect clear explanations. The in-class practices are quite useful for understanding the content and preparing for the exams.",
            "comment_grading": "Personally, I prefer Fred when it comes to grading.<br /><br />Fred: grading scheme is clear and &quot;definitive&quot;. There is good reason for each point you lose in your project (output does not match requirement). Although the requirement statements are vague, you can clarify them with dozens of emails during the semester. In other words it is possible to get full mark in project if your group programs well.<br /><br />Kim: TAs' taste will have a big impact on your grade. How is your poster? How is your unique feature? What's your effort of implementing if you use another library? These subjective things can lead to rather unfair outcomes. To make things worse, different TAs have different standards because they did not get on a common ground before grading (Fall, 2015-16). And the professor did not participate.",
            "comment_workload": "No matter who you choose, you should expect somewhat heavy workload for the course project.<br /><br />To ease your life, find teammates that are NOT FREE-RIDERS (you shall be yr 2 or yr 3, so you do have some friends to work with, don't you). Even better, find people with prior software development experience to avoid the entire team running into troubles.<br /><br />Exams are easy, but some questions feel like lottery. Try to memorize everything and you will be fine.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "C5JoVetMcXO2hTULhqzozDzX7DHR8Li7",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "Aye",
            "date": "Dec 31, 2016",
            "title": "Worst course ever",
            "comment_content": "Project+Memorization.<br />This course is well-matched with MECH1906 in bad content, bad teaching and bad grading.<br />Contents are mentioned in other reviews. I just have something to say about the grading.",
            "comment_teaching": "Don't know. Seldom go to class because the class was **<br />He doesn't reply emails. Can't get in touch with him.",
            "comment_grading": "Worst grade ever I have got. <br />Find good teammates and memorize everything before exams. If you don't, you will easily fall to C range because everyone's score is high and total mean is ~ 83% (C+ maybe? Above mean is already C+). I think it is usually B- or C+ for mean. Get mean and want B range? No, take C+. He doesn't give good grades. <br />You can compare this course with COMP3511, their gradings are kind of similar.<br />I know no matter how bad the course is, there are always people who get good grades (except for some unusual courses). I just want to say that if you are not good at memorization / you hate lots of memorization, take these courses during exchange.",
            "comment_workload": "For me, just the project. I didn't spend long time on exams because of other more difficult exams which focus on thinking rather than memorization, GG. Besides, project cannot make up for bad final, GG.",
            "rating_content": 1,
            "rating_teaching": 1,
            "rating_grading": 1,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "Z4pfkwDElBUaHp12VH5yXmj5RkAYUeUM",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "KOMAN",
            "date": "Dec 28, 2016",
            "title": "Software Development Course",
            "comment_content": "The Main content in Fall Sem:<br />HTML,CSS,ANGULARJS<br />Version Control<br />Software Development Process<br />Design Pattern<br />Testing<br />Requirement<br />Refactoring<br /><br />Attending tutorials is optional.",
            "comment_teaching": "Only Very High Level Introduction<br />Self-Learning....",
            "comment_grading": "50% Project with 5-6 Classmates<br />10% Assignments<br />20% Final<br />10% Midterm<br />10% Lab<br />Bonus<br /><br />Important Statistics<br /><br />1) 78% - 82% (Around mean) &gt; C+ <br />2) A Range:<br />(My observation)<br />90.5% &gt; A-<br />92.5% &gt; A<br />~95% &gt; A+<br /><br />3) Project (After peer evaluation)<br />Mean: 44.2<br />High: 50 (gain marks from free riders)<br />Low: 22.5<br />SD: not very large",
            "comment_workload": "Workload is large so I want to give some opinions to handle them well. <br />(Suppose the content will not change next fall sem)<br /><br />Project :<br />There are 3 Phrases.<br />1) Create Slides for your group application<br />2) Test Cases &amp; Git commit history<br />3) Presentation with Video instead of Real DEMO&nbsp;&nbsp;&nbsp;&nbsp;(this year)<br /><br />Make sure you can get FULL MARKS in Phrase 1 &amp; 2. Because they are easy for you to get these marks. even 1 mark is important in this course.<br /><br />Exam :<br />1) No multiple choice question<br />2) Memorizing is required<br /><br />Possible Question(s) :<br />Midterm <br />1) State the Git flow for large project<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Remember Code Review is required<br />2) Given this situation, which software development process is suitable<br />&nbsp;&nbsp;&nbsp;&nbsp;- If you know the requirement of the product well, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Waterfall may be a good choice.<br />&nbsp;&nbsp;&nbsp;&nbsp;- If you always change the requirement,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Agile may be a good choice ..<br /><br />3) Draw UML for Design Pattern (observer pattern..)<br />&nbsp;&nbsp;&nbsp;&nbsp;- You can find some UML example in notes<br />4) List 2 Linux Commands and the use of them<br />&nbsp;&nbsp;&nbsp;&nbsp;- for example:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1) command : cd<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use : change directory<br />5) What is functional/non functional requirement ....<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- give an example about these requirement<br />Final<br />1) What is software testing? Advantages?<br />&nbsp;&nbsp;&nbsp;&nbsp;- you can find them in notes<br />2) Design Pattern Questions (with UML)!!! <br />&nbsp;&nbsp;&nbsp;&nbsp;- Ask you to write an adaptor class<br />3) Understand the design principle for each pattern<br />3) What is Assertion? What is Error handling?<br />&nbsp;&nbsp;&nbsp;&nbsp;- How to do Error handling?<br />4) Basic Path Testing<br />5) Symbolic Testing<br />6) What is refactoring? Advantage?<br />7) White Box Testing V.S. Black Box Testing<br /><br />Conclusion :<br />If you want to learn something in this course, Focus on the project with your teammates. You can learn how to use git, how to do testing, how to work with your teammates and some software development tools such as Slack and Github.<br /><br />You have to know the format of final presentation.<br />For example:<br />If you just present using a video, you should not spend much time doing validation and backend stuff because no one will check your code and see if your codes are good or bad. You should do your layout beautiful and create more gimmick things.<br />I waste more time on improving code structure and work flow but no one cares them. (We thought the format was REAL DEMO)<br />(Remark: At least 2 presenters in your group)<br /><br />If you want to get a good grade, <br />- Memorizing the lecture notes <br />&nbsp;&nbsp;(examples and definitions) is needed. <br />- Go to Review Lecture. <br />- Get Full lab points<br />- Get Full marks in Assignments<br />- Try to get Bonus points if you have time<br />&nbsp;&nbsp;(But it is very difficult)<br /><br />I hope these opinions can help reduce your workload because you can allocate time efficiently. But If Kim sees this review and totally change the papers, ...Sorry!<br /><br />My overall marks is 92%",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 5,
            "attachments": []
        },
        {
            "hash": "vxSK45RTfaXAjOFaotph2oBGkfae6gHb",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "gossipgirl",
            "date": "Dec 28, 2016",
            "title": "",
            "comment_content": "The course content might be important in the software engineering world, but classes are a pain to sit through. Topics include:<br />HTML, Cloud Computing, Bootstrap, Software Development Cycles, Design Patterns, Testing, Refactoring.",
            "comment_teaching": "To be honest, I didn't like the teaching a lot. Slides are very ordinary and its difficult to understand concepts from the slides. In addition, the sheer # of slides per topic makes it long. <br />Midterm and Final are completely unrelated to the project and so most material is seen just before the exams. (likely to be forgotten very easily).",
            "comment_grading": "Grading isn't that bad. Prof. Kim said its absolute grading which was okay. <br />2 Assignments 10%<br />1 Midterm 10%<br />10 Labs 10%<br />1 Final 20%<br />1 Project 50%<br /><br />Getting high scores in the project isnt very difficult as long as you have a good team and all requirements are satisfied. <br /><br />~90% A-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~92 A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~ 95% A+",
            "comment_workload": "As expected, workload is high, but as compared to the some other courses, its a much &quot;easier&quot; course to get an A range grade, so good scores will definitely get you a good grade. <br /><br />P.S. you'll get sick of the course",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 10,
            "attachments": []
        },
        {
            "hash": "bW2lWRkZHC4qLifNMM8R6A3wTM1zkgD9",
            "semester": "2015-16 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "s207152",
            "date": "May 24, 2016",
            "title": "",
            "comment_content": "Some unix basics, web stuffs such as html, css(Bootstrap), js(AngularJS), online database(Firebase).&nbsp;&nbsp;Then it focuses on development process, UML diagrams, design patterns, refactoring, white/black box testing, Debugging with several tools, WHICH ARE USELESS TO REAL LIFE.",
            "comment_teaching": "Teaching of prof is quite interesting.&nbsp;&nbsp;Not bored, nice guy, feels happy when someone called him handsome, but the topics covered on lectures are only related to exams.&nbsp;&nbsp;Project and lab are self-learning :)&nbsp;&nbsp;Some TAs in tutorial suck that they are just repeating what tutorial notes said.",
            "comment_grading": "Midterm I 17.8/20 (lots of memorizing) just above mean.<br />Midterm II 17.6/20 (memorizing + patterns applying) just above mean.<br />Lab 10/10 (do it at home and demo in lab is enough)<br />Project 50% above mean. <br />Details<br />&nbsp;&nbsp;&nbsp;Personal homepage on AWS: 5/5 (five pages)<br />&nbsp;&nbsp;&nbsp;Individual testing 5/5 (+1 for identifying a major bug up to 2 points)<br />&nbsp;&nbsp;&nbsp;Requirements presentation: forgot(should be half)/10<br />&nbsp;&nbsp;&nbsp;Milestone 1 (minor updates): forgot(sth like 7.5)/10 <br />&nbsp;&nbsp;&nbsp;Milestone 2 (major updates) + Poster presentation: 20/20 <br />&nbsp;&nbsp;&nbsp;Extra credit: +1 for accepted pull request (up to 5), +2 (max) if used in the class room (Got none)<br /><br />Grade: A-<br />Grade is quite good actually.",
            "comment_workload": "!!!SUPER HEAVY WORKLOAD!!!<br />Though it requires 4 credits, it actually has 6 credit course workload :)&nbsp;&nbsp;We knew nothing about project and we have to learn all related stuff by ourselves.&nbsp;&nbsp;All weekends are given to the project.&nbsp;&nbsp;Google really helps , cuz it is the only thing that could help you :)<br />Project: building a real time question room for web client and android client using Bootstrap, AngularJS, Firebase, and Android Studio.&nbsp;&nbsp;Though you have lots of groupmates, it really doesn't help if none of them have basic knowledge about web or android.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "1que7r94jeY4Bj1mcFAf9AQnRSTvH04L",
            "semester": "2015-16 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "omg123123",
            "date": "Jan 25, 2016",
            "title": "",
            "comment_content": "didnt really teach much thing related to the project in the lecture , need to discover yourself or attending the tutorial/ lab to know more",
            "comment_teaching": "The explanation on the concept is clear.",
            "comment_grading": "The first midterm exam is directly asking the knowledge on the lecture notes and it should be fine if you remember all the materials that is covered in the midterm.",
            "comment_workload": "2 Mid term exam and 1 group project .<br />For the project , 6-8 member will form a group to work on the improvement of the question room . So the workload should be fine if each member contribute to one task.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "JXiIx19zFQihxQo8cBSZAV6slyST8okV",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "tooooooo",
            "date": "Aug 25, 2021",
            "title": "i think it is a good course...",
            "comment_content": "very theory-based content, boring as fuxk, but it is better to know if u want to be a soft devs?? i think<br /><br /><br />Methods and tools for planning, designing, implementing, validating, and maintaining large software systems. Project work to build a software system as a team, using appropriate software engineering tools and techniques.",
            "comment_teaching": "professor is nice, will give extra time for the project<br />every week watch video and attend lecture to do exercise, some exercises is not easy, but as long as u write something you will get marks, like attendance.",
            "comment_grading": "1 project<br />1 final <br />no midterm<br />inclass exercises<br /><br />everything around mean, B+, not so bad, good for comp course",
            "comment_workload": "main workload is the project and weekly video, not very large,<br />but for project, need some time to wirte code as the guidance is not enough, you have to search online to do it, need to write some java codes.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "9PyV1o2VXUDzVkFpOdVpPXOal7iQeB5R",
            "semester": "2018-19 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Honam",
            "date": "Jul 28, 2019",
            "title": "Learn Design Principle and Programming which is good for work",
            "comment_content": "The content is about software engineering, from design principle to coding pattern, and about some company standard. It show you the whole picture of how a software/system is built. About the planning, documentation, and much more etc. You will find you know more behind that a project is not only coding but much managements behind. The course is much about theory, like coding pattern and design principle that you may found not clear but only know is useful when you in touch with real system/software or code behind.",
            "comment_teaching": "I pretty like the teaching style of Kennth, he prepare one lecture ppt for each lecture which is well planned for each lecture, the content finished perfect every lecture which is very comfortable in learning. Also he provide many in class exercise, not only for attendance and give you free course marks but also help understand what had learnt in the lectures and revise.",
            "comment_grading": "Free course marks for in class exercise if you attend the lesson. <br />Having a project although it designed to minimize the effect from freerider, it is a project that required collaboration, so that would still affected so how, especially it use git.<br />Having review session and notes to mention some potential MC question, and not difficult for you if you attend lessons.<br />I rate B because I only got B, thanks to freerider.",
            "comment_workload": "The workload is not heavy only in class exercise, just attend the lesson. The project is a group project, just find some friends be careful for freeriders. Project divided into 2 state, and deadlines not tough and acceptable. Final have reviews for hints and easy for who attend the lessons, and not needed to revise.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "IFJZyG3UomCiZ7FZHusGhIZUj9CSwzr5",
            "semester": "2018-19 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "smallpotato tom",
            "date": "Dec 28, 2018",
            "title": "Âë¢ÂÄãSemÂá∫Â•áÂú∞Â•ΩGrade",
            "comment_content": "ÊïôSoftware EngineeringÂòÖÁêÜË´ñÔºåÁî±UML Modeling„ÄÅSystem Requirements CaptureÊïôÂà∞Testing„ÄÅSoftware Quality AssuranceÔºåÊúâÈÅ©ÈáèCoding„ÄÇÈõñÁÑ∂Â≠∏ÂÆå‰πãÂæåÈÉΩÂîî‰øÇÂ•ΩÂ≠∏Âà∞ÈªûÊ®£ÂàÜÂ∑•Âêà‰ΩúÂéªEngineering‰∏ÄÂÄãSoftware„ÄÇ",
            "comment_teaching": "KennethÊïôÂ∞éËÉΩÂäõÈÇÑÂ•ΩÔºå‰ΩÜ‰Ω¢Âõ†ÁÇ∫Â•ΩÂ•Ω‰∫∫ÂêåÊääËÅ≤Â•ΩÂ•ΩËÅΩÈóú‰øÇÔºåÂèàÂîîÊúÉÈÅ≤ËêΩÂ†ÇÔºåÂÜáÁêÜÁî±Âîî‰øæÂÄãA‰Ω¢„ÄÇ",
            "comment_grading": "Âë¢ÂÄãSemÂõ†ÁÇ∫ProjectÊòìÂÅöÂíóÊâÄ‰ª•Â•ΩÂ§ö‰∫∫‰øÇProject„ÄÅIn-class ExerciseÊãéÂìÇÊªøÂàÜÔºåÂèØ‰ª•Ë©±„Äå‰∏ÄË©¶ÂÆöÁîüÊ≠ª„Äç„ÄÇ<br /><br />ÂÖ∂‰ªñÈáéÊãéÊªøÂàÜÔºåFinalÂÄãMean 7ÊàêÂ∑¶Âè≥ÔºåÊàëÊãéabove mean 1-2ÂàÜÔºåÊúÄÂæåB+„ÄÇ",
            "comment_workload": "Âë¢ÂÄãSem‰∏â‰∫∫‰∏ÄÁµÑÂÅö‰∏Ä‰ªΩJava ProjectÔºåModeling„ÄÅCoding„ÄÅImplementation„ÄÅTesting„ÄÅDocumentationÈÉΩÊúâÊ∂âÂèäÔºåÂîîÁÆóÂ§öÂò¢ÂÅö‰ΩÜÂ≠∏Âà∞Âò¢„ÄÇÊúâÂï≤LabÊúâAttendance„ÄÇÂîØ‰∏ÄÈ∫ªÈ∫ªÂú∞‰øÇ‰øÇ‰ªΩExamÔºåËÄÉËÉåÂò¢ÔºåÊúâÈõ£Â∫¶„ÄÇ",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "mtHgcxcF8r7sq69t50ablAbJoUmzsGeV",
            "semester": "2018-19 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "kaushalkalyan",
            "date": "Dec 17, 2018",
            "title": "comp 3111",
            "comment_content": "The content was practical and useful, the course comprised of a final and project, labs ,participation.<br /><br />Final 40 percent<br />Labs 10<br />Inclass exercises(participation) 10<br />project work 40",
            "comment_teaching": "Professor was very enthusiastic through the semester. He gave us good feedback for all the problems and in class exercises<br />The TAs were excellent as well! A very good course",
            "comment_grading": "Grading was pretty good. Overall the labs and assignment and project was where students got full points. Final was a bit difficult with an average around 70",
            "comment_workload": "Not too much work but a lot of things to keep track of because if group setting!",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "kpCt8WW7rek9XjwHGLCSJrsXMna5JZVi",
            "semester": "2017-18 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "matthew_k97",
            "date": "May 20, 2018",
            "title": "Very reasonable and focused on software engineering",
            "comment_content": "The class is very conceptual and most the of the lectures do no relate to actual coding but almost entirely focus on the software engineering process. The entire process of developing software is covered, from gathering requirements all the way until the acceptance testing. The content is not difficult, but it can be tiresome as it is pretty much all conceptual. That's why it was nice to have the project compose most of the grade since we could actually apply some software development practices inside of the class.",
            "comment_teaching": "The teaching is pretty clear, with no major issues. The slides are followed pretty closely and the labs are very simple and relevant to the entire course - mainly focused on project management and software engineering. The professor is good at explaining topics though there were a few times the TA did not offer very good explanations of what they were looking for with regards to the project's specifications.",
            "comment_grading": "The grading is quite reasonable, and the project grade was pretty reasonable. There is an attendance score which only requires half attendance and a lab participation score. The Final exam is also fairly reasonable overall, though it felt rather long.",
            "comment_workload": "The workload is not very high, but there is a fair amount of effort that needs to be put into the project for the course. There is one large project that you will work on with teams of 3 and this will constitute about 50% of your total grade (about 30% is related to the actual programming related activities - the other 20% is related to preparatory and planning work for the project).",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "3DwtrkJVW06gFKuCxvT3hYYm1J0IYh0V",
            "semester": "2015-16 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "pikachu",
            "date": "Jan 12, 2017",
            "title": "churÁàÜÊó¢required course",
            "comment_content": "Âë¢ÁßëÊ∂µËìãÂ•ΩÂ§öÈáéÔºåÊúâhtml, css+bootstrap, angular js, androidÔºåÂêåÂüãÂ•ΩÂ§öÂîîÂêåÊó¢methodÂêåstrategyÂéªdevelop‰∏ÄÂÄãapplication„ÄÇÁü≠Áü≠14ÂÄãÁ¶ÆÊãúÂ∞±Ë¶ÅÂ≠∏Â•ΩÂ§öÈáéÔºåÂü∫Êú¨‰∏äÊØèÂÄãÁ¶ÆÊãúÈÉΩÊúâÂ§öÊó¢toolË¶ÅÂéªÂ≠∏„ÄÇÂêåÂüãÊúâÊôÇd language ‰øÇ‰Ω†‰πãÂâçÁÑ°Â≠∏ÈÅéÊó¢Ôºå‰øÇË¶ÅËá™Â∑±ÂéªËá™Â≠∏„ÄÇ",
            "comment_teaching": "kim ÂÄã‰∫∫ÈÉΩniceÊó¢Ôºå‰ΩÜ‰øÇÂõ†ÁÇ∫Âë¢ÂÄãcourse Ë¶Å‰øÇ14ÂÄãÁ¶ÆÊãúÊïô‰∏ÄÂ§ßjaÊñ∞Êó¢ÈáéÔºåÊâÄ‰ª•‰Ω¢ÊïôÊó¢paceÈÉΩ‰øÇÂ•ΩÂø´„ÄÇtutorialÈÉΩ‰øÇÈáçË§áÁï™lecture d ÈáéÔºå‰∏äÂ∑¶ÁÑ°Âí©Â§ß‰ΩúÁî®„ÄÇ",
            "comment_grading": "Personal Homepage - 5%<br />Testing using Karma - 5%<br />Lab - 10%<br />2 Midterm - 20% each<br />Project - 40%<br /><br />ÊàêÂÄãcourseÊó¢ÂàÜÈÉΩ‰øÇÊØîËºÉÊòìÊãéÂà∞ÔºåÊâÄ‰ª•ÊúÄÂæåÂÄãmeanÂ•ΩÈ´òÔºå‰∏ªË¶Å‰øÇmidtermÂêåprojectÂàÜÈ´ò‰∏ãÔºåÂ¶ÇÊûú‰Ω†ÊúâÈáéÁÑ°‰∫§ÊàñËÄÖmidtermËÄÉÂæóÂ•ΩÂ∑ÆÂ∞±ÊúÉbelow meanÂ•ΩÂ§öÔºåÊúÄÁµÇÁàõgrade, Â¶ÇÊûúË¶Åa rangeÊó¢Ë©±Ë¶Åoverall 9xÂàÜ„ÄÇ",
            "comment_workload": "‰∏ÄÂÄãÂ≠ó:chur<br /><br />14ÂÄãÁ¶ÆÊãúË¶ÅÂ≠∏‰∏ÄÂ§ßjaÊñ∞ÈáéÔºå‰∏¶‰∏îÂ•ΩÂ§öÈáéÈÉΩ‰øÇ‰πãÂâç‰Ω†ÁÑ°Â∫ïÁöÑ„ÄÇÊâÄ‰ª•Âü∫Êú¨‰∏äË¶ÅËá™Â≠∏ÂíÅÊªØ„ÄÇÂ¶ÇÊûúË¶ÅÂë¢ÁßëÂ•ΩgradeÊó¢Ë©±ÔºåË¶Å‰ªòÂá∫ÂîîÂè™100%Âä™ÂäõÔºåÂèØËÉΩË¶Å200%ÔºåÂ¶ÇÊûúÂîî‰øÇÊó¢Ë©±ÊúÄÂæåÈÉΩ‰øÇÁàõgrade, Â¶ÇÊûú‰Ω†Âë¢ÁßëÂîî‰øÇrequired course, Áõ°ÈáèÂîîÂ•Ωreg",
            "rating_content": 2,
            "rating_teaching": 2,
            "rating_grading": 2,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "MLB0qGiOChlvYjckiwOuPNPsALUnfJvJ",
            "semester": "2016-17 Fall",
            "instructors": [],
            "is_author": false,
            "author": "kinagiyuki",
            "date": "Jan 12, 2017",
            "title": "ÂûÉÂúæcourse‰∏ÄÂÄãÔºå‰ΩÜ‰Ω†ÈªûÈÉΩË¶ÅÁ°¨È£ü",
            "comment_content": "ËÆÄÂÄãÊôÇÂ•ΩÊòéÈ°ØÊúÉË¶∫ÂæóËá™Â∑±Â•Ω‰ººËÆÄÂ∞ëÂ∑¶ÂÄãcourseÂíÅÔºåÈõñÁÑ∂‰Ω¢ÂîîÊúÉË¶Å‰Ω†ÂÅöÂæóÂ•ΩÂá∫Âç±Ôºå‰ΩÜ‰øÇÁõ∏Â∞ç‰Ω†ÂÅöÂæóÂá∫Ëâ≤ÈÉΩÁÑ°Áî®„ÄÇ‰ªãÁ¥πËá™Â∑±productÂÄãÊôÇÁ´üÁÑ∂Âîî‰øÇË¨õËá™Â∑±productÊó¢Â•ΩËôïÔºåËÄå‰øÇÂêπËá™Â∑±Áî®Â∑¶Âï≤Âí©‰Ω¢‰∏äÂ†ÇÊïôÂ∑¶Êó¢system developing methodÔºåÈáçË¶Å present‰πãÂâçÂîîÂêå‰Ω†Ë¨õÔºåÁï∂Â†¥Èô§Â∑¶ÂëÜÂ∑¶ÂêåË¶∫Âæó‰Ω¢on_‰πãÂ§ñÈÉΩÁÑ°Âí©ÂèçÊáâÊØîÂà∞„ÄÇ",
            "comment_teaching": "Google is your teacher.",
            "comment_grading": "Ë©±group project‰ΩîÈáçÔºåÈªûÁü•above mean‰πãÂæåÂæóÂÄãC+ÔºåÂéü‰æÜexamÂéªÊãâÂàÜÔºåmidterm+final below mean Â∞ëÂ∞ëÂ∞±C+",
            "comment_workload": "Ë≠òÁî®GoogleÈÇÑÂèØÔºåÂîîË≠òÊó¢ÂÅöÂà∞Ê≠ªÁãóÂíÅÈÉΩÂÅöÂîîÂà∞‰Ω†ÊÉ≥Ë¶ÅÊó¢product",
            "rating_content": 2,
            "rating_teaching": 1,
            "rating_grading": 2,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "CC5PSN9k2sBYCvM6yQ2XFZQ0jCc9dIEA",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 96,
                    "name": "KIM, Sung Hun",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "tequila",
            "date": "Dec 29, 2016",
            "title": "workloadË∂ÖÂ§ßÔºåË∂ÖÂÆπÊòìÁàõgrade",
            "comment_content": "‰∏ÄÂÄãÂ≠∏ÊúüÂ≠∏ÂòÖÁØÑÁñáÈùûÂ∏∏Â§öÔºå‰ΩÜÈÉΩÂñ∫Ë¨õ‰∏ãÂ∞±ÁÆó ÂÆåÂÖ®ÂîîÊ∑±ÂÖ•<br />Âç≥‰øÇ:<br />prof: Âï¶ ÂÆúÂÆ∂Ë©±ÊØî‰Ω†ËÅΩÊúâÊ®£ÂíÅÂòÖÈáéÔºå Â§ßÊ¶ÇÂ∞±Á≥ªÂíÅÁî®.. ÂæóÂï¶‰Ω†Âú∞ÂèØ‰ª•Ë∑™ÂÆâÂï¶ ÂéªÂÅöProjectÂï¶<br />Âí©angularjs, unit testing Ê±ÇÂÖ∂Ë¨õ‰∏ãDÂü∫Êú¨ÈáéÔºå Ë∑ü‰ΩèÂÅöproject‰Ω†Âú∞Â∞±Ëá™Â∑±Êü•Âï¶Â•ΩÂóé ÂîîÂ•ΩÂïèTAÂï¶Âõ†ÁÇ∫TAÈÉΩÂîîÊúÉË≠ò<br />ËÄÉË©¶ÂîîÊúÉËÄÉcodingÔºå ÂîîÂñ∫codingÂòÖËÄÉË©¶ÈªûÂÖ®ÈÉ®ËÉåÊõ¨‰Ω¢ ÂîîÈúÄË¶ÅÁêÜËß£ÔºåÂÖ®ÈÉ®ÈÉΩÂ•ΩÁ∞°ÂñÆÂ∞±‰øÇÊïô‰Ω†Èªûdesign ‰∏ÄÂÄãclass object ÈªûÁî®DÊñπÊ≥ïÔºåÊúâÂí©principle, ‰ΩÜÂÖ∂ÂØ¶ÈÉΩ‰øÇÁ¥ô‰∏äË´áÂÖµÁÑ°Âí©ÂØ¶ÈöõÂÉπÂÄº",
            "comment_teaching": "sungÂÖ∂ÂØ¶Â•ΩÊúâÂøÉÊ©üÊïôÔºåÁùáÂæóÂá∫ÂÖ∂ÂØ¶‰Ω¢ÊÉ≥DÂêåÂ≠∏‰ªîËêΩÂ§öDÂäüÂ§´ ÊâÄ‰ª•ÂèàË¶ÅËÉåÂèàË¶ÅÊï¥ÂÄãÂãÅÂ§ßÂòÖProject<br />ÁÑ°Â•à‰Ω¢Â§™È´ò‰º∞Â≠∏ÁîüÂòÖÊäïÂÖ•Á®ãÂ∫¶Ôºå ÊàñËÄÖË©±ÂÖ∂ÂØ¶USTÂ§ßÈÉ®ÂàÜ‰∫∫ÈÉΩÂ•ΩÂøôÔºåÈùûÂ∏∏ÂøôÔºåÊ†πÊú¨ÂîîÊúÉÊúâÊôÇÈñìÂÆåÂÖ®ÊäïÊîæÂÖ•ÂñÆ‰∏ÄÂÄãcourse<br />ÊâÄ‰ª• ÊúÉË¶∫ÂæóÊï¥ÂÄãcourseÈùûÂ∏∏ÁÖ©Ôºå projectÁÖ©Ôºå ËÉåd noteÊõ¥ÁÖ©",
            "comment_grading": "lab 10%<br />individual assignment 10%<br />midterm 10%<br />final 20%<br />group project 50%<br /><br />Ë∂ÖÁ¥öÁàõgrade ÊàëÂîîÊòé‰Ω¢‰ªΩ‰ªΩÂäüË™≤ÔºåprojectÈÉΩÂπæ‰πéÊØîÂà∞ÊªøÂàÜÔºåÂèàË¶ÅÊãâcurveÔºåÁµêÊûúÂ∞±‰øÇ‰∏ÄÂÖ©ÂàÜ‰∏ÄÂÄãsubgrade<br />projectÂÅöÂæóÂ•Ω‰πãÈ§ò‰ª≤Ë¶ÅËÄÉË©¶ËÄÉÂæóÂ•Ω ÈõñÁÑ∂‰Ω†È´òmean 10-20ÂàÜ‰ΩÜ‰øÇÂÖ∂ÂØ¶overall‰Ω†ÈÉΩÂè™‰∏çÈÅéÁ≥ªÈ´ò1-2ÂàÜ<br /><br />Áî±ÊñºËÄÉË©¶ÈÉΩ‰øÇËÉåÊõ∏Ôºå projectÂèàÊØîÂà∞Âπæ‰πéÊªøÂàÜ<br />ÔºåÊâÄ‰ª•meanÈùûÂ∏∏È´ò sdÈùûÂ∏∏Á¥∞ overall90ÈÉΩÂîîÊúÉÊúâa range<br /><br />Êú¨‰∫∫ 89.8% B+<br />Â∑≤Áü•<br />85% B<br />79.8% C+<br /><br />freeriderË¶ÅÂ∞èÂøÉÔºå Âõ†ÁÇ∫ÊúÄÂæåÊúâPeer evaluation, ÂèØ‰ª•‰∫§ÂèØ‰ª•Âîî‰∫§Ôºå Â¶ÇÊûúÊúâgp mate ‰∫§Â∑¶ÊØî‰Ω†ÂòÖÂàÜÁâπÂà•‰ΩéËÄåÂèàËß£ÈáãÂà∞ÔºåÂíÅ‰Ω†projectÂàÜÂ∞áÊúÉÈùûÂ∏∏‰Ωé<br />canvas Ë¶ã after evaluation ‰πãÂæå project low Âñ∫ 9ÂàÜ ÈëíÊñºÂÖ®‰∏ñÁïåmean ÈÉΩÊúâ43Â∑¶Âè≥ ÊâÄ‰ª•9ÂàÜÊáâË©≤Á≥ªevaluation Ë™øÊï¥ÂæåÁµêÊûú",
            "comment_workload": "workload ÈùûÂ∏∏ÈùûÂ∏∏ÈùûÂ∏∏Â§ß<br />‰Ω†ÊØèÂÄãÊòüÊúüË¶Å‰∏älab ÈñãÂ≠∏È†≠ÂÖ©ÂÄãÁ¶ÆÊãúË¶Å‰∫§ÂÖ©‰ªΩassignment Âë¢DÈÉΩÂñ∫Â∞èÂÖíÁßë<br />Âñ∫‰Ω†Ê∫ñÂÇômidtermÂòÖÊôÇÂÄô‰Ω†Ë¶Ådem project code ‰ªäÂÄãsemÂñ∫ÂØ´‰∏ÄÂÄãwebsite,<br />ÂØ´website ÂòÖ angularjs, htmlÂü∫Êú¨‰∏äÂñ∫ÁÑ°ÈªûÊïôÈÅé‰Ω†Ôºå‰∏äÂÖ©Â†ÇÂñ∫ÁÑ°Áî®Ôºå ÂÖ®ÈÉ®Èù†googleÂêåÂ§ßÁ•ûgp mate<br />ÊúÄon9ÂòÖÂñ∫‰Ω¢final dem Ê†πÊú¨ÂîîÊúÉÁùá‰Ω†DcodeÂêåË©¶Êõ¨‰Ω†ÊâÄÊúâÂòÖÈáéÔºåÊâÄ‰ª•ÊúÄ‰∏ªË¶ÅÁ≥ªfinal dem ‰ªãÁ¥πÂòÖfunctionË®òÂæóÊï¥Â•Ω‰πãÂ§ñÔºåÂÖ∂‰ªñÂæóÂÄãÊ®£Â∞±Â§†ÔºåÊ†πÊú¨ÂîîÈúÄË¶ÅÊõ¨ÊôÇÈñìËêΩÂéªÊï¥Êõ¨ÊâÄÊúâÈáéÔºå Ë≠òÂæóÊúâÁµÑÂ∞±Âñ∫ÂáàÂñ∫Êï¥Êõ¨ÂπæÂÄãfeatures ÂÖ∂‰ªñÂí©upload iconÂæóÂÄãÊ®£ÔºåUIÊï¥ÂæóÈùö projectÂ∞±ÊúÄÈ´òÂàÜ<br />Project‰πãÂ§ñ‰Ω¢‰ª≤Ë¶ÅËÄÉË©¶ÔºåÂÖ∂ÂØ¶ËÄÉË©¶ÂÖàÂñ∫Ê±∫ÂÆö‰Ω†ÊãøÂí©grade final midterm Â§ßÊ¶ÇËÉåÂπæÁôæÁâàPPT ÈõñÁÑ∂Â•ΩÂ§öÈÉΩÂñ∫Âúñ Â∞±above mean",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "8Eymuq4RwN6G7NghReZ7wHK9B5UMyJjJ",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Desmond's fan",
            "date": "Jan 20, 2021",
            "title": "Straightforward course",
            "comment_content": "UML Modelling<br />Software Development<br />System Requirements Capture<br />Implementation<br />Testing<br />System Analysis and Design<br />Software Quality Assurance<br />Managing Software Development",
            "comment_teaching": "Kenneth as a professor is well prepared and very accommodating. He produces videos for each lecture in advance, and lectures are usually spent working on exercises to help with better understanding the concepts mentioned in the lecture.<br /><br />When setting deadlines for assignments and group project, he is willing to consider the opinions of students before deciding on a final date.<br /><br />He also tries to make the lectures engaging and is a easy lecturer to approach and interact with.",
            "comment_grading": "I would say that the grading for this course is fair. The grade you should expect to get is correlated with the amount of effort you put in.<br /><br />I don't quite remember the percentage of each assessment, but t is as follows:<br /><br />Weekly Quizzes: Best 15~16 of 19<br />Weekly Exercises (Can be finished during lectures): best 20 of 21<br />Group Project (broken down into 3 parts)<br />- Project plan (Individual grade)<br />- Project documentation (group grade)<br />- Source code (Individual grade)<br /><br />With minimal effort, you can easily get a B-.",
            "comment_workload": "The intensity of the workload is not high, but there is always something you need to complete, whether it is quizzes or class exercises.<br /><br />The quizzes are one time only, so it is best if you watch the lecture videos and read the lecture notes first before attempting them.<br /><br />The class exercises may be difficult and usually require you to draw diagrams. But in turn, correct diagrams are not necessary, Kenneth just wants to see that you have attempted the exercises. Not only that, Kenneth usually shows and explains what a model answer might be, so if you are lazy, you can wait and just copy his diagram.<br /><br />The project requires a bit of coding, should be easy if you have any knowledge of programming. If you don't they'll teach you all you need to know in labs so don't worry.<br /><br />The final exam was open-booked, but most of the questions required you to determine whether the given diagram was drawn correctly, and asked you to drawn what you think is the correct diagram if you think the given diagram is incorrect. Since interpretation can play quite a big factor when deciding how a diagram should be drawn, be prepared to appeal if you think your diagram was wrongly graded.<br /><br />All in all, this course is one of the easier courses in UST in my opinion, and if you have the opportunity to have Kenneth as your lecture, you should pick him. Good luck!",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "5Ea1MQ4VPm3uzMsaVLT36YSpOJskBGbR",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "C-Yiu",
            "date": "Jan 04, 2021",
            "title": "Good grade this semester",
            "comment_content": "Contains boring theory stuff about software engineering. But I think these theories can be used when u r having an internship. Topics include:<br /><br />Modeling Software Systems using UML<br />- Software Development<br />- System Requirements Capture<br />- Implementation<br />- Testing<br />- System Analysis &amp; Design<br />- Software Quality Assurance<br />- Managing Software Development",
            "comment_teaching": "Kenneth is great! You can always find him and he is really patient. And he always gives good grading!",
            "comment_grading": "ÂÖ∂ÂØ¶‰ªäÂÄãsemÁÆóÂ•ΩÈæúÔºå‰ΩÜ‰øÇÊØèÂÄãsubgrade ‰πãÈñìdÂàÜÂ∑ÆÂæóÂîî‰øÇÂ•ΩÂ§öÔºåÊâÄ‰ª•Â∑ÆÂ∞èÂ∞èÂèØËÉΩÂ∞±ÊúÉ‰Ωé‰∏ÄÂÖ©ÂÄãsubgrade.<br />Grading Scheme:<br />all except final: 60% 60/60<br />final: 40% 28.6/40<br /><br />Final grade:&nbsp;&nbsp;A-<br /><br />ÊúâÂÄãfrd final‰øæÊàëÈ´ò1.5ÊúÄÂæåAÂíó ÂÖ∂‰ªñÈÉΩ‰øÇsame",
            "comment_workload": "1/2 quizzes related to the lecture videos per week <br />1/2 lecture videos per week<br />1 project<br />1 final<br /><br />small workload I would say",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "kTTuOjR9DET4VOtHZCu72NPOsQUORiu7",
            "semester": "2022-23 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "JarGor",
            "date": "Jan 31, 2023",
            "title": "",
            "comment_content": "the main content is drawing",
            "comment_teaching": "blended learning mode,need to learn yourself",
            "comment_grading": "good grading in 3111h",
            "comment_workload": "Lecture exercise + Quiz: 0 workload as you may submit mult times<br />Midterm + Final: final is horrible<br />Lab exercise:&nbsp;&nbsp;0 workload, no pramming work<br /><br />Project = Activity 1 ( hand in a document ) + Programming + Activity 2&nbsp;&nbsp;+a easy presenation is required<br /><br /><br />JAVA Programming: the lanuage is differient in each semseter ,sometime is jav,sometime is C++.you have to wait for your teammate or discuss how to combine the work from two people, in programming assignment,if they are free rider,you may not get a good grade<br /><br />Activity 2: If you do the programming well, activity 2 is easy.",
            "rating_content": 4,
            "rating_teaching": 3,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": false,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": true,
            "upvote_count": 1,
            "vote_count": 5,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "EG0IKryQXbjZaZri1YH7vMgzXpASgY21",
            "semester": "2016-17 Spring",
            "instructors": [
                {
                    "id": 111,
                    "name": "LOCHOVSKY, Frederick Horst",
                    "rating": 1
                },
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "takecare",
            "date": "Jun 11, 2017",
            "title": "WORST COURSE EXPERIENCE EVER!!!",
            "comment_content": "1. Modeling Software Systems Using UML<br />2. Software Development<br />3. System Requirements Capture<br />4. Implementation<br />5. Testing<br />6. System Analysis and Design<br />7. Software Quality Assurance<br />8. Managing Software Development<br /><br /> A freaking lengthy notes and many words to cram up on in 90s style of lecture notes! WTF it still happens in 2017?! Software engineering is supposed to be sexy and exciting but the course design just makes it dull and bothersome. How come? No one turns a fully practical topic to be a purely theoretical crap than it does.",
            "comment_teaching": "In terms of boredom, the content is supercalifragilisticexpialidocious.The lecturer just wants to say every words on the slides and the TAs are reluctant to help because they do not know WTF it's going on with the goddamn Visual Studio. Every time doing lab exercise with little help screws you as if it's the end of my life. I think it is an insight to warn me better to quit IT someday.",
            "comment_grading": "In-class practice exercises 5%<br />Labs 5%<br />Midterm Test 15%<br />Final Exam 25%<br />Project 50%<br /><br />Very bad! Both my midterm exam and final exam are above 1 SD. All individual parts, e.g. exams, attendance, do well but the group project sucks due to the SHXT project grading scheme. No other course hurts your GPA than this fxcking stuff, believe me.",
            "comment_workload": "If you truly believe &quot;NO PAIN, NO GAIN&quot;, stay away from this course or it will be &quot;ONLY PAIN, NO GAIN&quot;! I am not a masochist but I cannot find any hideaway as it is a necessary evil to fulfill my major requirement. No one would like to spend countless hours and night in a cold computer lab just because the Microsoft Visual Studio Enterprise version is not available for students. No wise people will make a choice to use this buggy Visual Studio as the IDE, but it does. The machine seems to hold it against you for debugging and searching for solutions in Google thousand times. You hardly can count on other team mates because they are in trouble too. The experience is far too beyond nightmare and catastrophe.<br /><br />If you have chance to go exchange out, please take an equivalent course in other universities. DO NOT PUT YOURSELF AT GREAT PERIL!! STAY AWAY FROM HELL!!!",
            "rating_content": 2,
            "rating_teaching": 2,
            "rating_grading": 2,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 5,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "59FxYZyQU2YUWyhqOxiFu7qMuxDl1WLh",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Daniel1115",
            "date": "May 28, 2022",
            "title": "",
            "comment_content": "Contents<br /><br />Modeling Software Systems using UML <br />Software Development <br />System Requirements Capture <br />Implementation <br />Testing <br />System Analysis &amp; Design <br />Software Quality Assurance <br />Managing Software Development <br /><br />Teaching materials are useful for developers especially if you feel like you lack of basic software engineering skills. This course is not intended to learn some specific knowledge in depth, but to learn basic knowledge that a programmer better to have. <br /><br />In labs you will learn github and basic java (debugging, jacoco testing, etc)",
            "comment_teaching": "Clear voice, tone. Understanding pronunciation and language is not difficult.<br />Contents are straightforward. Professor's explanation is clear.",
            "comment_grading": "Pre-Lecture Quizzes 10%<br />Exercises (in-class practice exercises) 10%<br />Labs 10%<br />Quiz#1? 15%<br />Project 25%<br />Activity 1: System Requirements Specification 5%<br />Activity 2: System Implementation &amp; Testing 20%<br />Final Exam ‚Äî May Exam Period 30%",
            "comment_workload": "In a semester, you will have <br />20 pre-lecture quizzes, 20 in-class exercises, 8 Labs, 1 Team Project<br /><br />Every week, 2 quizzes before the class. Each contain 5 MC problems taking less than 5 mins.<br /><br />Attendance somewhat mandatory because you need to do 2 in-class exercises every class. But you are going to do it with professor, and you will get full mark even if your answer is wrong.<br /><br />Lab works would take less than 30 mins. You can also complete them even without attending the lab as you can just follow the lab instructions.<br /><br />Team Project does will not bother you much because most of the time you will work alone. You will select your own part to work on. <br /><br />Seems there's a lot, but I felt workload is comparatively lighter as most of them are easier than any other COMP assignments.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "ciiEByBz0N0KkaXIqZl9ROY8GXYu9kWx",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "qjk",
            "date": "Dec 14, 2021",
            "title": "Edit: Kenneth is Good Guy",
            "comment_content": "The content is mostly blow water stuff.<br /><br />However, since Kenneth gave me A range, I will give him A range here.",
            "comment_teaching": "Kenneth is a great guy. Annoy him enough after the exam and he will give back your marks.<br /><br />The TAs are rude, irresponsible and lazy though. 0/10 do not recommend.<br /><br />The lecture notes on Canvas are all converted from powerpoint to pdf, which means half the content is gone.<br /><br />However, since Kenneth gave me A range, I will give him A range here.",
            "comment_grading": "In class exercises 10%<br />Quizzes 10%<br />Labs 10%<br />Project 30%<br />Exam 40%<br /><br />Overall ~90% -&gt; A-",
            "comment_workload": "The biggest workload is attending the class every Wednesday.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": true,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 5,
            "vote_count": 14,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "OwD6DvjvUvLAyDX83LcegiOa6Sfttvu5",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "HokJa",
            "date": "Jun 04, 2021",
            "title": "HIGHLY controversial but REALLY GOOD grades",
            "comment_content": "To sum up the main content (also the main part that will be examined):<br />UML Modelling<br />Use-case diagram and specification<br />State machine diagram<br />Flow charts<br />Design pattern<br />Testing<br /><br />Many conceptual stuff, I think it's not very up-to-date, but still quite applicable in today's workplace. <br /><br />What I learned from the course:<br />1. Modelling &amp; Diagram (I don't like it)<br />2. Get familiar with Git through lab and project <br />3. Design patterns <br />4. Agile, Scrum and some more PM stuff<br />5. Many more conceptual stuff (which I don't really care lol)<br /><br />For the lab &amp; project, we used Java, but don't expect them to teach you about java, we went straight to code.<br /><br />So overall I will give a B, it's not really that bad.",
            "comment_teaching": "Blended learning<br /><br />Pre-lecture videos include many NG clips, quite bothering tbh<br />And he mostly just read the slides out loud in the videos. Kenneth is a nice guy tho. <br /><br />TAs are very responsive, you can easily reach out to them through email / the telegram group",
            "comment_grading": "Well it's a highly controversial part in the course. Imagine there are &gt;10 students are angry and talked about it in the OFFICIAL telegram group lol<br /><br />But cannot deny that Kenneth is really lenient in grading so I gave an A. I think so far it's the easiest &amp; best grading course in COMP3XXX.<br /><br />My grades:<br />Quiz: full mark<br />Lab: full mark<br />Project: 30/30+59/60<br />Final: 15/15+56/85<br />Final grade =&gt; A&nbsp;&nbsp;<br /><br />Advice to students who are taking this course &amp; looking at this:<br />1. Get full mark in your project (do extra&amp;fancy stuff)<br />2. Study the in-class exercise to get the idea of &quot;model answer&quot; <br />3. Appeal for everything you think you deserve (project, exam whatever) <br /><br />I personally didn't appeal for the project but i appeal for the exam, (which is absurd cuz we don't have the solution, we can only guess)",
            "comment_workload": "It's really chill. Canvas quiz + lecture video+ 1 lecture per week. Project is easy if you know Java. Kenneth also give tips in his final lecture for exam.",
            "rating_content": 4,
            "rating_teaching": 3,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": true,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 7,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "41wlRf0L1OlwKQCttn3RqpNxzKCnmfRc",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 124,
                    "name": "LEUNG, Wai Ting",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "MICHAEL YU WANG",
            "date": "Dec 09, 2021",
            "title": "TA IS RUDE ESPECIALLY KENNETH",
            "comment_content": "&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&quot;&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&quot;",
            "comment_teaching": "",
            "comment_grading": "",
            "comment_workload": "",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 15,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        }
    ],
    "composer": []
}