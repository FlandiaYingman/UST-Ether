{
    "error": false,
    "course": {
        "id": 202,
        "subject": "COMP",
        "code": "1029P",
        "name": "Python Programming Bridging Course",
        "description": "This course introduces the Python programming language. It is intended for students who already have some experience in computer programming but wish to learn how to apply those programming skills to the Python language. The course covers basic programming topics, such as variables, functions and loops, to more advanced topics. Students explore these by self-learning of course materials together with guided programming exercises. Students without the prerequisites but possess relevant programming knowledge may seek instructor's approval for enrolling in the course. Graded P or F.",
        "categories": [],
        "website": null,
        "credits": 1,
        "semesters": [
            2230,
            2220,
            2210,
            2130,
            2120,
            2110,
            2040,
            2030,
            2020,
            2010,
            1940,
            1930,
            1920,
            1910,
            1840,
            1830,
            1820,
            1810,
            1740,
            1730,
            1720,
            1710,
            1640,
            1630,
            1620,
            1610,
            1540,
            1530,
            1520,
            1510,
            1440,
            1430,
            1420,
            1410
        ],
        "prerequisites": "<a class=\"course-link\" data-subject=\"COMP\" data-code=\"1022P\" href=\"/review/COMP1022P\" target=\"_blank\">COMP 1022P</a> OR <a class=\"course-link\" data-subject=\"COMP\" data-code=\"1022Q\" href=\"/review/COMP1022Q\" target=\"_blank\">COMP 1022Q</a> (prior to 2020-21) OR <a class=\"course-link\" data-subject=\"ISOM\" data-code=\"3230\" href=\"/review/ISOM3230\" target=\"_blank\">ISOM 3230</a> OR <a class=\"course-link\" data-subject=\"ISOM\" data-code=\"3320\" href=\"/review/ISOM3320\" target=\"_blank\">ISOM 3320</a>",
        "corequisites": "",
        "exclusions": "<a class=\"course-link\" data-subject=\"COMP\" data-code=\"1021\" href=\"/review/COMP1021\" target=\"_blank\">COMP 1021</a>",
        "rating_content": 4.56,
        "rating_teaching": 4.31,
        "rating_grading": 4.81,
        "rating_workload": 4.75,
        "review_count": 16,
        "single_review": false,
        "enrollment_status": 3,
        "is_favourited": false,
        "is_subscribed": false,
        "user_review_hash": "",
        "contributor_has_more": false,
        "instructors": [
            {
                "id": 99,
                "name": "LAM, Gibson",
                "count": 10
            }
        ]
    },
    "reviews": [
        {
            "hash": "1qQLufGV8fGJZ4CUn7Vw8VRihEBU4Dat",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "準雷",
            "date": "Dec 20, 2021",
            "title": "輕鬆拎credit又學到少少野既P/F course",
            "comment_content": "Lesson 1 - Introduction to Python<br />Lesson 1.1 - Getting Started with Python<br />Lesson 1.2 - Variables<br />Lesson 1.3 - Strings and Lists<br />Lesson 1.4 - Booleans<br /><br />Lesson 2 - Essential Programming in Python<br />Lesson 2.1 - Functions and Making Decisions<br />Lesson 2.2 - Variable Scope<br />Lesson 2.3 - For Loops<br />Lesson 2.4 - While Loops<br /><br />Lesson 3 - 2D Arrays and the Game of Life<br />Lesson 3.1 - Two Dimensional Arrays<br />Lesson 3.2 - Conway's Game of Life<br />Lesson 3.3 - Print, Clear Screen and Delay<br /><br />Lesson 4 - Advanced Features<br />Lesson 4.1 - Dictionaries<br />Lesson 4.2 - User Input and Dealing with Errors<br />Lesson 4.3 - File I/O<br /><br />Lesson 5 - Recursion and Object-Oriented Programming<br />Lesson 5.1 - Recursion<br />Lesson 5.2 - Turtle Graphics<br />Lesson 5.3 - Drawing Trees<br />Lesson 5.4 - Introduction to Object-Oriented Programming",
            "comment_teaching": "所有材料擺哂上Canvas<br />唔會用任何face to face堂<br />自己搵時間睇就得<br />Concept都解釋得好清楚<br />Example都足夠<br />淺白易明",
            "comment_grading": "P/F Course<br />4份Exercise總分最少要60%<br />Final Exam總分最少要40%<br /><br />Exercise for Lesson 2 (Scrabble Word/Letter Score): 100/100<br />Exercise for Lesson 3 (The Game of Life): 100/100<br />Exercise for Lesson 4 (A Phone Book Database): 100/100<br />Exercise for Lesson 5 (Recursion Tree): 100/100<br /><br />Final Exam: 75/100<br /><br />Grade: P",
            "comment_workload": "Total有4份exercise<br />一個exercise一個mini game/application<br />平均2-3個星期一份exercise要做<br />如果諗唔到點做可能要用多少少時間研究下<br />個template已經做好一部份<br />基本上只係fill in the blanks<br /><br />考試係online + open book<br />一個鐘20題<br />臨考前一晚睇一睇D syntax用法就ok<br />會有MC題同fill in the blanks<br /><br />總括而言個workload唔大",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "yhWcahqEJfKDZuL4WQPzfNFLsjlPgOMx",
            "semester": "2018-19 Winter",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Canyou",
            "date": "Jan 31, 2019",
            "title": "Simple Understanding in Python",
            "comment_content": "Lesson 1 Introduction to Python<br />Lesson 1.1 Introduction<br />Lesson 1.2 Variables<br />Lesson 1.3 Strings and Lists<br />Lesson 1.4 Booleans<br />Lesson 2 Essential Programming in Python<br />Lesson 2.1 Functions and Making Decisions<br />Lesson 2.2 Variable Scope<br />Lesson 2.3 For Loops<br />Lesson 2.4 While Loops<br />Lesson 3 2D Arrays and the Game of Life<br />Lesson 3.1 Two Dimensional Arrays<br />Lesson 3.2 Conway's Game of Life<br />Lesson 3.3 Print, Clear Screen and Delay<br />Lesson 4 Advanced Features<br />Lesson 4.1 Dictionaries<br />Lesson 4.2 User Input and Dealing with Errors<br />Lesson 4.3 File IO<br />Lesson 5 Recursion and Object-Oriented Programming<br />Lesson 5.1 Recursion<br />Lesson 5.2 Turtle Graphics<br />Lesson 5.3 Drawing Trees<br />Lesson 5.4 Introduction to Object-Oriented Programming",
            "comment_teaching": "Self-learning<br />Actually, if you study all the material, you can pass.<br />There are some exercises or questions will ask you after the materials. If you do all the materials, passing the course is not a problem. Overall, there is no teaching and it just depends on you. However, if you want to study python from this course, it will be hash when you have too many things to do or study another course in winter.<br />Also, you just learn the simple and basic overview in this course so it may not be suitable for people who want to study python deeply. Maybe the regular 3 credits course will suit for you.",
            "comment_grading": "To pass the course, you need to:<br /><br />1. Submit at least three exercises and achieve 60% out of 100% of the four exercises altogether<br />2. Get at least 40% in the final exam at the end of the semester",
            "comment_workload": "The workload is not too much but some exercises are actually used up lots of time. If you want to study this course, you need to keep your time free. If you study it with other courses or you have other things need to do, you may have difficulties to chase your time.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": [
                {
                    "key": "zN3LaCFtCbaKC7FkWmu9Dev1JW4WKgOz",
                    "name": "winter2019_1029p_intro",
                    "format": "pdf"
                }
            ]
        },
        {
            "hash": "tkRXpsoqwHlVmcC5oQqwnIQGZpPImbJL",
            "semester": "2018-19 Winter",
            "instructors": [],
            "is_author": false,
            "author": "士人",
            "date": "Jan 23, 2019",
            "title": "",
            "comment_content": "5大topics:<br />Introduction to Python<br />Lesson Lesson 1.1 Introduction<br />Lesson Lesson 1.2 Variables<br />Lesson Lesson 1.3 Strings and Lists<br />Lesson Lesson 1.4 Booleans<br /><br />Essential Programming in Python<br />Lesson Lesson 2.1 Functions and Making Decisions<br />Lesson Lesson 2.2 Variable Scope<br />Lesson Lesson 2.3 For Loops<br />Lesson Lesson 2.4 While Loops<br /><br />2D Arrays and the Game of Life<br />Lesson Lesson 3.1 Two Dimensional Arrays<br />Lesson Lesson 3.2 Conway's Game of Life<br />Lesson Lesson 3.3 Print, Clear Screen and Delay<br /><br />Advanced Features<br />Lesson Lesson 4.1 Dictionaries<br />Page Review Questions Page<br />Lesson Lesson 4.2 User Input and Dealing with Errors<br />Lesson Lesson 4.3 File I/O<br /><br />Recursion and Object-Oriented Programming<br />Lesson Lesson 5.1 Recursion<br />Lesson Lesson 5.2 Turtle Graphics<br />Lesson Lesson 5.3 Drawing Trees<br />Lesson Lesson 5.4 Introduction to Object-Oriented Programming",
            "comment_teaching": "全部上網自學, 唔洗真人去上堂<br /><br />部份content, tutor 會拍d youtube 講解下",
            "comment_grading": "Pass or Fail only<br />Pass:<br />Submit at least three exercises and achieve 60% out of 100% of the four exercises altogether<br />Get at least 40% in the final exam at the end of the semester",
            "comment_workload": "4 份assignment + 1 Exam<br />assignment 好簡單，佢會帶住你做<br /><br />Exam:<br />the duration of the exams is 1 hour. The exams are closed book exams. They contain mostly multiple choices and fill-in-the-blanks. Do not need to write any program from scratch.",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "gJ94Xe8SEuufGsrdfVh2JgyOKJObJl2u",
            "semester": "2015-16 Fall",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Yellow",
            "date": "Sep 04, 2017",
            "title": "Easy for beginner",
            "comment_content": "All the lecture notes are offered online, no attendance is needed. The content is easy to follow for beginner. There is only one final exam and a few assignments. The instructor would offer some&nbsp;&nbsp;codes for you to finish the assignment, you don't really need to write down a big paragraph of codes to do the assignment. It is more like filling the blank. And the exam questions are only MC and filling the blank questions.",
            "comment_teaching": "It is a self-learning course, all the learning are done online, but the lecture notes given by the instructor is complete and useful. I only meet the instructor until the final exam..haha..",
            "comment_grading": "This course is pass or&nbsp;&nbsp;fail course, so the grading is actually not that bad unless you get a F...Unless you didn't read the lecture notes, it is hard to fail the course.",
            "comment_workload": "As it is a one credit course, the workload is acceptable. For a beginner without any knowledge in python, it might still need time to digest the course material in order to finish the assignment by yourself. In general, the workload is okay for 1 credit course.",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "t21VOWHHUpi4BgdUxXSJYiCop8ngyXA9",
            "semester": "2018-19 Fall",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Kabul",
            "date": "Dec 28, 2018",
            "title": "",
            "comment_content": "A nice introduction to Python. Since Python is dynamically typed, compared to languages like Java and C++, Python is generally more liberal and easier to write. Thus IMHO transitioning from Java/C++ to Python is, in general, easier than vice versa.<br /><br />Topics included:<br />1️⃣ Introduction to Python<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Introduction<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Variables<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Strings and Lists<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Booleans<br />2️⃣ Essential Programming in Python<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Functions and Making Decisions<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Variable Scope<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 For Loops<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 While Loops<br />3️⃣ 2D Arrays and the Game of Life<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Two Dimensional Arrays<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Conway's Game of Life<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Print, Clear Screen and Delay<br />4️⃣ Advanced Features<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Dictionaries<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 User Input and Dealing with Errors<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 File IOs<br />5️⃣ Recursion and Object-Oriented Programming<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Recursion<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Turtle Graphics<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Drawing Trees<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;🔶 Introduction to Object-Oriented Programming<br /><br />The unique features of Python include data structures like lists and dictionaries, and also the way to subset strings and lists using slicing notations. Some elements of Python such as tuples, sets, and lambda functions are not covered, but this is acceptable for an introductory bridging course.",
            "comment_teaching": "Just like other COMP1029 bridging courses, there are no face-to-face lectures and all materials are offered online. The content is well structured and clearly delivered, so you should find no problem understanding the course content.",
            "comment_grading": "Pass or fail.<br /><br />Need to get above 60% overall in the assignments (by finishing at least 3 out of 4 of them) and 40% in the final exam. These should be a piece of cake as soon as you pay attention to the deadlines and revise for the exam.",
            "comment_workload": "4 petty assignments and a final exam. Skeleton codes are provided in the assignments and our work was just to fill in a few lines of code. These should be easy jobs for most of us.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "Cimn5LzWfW3QweL5VTC0Nqrz8JbRZVGi",
            "semester": "2014-15 Spring",
            "instructors": [],
            "is_author": false,
            "author": "Jason Tsang",
            "date": "Aug 16, 2015",
            "title": "",
            "comment_content": "基本上學既野唔多 有讀過programming既人睇一睇教既野已經知道係d咩黎 佢好似係分4／5個topics去教",
            "comment_teaching": "成個course都係自學 自己睇下份notes自己試下就會明",
            "comment_grading": "個course得pass or fail 只要交齊功課 final前望一望d notes就一定pass 我final只係臨考前用左1個鐘睇左次d notes 不過當然每個人既programming底都唔同 但我認為只要係唔係咩都唔識入去考就ok",
            "comment_workload": "好似係有4個assignments 再加一個final <br />assignment寫program係比一個試下自己明唔明個course教緊咩既機會<br />但如果連assignments都懶得倏 其實tutor會拍埋成段youtube video 教你點做 唔想諗既話 跟住佢逐個step做就得",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "bc45G9K2K3G0PoJ78jKXMChvcu0qQ6FH",
            "semester": "2022-23 Winter",
            "instructors": [],
            "is_author": false,
            "author": "Shujian",
            "date": "Jan 31, 2023",
            "title": "",
            "comment_content": "This course provides basic knowledge of Python:<br />Lesson 1.1 - Getting Started with Python<br />Lesson 1.2 - Variables<br />Lesson 1.3 - Strings and Lists<br />Lesson 1.4 Booleans<br /><br />Lesson 2.1 - Functions and Making Decisions<br />Lesson 2.2 - Variable Scope<br />Lesson 2.3 - For Loops<br />Lesson 2.4 - While Loops<br /><br />Lesson 3.1 - Two Dimensional Arrays<br />Lesson 3.2 - Conway's Game of Life<br />Lesson 3.3 - Print, Clear Screen and Delay<br /><br />Lesson 4.1 - Dictionaries<br />Lesson 4.2 - User Input and Dealing with Errors<br />Lesson 4.3 - File I/O<br /><br />Lesson 5.1 - Recursion<br />Lesson 5.2 - Turtle Graphics<br />Lesson 5.3 - Drawing Trees<br />Lesson 5.4 - Introduction to Object-Oriented Programming",
            "comment_teaching": "No lectures, all materials are on the course Canvas page for your self reading.",
            "comment_grading": "P/F<br />4 programming exercise, online, 25% each, get 60%+ to pass<br />final exam, f2f, get 40%+ to pass",
            "comment_workload": "Very light workload. There are four programming exercise. Skeleton code is provided for each exercise, and there are detailed comments telling you how to write the code. If you want, you can finish all 4 exercises in 1 hour.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": true,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "14ksXbbWuwIOwQ5o0kpaM9xxEKfXyTIh",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Anacreon",
            "date": "Dec 14, 2021",
            "title": "Do NOT trust the sample final !!!",
            "comment_content": "Basic python.<br /><br />Introduction to Python<br />Essential Programming in Python<br />2D Arrays and the Game of Life<br />Advanced Features<br />Recursion and Object-Oriented Programming",
            "comment_teaching": "Just reading. Google is more useful.<br />Do more yourself.",
            "comment_grading": "Mysterious.<br />This 1 credit course, according to its final exam, seems to require we put in a similar amount of effort as the 1021 3 credit course.<br />Mean of the final exam was 59.7/100 this semester.",
            "comment_workload": "The sample final is ridiculously simple compared with the online final I took. DO NOT TRUST THAT!!!<br />20 questions 1 hour, 3 min for one, haha. It reminded me of the JAVA, 1022p final. The questions the codes are longer than the sample. The sample only has 13 questions and it is much simpler than the online final. I trusted it and I didn't be that careful while reviewing. <br />If you prepared this final as I did, then it is quite easy to GG.",
            "rating_content": 3,
            "rating_teaching": 2,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 2,
            "attachments": []
        },
        {
            "hash": "3zOfBBj0B77de0OVe8lCVk7dnhFuOxrN",
            "semester": "2020-21 Summer",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "An225 Mriya",
            "date": "Aug 02, 2021",
            "title": "Good Filler Course in the Summer Holiday",
            "comment_content": "Course contents are given in 5 weeks:<br />*Lesson 1: Basic Python syntax, variables, strings, lists, boolean operators<br />*Lesson 2: Function writing, variable scope, for and while loops<br />*Lesson 3: 2D arrays, print and clear screen, delay function<br />*Lesson 4: Dictionaries, user input, try-except-else, file I/O<br />*Lesson 5: Recursion and turtle graphics<br /><br />When compared with what is taught in COMP1021 (the regular Python introductory course), I think COMP1029P retains most of the contents of COMP1021.<br /><br />As most Python learners will tell you, Python is actually quite easy to learn. (Professing it is another issue tho) When comparing the difficulties of learning Java in COMP1022P as a newbie at that time (in which I took in Fall Sem in 2021), Python is really much much easier...<br /><br />And as usual with other programming classes, practice helps, especially considering the fact that COMP1029P is a self-learning course. In general, the course is quite a nice filler course for the long holidays to keep your brain running.",
            "comment_teaching": "Same as what you've seen on the class schedule and others said, this is a self-learning course. Course contents are given on a weekly basis (and you can't access future contents). The emails of both Professor Lam and the TA (Peter Chung) is given for students to ask questions.<br /><br />Professor Lam gives helpful responses regarding courses, and this even extends to some more out-of-scope contents: for example, he responded to my question why Python file I/O don't work for Microsoft Word--on Sunday, which I didn't expect.<br /><br />On the other hand, when I asked for a technical problem on one of my assignment, Peter Chung insisted that my code is wrong, and his responses only increased my confusion instead of clarifying my question. What's next? I still get full marks for that assignment the next day.<br /><br />That said, as I only have 2 occasions to contact the professor and TA with email, my opinions here may not be too representative.",
            "comment_grading": "Like other COMP1029* courses, COMP1029P adopts the pass-fail mechanism. You get a pass if you get more than 60% for the mean of all assignments, and 40% for the final exam. For me, I get full mark for all assignments, and scored of 75/100 for the final exam.<br /><br />The professor also claimed that there should be enough easy questions in the exam, which is true per my experience. At the end at least one guy failed miserably (?*2) at a score of 38 for the exam, showing even those who performed bad in programming may even have a chance to pass this course.<br /><br />While meaningless to a course which don't pull the curve, most of the homeworks have a mean of over 80%, and the exam's mean is 76.92/100.",
            "comment_workload": "In general, nearly zero workload (though more workload than spam courses like PHYS1003).<br /><br />There are a total of 4 assignments since week 2, and you are given with a week to deal with each of them. In fact, they are so easy that I can finish all of them within 2 to 3 days after the assignment is released.<br /><br />There will also be 2-3 review questions per week, designed to encourage practicing the course content. While all of them won't count towards the final grade (?), review questions for week 2 is a component part of the week's assignment.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": true,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "juM2ILf2qSqyly3mw5p9JTTarb3XLL6A",
            "semester": "2019-20 Fall",
            "instructors": [],
            "is_author": false,
            "author": "chickenwing",
            "date": "Oct 21, 2020",
            "title": "",
            "comment_content": "The course covers basic programming topics, such as variables, functions and loops, to more advanced topics. Students explore these by self-learning of course materials together with guided programming exercises. Students without the prerequisites but possess relevant programming knowledge may seek instructor's approval for enrolling in the course.",
            "comment_teaching": "the lecture notes given by the instructor is complete and useful. and the instructor tried to explained the questions we proposed as mu as possible",
            "comment_grading": "This course is pass or&nbsp;&nbsp;fail course, so the grading is actually not that bad if you treat this course seriously",
            "comment_workload": "workload is acceptable. For a beginner without any knowledge in python, it might still need time to digest the course material in order to finish the assignment by yourself.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "mrshSfTd4fTiHkMb3giJQmXuj0EXHjSo",
            "semester": "2019-20 Summer",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "saote",
            "date": "Aug 30, 2020",
            "title": "",
            "comment_content": "some elementary syntax about python. also introduce some more advanced features(OOP/recursion) in the last part of the course.",
            "comment_teaching": "it's based on a self-learning website. nothing much to comment about.",
            "comment_grading": "it's a P/F course. <br />need to get at least 60% out of 100% of the assignments and 40% of the final exam to pass.<br />I feel like if you do understand the content, it's easy to pass.",
            "comment_workload": "the workload is adequate for a 1-cre course.<br />There's an easy assignment once a week and a total of four of them. simply follow the web instruction and it should be done in one or two hours.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "Y1RWKE6efnoVkJ6CFm105lDRHPxD7W7u",
            "semester": "2018-19 Winter",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Ivylo",
            "date": "Jan 17, 2019",
            "title": "Interesting Python beginner course",
            "comment_content": "A introductory course for students who are interested in Python as Python is getting popular in the computer world, especially for Deep Learning development. However, this course is way from sufficient for those keep learners. But considering the short duration, amount of content is acceptable.",
            "comment_teaching": "Though videos are already available for demonstration, especially those assignments, it will be even better if videos are also available in course content given the current teaching method is almost texts, making it a bit boring and not friendly to beginners.",
            "comment_grading": "A course with only Pass or Fail.<br /><br />To pass COMP1029P, you have to fulfil following requirements:<br />1. on average, 60% or higher of the 4 exercises total mark (at least to submit 3 exercises)<br />2. 40% or higher in the final exam",
            "comment_workload": "4 lab exercises in total with 1 final exam within the one month duration in Winter semester.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "AsXlpdaiK5Mo9Hb69ZT2y0PPgy4hGsDE",
            "semester": "2017-18 Fall",
            "instructors": [],
            "is_author": false,
            "author": "珍珠奶霸",
            "date": "Jan 16, 2018",
            "title": "",
            "comment_content": "not too many. it is easy for the programming beginners. <br />there are only 4/5 lectures chapter",
            "comment_teaching": "it is a self-learning course and the teaching materials are good. it is easy to understand.",
            "comment_grading": "it is easy to pass, you need to get 40% in exam and 60% in homework. <br />in my exam, mostly asking you about the output and there are some MC also 1-2 question asked you to write the program.",
            "comment_workload": "only have 5 homework in the total semester. Each homework has a teaching video, and you can follow the video to type the program.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "kmtJLH0nyWrgNkwQFihtK73zxfzDqWyX",
            "semester": "2016-17 Spring",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "MEMENTO",
            "date": "Sep 05, 2017",
            "title": "",
            "comment_content": "The content includes basic data type, arrays and dictionaries, for loop and while loop, input and output handling and basic recursion.",
            "comment_teaching": "This is an online course, which means that there is no lecture. You need to learn by yourself by reading though the course material in the CSE website.",
            "comment_grading": "This is pass or fail course.<br />To pass one of these bridging courses, you need to:<br />obtain 60% or higher of the four exercises total mark, and:<br />obtain 40% or higher in the final exam<br />It is extremely easy to get over 40% of grade in the final, so you do not have to worry at all.",
            "comment_workload": "Workload is very light. There are four exercises in total, and each takes less than an hour to complete. You only need to complete one exercise every 2-3 weeks.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": true,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "iaqwyX36n9bq7sqQpaJAQ5uotzUgQxtV",
            "semester": "2015-16 Fall",
            "instructors": [
                {
                    "id": 99,
                    "name": "LAM, Gibson",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": ":):):):)",
            "date": "Dec 25, 2015",
            "title": "不妨學習多點東西",
            "comment_content": "輕鬆，5個topic: 1. Introduction to Python 2. Essential Programming in Python 3.2D Arrays and the Game of Life 4. Advanced Features 5. Recursion and Object-Oriented Programming; 想學下唔同programming language既同學，或者major requirement需要python(comp1021)既同學不妨試下。雖然教既野都好皮毛，comp course 1字頭level，不過都值得學下。<br />winter/summer 無聊既話，可以一試～",
            "comment_teaching": "自己上網睇notes（同埋assignment都有video跟住做）。",
            "comment_grading": "pass or fail, 如果comp1022p/q有認真學下都幾難fail。",
            "comment_workload": "好細，有少少programming background既話，一睇就明。然後assignment都可以跟住佢段片做。考試都簡單既，1字頭comp level。如果comp1022p/q有好好學習基本上考前求其睇一次都會pass（當然，你reg個course純粹求pass，而唔係想學，咁你reg黎做乜？！？！？！？！？！）。<br />只要(assignment &gt;=60% &amp;&amp; final exam&gt;=40%) 就會 pass。",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": [
                {
                    "key": "3RZ9mTUOuTz1BH7b6JBsBuD4F0T0KPpi",
                    "name": "f2015_1029p_intro-3",
                    "format": "pdf"
                }
            ]
        },
        {
            "hash": "UfU7XYucJEchB4P8nngu0cRD6eufoYuR",
            "semester": "2019-20 Summer",
            "instructors": [],
            "is_author": false,
            "author": "Iphoooooone",
            "date": "Sep 07, 2020",
            "title": "輕鬆hea住過暑假",
            "comment_content": "focus系C既syntax<br />printf,scanf,random,string,structures,arrays,loops,file input output等等<br />comp1XXX會提及既syntax分類都有<br />教你C入面會系點寫，運作咁<br />logic呢d大圍野就預左你識<br />都係最後有個所謂exam咁<br />正常人都唔會fail,除非無去到",
            "comment_teaching": "要講既基本野都會提及，但係有些少唔夠深入<br />如果系好想深入了解成個syntax規則<br />建議自己再google或者讀comp2011<br />或者問TA都得，當然無感既必要啦",
            "comment_grading": "PF course無咩評論<br />有心完成就肯定pass到",
            "comment_workload": "好少<br />會有3，4個assignment,1個鐘頭完成到，好簡單<br />會有詳細步驟，copy個code再填空缺<br />我都係半夜訓前完成，再等下個禮拜既hw",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        }
    ],
    "composer": []
}