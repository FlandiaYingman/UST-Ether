{
    "error": false,
    "course": {
        "id": 1940,
        "subject": "COMP",
        "code": "5712",
        "name": "Introduction to Combinatorial Optimization",
        "description": "An introduction to the basic tools of combinatorial optimization, including network flow and the max-flow min-cut theorem, linear programming, matching, spanning trees and matroids, dynamic programming, algorithms and data structures, graph algorithms.",
        "categories": [],
        "website": null,
        "credits": 3,
        "semesters": [
            2230,
            2130,
            2030,
            1930,
            1830,
            1730,
            1630
        ],
        "prerequisites": "",
        "corequisites": "",
        "exclusions": "",
        "rating_content": 5,
        "rating_teaching": 5,
        "rating_grading": 4.89,
        "rating_workload": 4.11,
        "review_count": 9,
        "single_review": false,
        "enrollment_status": 0,
        "is_favourited": false,
        "is_subscribed": false,
        "user_review_hash": "",
        "contributor_has_more": false,
        "instructors": [
            {
                "id": 107,
                "name": "ARYA, Sunil",
                "count": 9
            }
        ]
    },
    "reviews": [
        {
            "hash": "ulhY2ZsjfLw0IJfY7w4pV2iROdNWe4Fl",
            "semester": "2018-19 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "E",
            "date": "May 24, 2019",
            "title": "Pretty Good Course for Theory Enthusiasts",
            "comment_content": "Steiner Tree and TSP - Just a bunch of 2-approximations for Steiner tree problem and the travelling sales problem. Classical examples really. <br /><br />Linear Programming and Duality: No proofs are given for duality (which is a bit disappointing), and introducing weak and strong duality. <br /><br />Weighted Vertex Cover: Deterministic Rounding and Primal-Dual Algorithm. Starts using duality theorem for developing algorithms. this is where the course starts picking up difficulty. <br /><br />Algorithms for Set Cover: Probabilistic rounding algorithm for vertex cover as well as greedy algorithm for set cover. The greedy algorithm's analysis is quite tricky so memorize it well. <br /><br />Max Flow\t: Introduction of max flow + Ford Fulkerson's algorithm. Like Comp3711/3711H. Also, max flow min cut theorem. <br /><br />Algorithms for Max Flow: Both fattest path algorithm and Edmond's Karp algorithm and their analysis. <br /><br />Algorithms in Bipartite Graphs - The main thing here is Konig Theorem and Hall's theorem. PRACTICE ON THESE THEOREMS A LOT OF PROBLEMS!!<br /><br />The Linear Program of Max Flow - Boring shit, how to express max flow as LP and its dual it *surprisingly* relaxed min cut. That shit was so boring. <br /><br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />Warning, God level Starts from here<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br /><br /><br />Steiner Forest: Steiner tree, but 10x harder. If you find the proof here hard, don't fret, almost everyone has no idea what's happening here. Still, memorize the proof though. <br /><br />Multiway cut problem: Pretty hard proof. <br /><br />Max Cut: At this level, even Sunil has no idea what he's talking about. Approach with caution and memorize proofs. <br /><br />MAX-SAT and MAX-2SAT: Semidefinite programming. My brain was frying by this point of the course.",
            "comment_teaching": "Sunil is Hella OP. Love the dude, one of the nicest professor in CS department to be honest. You can tell he loves teaching. I personally thought his accent was very understandable (for me) but I know some people who bitch about his accent. Regardless, his explanation is crystal clear.",
            "comment_grading": "20% HW, 35% Midterm, 45% Final. <br /><br />Me:<br />100/100 HW (No Mean or SD Given)<br />87/100 Midterm (Mean is 49.6, Deviation is 16.4, Sunil was complaining that we are so dumb because the mean is so low)<br />82/100 Final (Mean was 57.4, sd is 17)<br /><br />Final Grade: A+<br /><br />This is the entire distribution of the class. I've marked my grade (A+) and my friend's grade (A-) for reference. <br /><br />Last 4 digits of SID, Total Percentage, Rank on Class<br />7561&nbsp;&nbsp;&nbsp;94.15&nbsp;&nbsp;&nbsp;1<br />2385&nbsp;&nbsp;&nbsp;86.95&nbsp;&nbsp;&nbsp;2<br />2686&nbsp;&nbsp;&nbsp;86.4&nbsp;&nbsp;&nbsp;3 (This is me, A+)<br />7004&nbsp;&nbsp;&nbsp;80.2&nbsp;&nbsp;&nbsp;4<br />7523&nbsp;&nbsp;&nbsp;78.8&nbsp;&nbsp;&nbsp;5<br />6244&nbsp;&nbsp;&nbsp;77.5&nbsp;&nbsp;&nbsp;6<br />6397&nbsp;&nbsp;&nbsp;77.3&nbsp;&nbsp;&nbsp;7<br />9309&nbsp;&nbsp;&nbsp;76.5&nbsp;&nbsp;&nbsp;8<br />7053&nbsp;&nbsp;&nbsp;76.4&nbsp;&nbsp;&nbsp;9<br />5912&nbsp;&nbsp;&nbsp;74.75&nbsp;&nbsp;&nbsp;10<br />6859&nbsp;&nbsp;&nbsp;74.7&nbsp;&nbsp;&nbsp;11<br />2860&nbsp;&nbsp;&nbsp;74.05&nbsp;&nbsp;&nbsp;12<br />7296&nbsp;&nbsp;&nbsp;72.65&nbsp;&nbsp;&nbsp;13<br />7046&nbsp;&nbsp;&nbsp;71.85&nbsp;&nbsp;&nbsp;14<br />1425&nbsp;&nbsp;&nbsp;71.7&nbsp;&nbsp;&nbsp;15<br />2532&nbsp;&nbsp;&nbsp;71.35&nbsp;&nbsp;&nbsp;16<br />5233&nbsp;&nbsp;&nbsp;69.6&nbsp;&nbsp;&nbsp;17<br />4275&nbsp;&nbsp;&nbsp;68.65&nbsp;&nbsp;&nbsp;18 (This is my Friend, A-)<br />5104&nbsp;&nbsp;&nbsp;68.55&nbsp;&nbsp;&nbsp;19<br />1804&nbsp;&nbsp;&nbsp;68.5&nbsp;&nbsp;&nbsp;20<br />3298&nbsp;&nbsp;&nbsp;67.7&nbsp;&nbsp;&nbsp;21<br />6543&nbsp;&nbsp;&nbsp;67.45&nbsp;&nbsp;&nbsp;22<br />7364&nbsp;&nbsp;&nbsp;67.25&nbsp;&nbsp;&nbsp;23 <br />0052&nbsp;&nbsp;&nbsp;67.2&nbsp;&nbsp;&nbsp;24<br />3905&nbsp;&nbsp;&nbsp;66.85&nbsp;&nbsp;&nbsp;25<br />8424&nbsp;&nbsp;&nbsp;66.75&nbsp;&nbsp;&nbsp;26<br />6224&nbsp;&nbsp;&nbsp;66.2&nbsp;&nbsp;&nbsp;27<br />0064&nbsp;&nbsp;&nbsp;65.15&nbsp;&nbsp;&nbsp;28<br />7810&nbsp;&nbsp;&nbsp;64.25&nbsp;&nbsp;&nbsp;29<br />6579&nbsp;&nbsp;&nbsp;63.8&nbsp;&nbsp;&nbsp;30<br />7107&nbsp;&nbsp;&nbsp;63.7&nbsp;&nbsp;&nbsp;31<br />4900&nbsp;&nbsp;&nbsp;62.5&nbsp;&nbsp;&nbsp;32<br />4442&nbsp;&nbsp;&nbsp;61.95&nbsp;&nbsp;&nbsp;33<br />1509&nbsp;&nbsp;&nbsp;61.05&nbsp;&nbsp;&nbsp;34<br />3864&nbsp;&nbsp;&nbsp;60.35&nbsp;&nbsp;&nbsp;35<br />1842&nbsp;&nbsp;&nbsp;59.8&nbsp;&nbsp;&nbsp;36<br />6110&nbsp;&nbsp;&nbsp;59.8&nbsp;&nbsp;&nbsp;37<br />6116&nbsp;&nbsp;&nbsp;59.7&nbsp;&nbsp;&nbsp;38<br />6456&nbsp;&nbsp;&nbsp;59.6&nbsp;&nbsp;&nbsp;39<br />6115&nbsp;&nbsp;&nbsp;59.2&nbsp;&nbsp;&nbsp;40<br />5638&nbsp;&nbsp;&nbsp;58.65&nbsp;&nbsp;&nbsp;41<br />1827&nbsp;&nbsp;&nbsp;58.2&nbsp;&nbsp;&nbsp;42<br />6183&nbsp;&nbsp;&nbsp;57.9&nbsp;&nbsp;&nbsp;43<br />7626&nbsp;&nbsp;&nbsp;57.6&nbsp;&nbsp;&nbsp;44<br />7016&nbsp;&nbsp;&nbsp;56.85&nbsp;&nbsp;&nbsp;45<br />6517&nbsp;&nbsp;&nbsp;55.4&nbsp;&nbsp;&nbsp;46<br />1608&nbsp;&nbsp;&nbsp;55.15&nbsp;&nbsp;&nbsp;47<br />3259&nbsp;&nbsp;&nbsp;54.85&nbsp;&nbsp;&nbsp;48<br />2502&nbsp;&nbsp;&nbsp;54.75&nbsp;&nbsp;&nbsp;49<br />8333&nbsp;&nbsp;&nbsp;54.45&nbsp;&nbsp;&nbsp;50<br />4548&nbsp;&nbsp;&nbsp;54.2&nbsp;&nbsp;&nbsp;51<br />8606&nbsp;&nbsp;&nbsp;53.85&nbsp;&nbsp;&nbsp;52<br />6385&nbsp;&nbsp;&nbsp;53.05&nbsp;&nbsp;&nbsp;53<br />6452&nbsp;&nbsp;&nbsp;52.3&nbsp;&nbsp;&nbsp;54<br />3064&nbsp;&nbsp;&nbsp;51.75&nbsp;&nbsp;&nbsp;55<br />2614&nbsp;&nbsp;&nbsp;51.3&nbsp;&nbsp;&nbsp;56<br />9528&nbsp;&nbsp;&nbsp;51.15&nbsp;&nbsp;&nbsp;57<br />1250&nbsp;&nbsp;&nbsp;50.9&nbsp;&nbsp;&nbsp;58<br />8680&nbsp;&nbsp;&nbsp;50.7&nbsp;&nbsp;&nbsp;59<br />6323&nbsp;&nbsp;&nbsp;50.55&nbsp;&nbsp;&nbsp;60<br />7589&nbsp;&nbsp;&nbsp;49.95&nbsp;&nbsp;&nbsp;61<br />0529&nbsp;&nbsp;&nbsp;48.6&nbsp;&nbsp;&nbsp;62<br />7369&nbsp;&nbsp;&nbsp;45.75&nbsp;&nbsp;&nbsp;63<br />6103&nbsp;&nbsp;&nbsp;45.4&nbsp;&nbsp;&nbsp;64<br />4069&nbsp;&nbsp;&nbsp;42.55&nbsp;&nbsp;&nbsp;65<br />7119&nbsp;&nbsp;&nbsp;42.4&nbsp;&nbsp;&nbsp;66<br />6191&nbsp;&nbsp;&nbsp;41.35&nbsp;&nbsp;&nbsp;67<br />6695&nbsp;&nbsp;&nbsp;41.25&nbsp;&nbsp;&nbsp;68<br />3429&nbsp;&nbsp;&nbsp;39.5&nbsp;&nbsp;&nbsp;69<br />0260&nbsp;&nbsp;&nbsp;34.45&nbsp;&nbsp;&nbsp;70<br />3875&nbsp;&nbsp;&nbsp;33.25&nbsp;&nbsp;&nbsp;71<br />6402&nbsp;&nbsp;&nbsp;7.5&nbsp;&nbsp;&nbsp;72",
            "comment_workload": "The workload is a bit heavy if you want to do well. You have to practice extra problems other than the homework. And to be honest, you need to be a bit smart since some arguments are quite abstract. So yea, if you want to do well, do lots of extra exercises from the book + preferably be smart",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 14,
            "vote_count": 14,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "lBPOugOW79b2JuWqhPMSm82je3dGFs2z",
            "semester": "2018-19 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Aaron W",
            "date": "Jul 20, 2019",
            "title": "Very Interesting Course!",
            "comment_content": "You can find the detailed content list in the other review. Nothing really to add on to it.",
            "comment_teaching": "Sunil is super good at teaching, and I really enjoyed his class. Most of his explanations were very clear so I didn't have to do much revision out of class except for before the exams.<br /><br />The only problem I could really think is that he doesn't have any notes, so you either have to take good notes or read the books after class.",
            "comment_grading": "20% Assignments (4 of them) (Mean: 67/80)<br />35% Midterm (Mean: 50.8/100)<br />45% Final (Mean: 57.4/100)<br /><br />Me:<br />Assignments - 78/80<br />Midterm - 61/100<br />Final - 79/100<br />Ranked 9/72 -&gt; A<br /><br />Sunil said that he usually curves an A- average, but since the mean of the midterm was so low, he said that he might curve it to B+ (which I think he probably did this year based on the other review). Still quite good though.",
            "comment_workload": "If you want to just get by, the workload is actually pretty light, since it's only 4 assignment (each with 4 problems) and two exams. You can usually find the solution online (or that of similar problems), so the minimum workload is actually not that high. However, if you want to do well, it takes a lot of time to understand (or memorize) the proofs.<br /><br />When I approached Sunil for approval, he said that he only recommends people who got an A or A+ in 3711/3711H to take it, and I do agree that if you had any trouble with 3711/H, then you'll definitely run into a lot of trouble here. That being said, if you had no problem with 3711/H, then you should be able to keep up, as it was manageable even for a UG Year 2 like me.<br /><br />Also, this is a very popular PG course, so be prepared to register early. I registered as soon as I could, and I only barely managed to get off the waitlist on the last day of add/drop.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "7ogoDri1mmgWbxxSETHd3itu7ygqywmQ",
            "semester": "2018-19 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "haq",
            "date": "Aug 28, 2019",
            "title": "",
            "comment_content": "there are three different assessments. Four Homework, one midterm, and one final exams. All of the exams are closed book so there will be a need of memorisation for proofs.&nbsp;&nbsp;the weightage was 20 for homework, 35 for midterm, and 45 for final exam. <br /><br />There are course notes from some other universities and e-books provided by instructors. Most of the notes are based on those notes. In some cases professor uses a bit different notations than those notes but overall no difference.",
            "comment_teaching": "he is an excellent teacher though you would have to take your own notes during lecture. <br />So far the best the teaching experience i had in hkust,",
            "comment_grading": "Grading is okay. Usually A- on curve. <br />However, there was a case where he lowered the grade because the midterm average was low for whole class and assigned lower than A-&nbsp;&nbsp;on curve.",
            "comment_workload": "If one really wants to grasp all the concept then this course needs a lot of time. However, there seems to be pool of previous problems sets from which the exams and homework questions are taken or questions on the same lines.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "UI0Yawvp04i2GkKlmRGWsI9TsOaynU0c",
            "semester": "2022-23 Fall",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "PeterGam",
            "date": "May 11, 2023",
            "title": "Recommended for ML-related PGs/Theorem enthusiasts",
            "comment_content": "Introduction of Decision Problems: How to turn the optimization problems to decision problems, P, NP, co-NP, YES/NO certificates, and simple examples.<br /><br />Steiner Tree and TSP - 2-approximations for Steiner tree problem and TSP problem. Discussed with improvement and generalization.<br /><br />Linear Programming and Duality: Introduction to LP, and Weak/Strong duality theorem proof (though, the proof of strong duality is only an illustration of a two-dimensional case).<br /><br />Weighted Vertex Cover: Deterministic Rounding and Primal-Dual Algorithm. Starts using duality theorem for developing algorithms. this is where the course begins picking up the difficulty.<br /><br />Algorithms for Set Cover: Probabilistic rounding algorithm for vertex cover as well as a greedy algorithm for set cover. The greedy algorithm's analysis is quite tricky so memorize it well. I was stuck in the proof at the beginning.<br /><br />Max Flow: Introduction of max flow/min cut + basic property introduction + Ford Fulkerson's algorithm. <br /><br />Algorithms for Max Flow: Both the fattest path algorithm and Edmond's Karp algorithm and their analysis. Both analyses are tricky and take time to understand.<br /><br />Algorithms in Bipartite Graphs - The main thing here is Konig's Theorem and Hall's theorem. YOU NEED TO BE VERY FAMILIAR WITH THESE THEOREMS TO PASS THE EXAM.<br /><br />The Linear Program of Max Flow - Max flow, but with LP analysis. Kinda boring and w /difficulties to understand.<br /><br />Steiner Forest: Steiner tree, but 10x harder. Need to be very careful of the implementation of the approximation algorithm.<br /><br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />Warning, God level Starts from here. Even <br />Sunil hardly finishes these lectures on time.<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br />-----------------------------------------------------------<br /><br />Multiway cut problem： Sunil cannot finish the lectures on time starting from this problem. Since the proof is very hard to explain.<br /><br />Max Cut: Introduction to vector programming/semi-definite programming. But treated with black boxes to solve the max-cut problem due to lecture time limitations. <br /><br />MAX-SAT and MAX-2SAT: Semidefinite programming. You should really refer to the lecture notes for clearer proof. Since Sunil would only introduce the layout of the proof due to the time limitation.",
            "comment_teaching": "Despite a bit of his Indian accent, this is the BEST learning experience I have had at HKUST. Prof. Arya is so well at explaining abstract concepts. With the hard problems, he would directly teach us the outline of the proofs and with that in mind, we can refer to the lecture notes easily. Taking this class was very rewarding.",
            "comment_grading": "The grading is fair with highly detailed, point-to-point comments. If you do it well, the score would be high.",
            "comment_workload": "The assignments are hard. Therefore if you want to do it well, you probably should start early. Also, if you want to do well in the exam, extra problems from the lecture notes can help a lot.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "pBIDeL6fpO7Vp5DykYtQnig62T3TT2wS",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Azrael",
            "date": "May 31, 2022",
            "title": "Take Notes and Memorize!",
            "comment_content": "Introduction to approximation algorithms and linear programming. Covers the following topics:<br />- Introduction of Decision Problems: P, NP, co-NP, YES/NO certificates, and simple examples. <br />- Steiner Tree and Traveling Salesman Problem: Two famous examples to lead into approximation algorithms, quite straightforward.<br />- LP, LP Duality, Weak Duality, Strong Duality: Introduce Linear Programming and how they can be linked to combinatorial problems. Introduce Weak&amp;Strong Duality Theorems and provide intuitive proof.<br />- Weighted Vertex Cover &amp; Weighted Set Cover: Two examples to demonstrate some basic intuition/methods to design algorithms with LP. Mainly introduced 4 methods: deterministic rounding, randomized rounding, primal-dual, and greedy. Then define Integrality Gap to give upper bounds for approximation factor. At this stage of the course, please focus on the intuition behind those methods, and make sure to be very familiar with the proofs.<br />- Network Flow: Basic Theorems, Ford-Fulkerson, Fattest Path, and Edmond-Karp. A bit deeper than what was mentioned in 3711, try to be familiar with the proofs.<br />- Bipartite Matching: Hall's Theorem &amp; Konig Theorem. This topic might have some flexible application in HW &amp; Exam, so please be familiar with their application and try to practice modeling.<br />- LPs of Max Flow &amp; Min Cut: Interpret Network Flow in the aspect of Linear Programming. Mainly discussed a very beautiful alternative proof for the Max-Flow-Min-Cut Theorem.<br />-------- The above topics are all primitive models/methods around approximation algorithms --------<br />-------- The following are modern techniques in approximation algorithms --------<br />- Steiner Forest: The application of sophisticated Primal-Dual algorithm. Quite hard at the first glance, but not that difficult if splitting the proof into several sections and interpreting them one by one. It is not likely to test the variant of the problem in exams, instead, the exam questions are often more related to the proof or integrality gap of the original question.<br />- Multi-way Cut: Introduced a naive 2-approximation algorithm and a sophisticated 1.5-approximation algorithm using randomized rounding. The LP formation of this problem is brilliant and the proof is really hard. Please be very familiar with the proofs and try to do some variations on the proof (e.g. Pove (1.5-1/k)-approximation).<br />- Max Cut: An example to introduce quadratic linear programming. Pay attention to this new form of LP and the proof of randomized algorithm should be quite simple.<br />- Max-SAT: The problem is hard and we only discuss two naive randomized rounding algorithms, the proof should not be very hard.<br />- Max 2-SAT: A more complex application of quadratic LP. The overall intuition of proof is similar to Max-Cut. Please be familiar with how to solve quadratic LP in some instances and analyze the integrality gap.<br />- Global Min Cut: Introduce the famous Edge-Contraction Algorithm. This is a randomized rounding algorithm and the difficulty level is similar to the randomized rounding for weighted set cover.",
            "comment_teaching": "Despite a little bit of an Indian accent, Sunil's teaching is clear and he's good at explaining complex structures in an intuitive way.<br />The only problem is that he does not publish notes and his handwriting might be a bit confusing. But anyway, taking notes will definitely improve your understanding of the course.<br />Reference textbooks are quite useful. If you got some problem related to course contents, be sure to try to look it up in the textbooks.",
            "comment_grading": "Grading Scheme: 20% Assignments + 35% Midterm + 45% Final.<br />Midterm and Final are not very hard compared to past papers, and they are closed-book so it is required to memorize most of the proofs discussed in class.<br />My Scores: Almost full in assignments, 97/100 in midterm, 89/100 in final. ==&gt; A+<br />Statistics: Midterm: mean 77, sd 17; Final: mean 70, sd 17.<br />Pretty good grading, considering that I was only few points above mean+1sd and got A+.",
            "comment_workload": "4 Assignments, each with 4~6 problems. The workload is overall similar to 3711, and you might need to think for a long time since this is a challenging course.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "ygLClTSDFFp0VdP71xIQDZl83k5ZMdoG",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "rind",
            "date": "May 27, 2022",
            "title": "I strongly recommend UG students who satisfies the prerequisite to take this course.",
            "comment_content": "This is a PG course. But if you get an A in Comp3711, Arya will allow you enrol in this course.<br /><br />For a UG student to take this course, you have to be comfortable to the followings:<br />1. Linear Algebra (Basic vectors and matrix)<br />2. Probability Theory (Used heavily in Randomized Algorithms)<br />3. Understanding and Writing Proofs<br />4. All basic graph stuff in 3711 (Time Complexity, and details for all algorithms)<br /><br />This course aims at finding an approximation algorithm that gives a good approximation factor in polynomial time for NP-hard combinatorics problems, most of them are graphs.<br /><br />The course schedule:<br />0. Introduction to Combinatorics, P and NP, NP-complete and NP-hard.<br />No worries if you haven't take the course on Theory of Computation (Comp3721) as Arya will give all the things you need in one lecture.<br /><br />1. Steiner Tree<br />2. Travelling Salesman Problem<br />Classical problems to illustrate how an approximation algorithm is generated and its proof.<br /><br />3. Linear Programming (LP) and Duality<br />The most important milestone in the course. You can feel how amazing it is that many problems can be expressed as LP and uses its own relaxation and duality to come up with good approximation ratios for many NP-hard problems later. Many notations for vectors/matrices, make sure you know how to write an ILP for questions.<br /><br />4. Minimum Weighted Vertex Cover<br />Introduction to Integrality Gap, also serves as the first example using the duality theory. Deterministic rounding and Primal-Dual Algorithm.<br /><br />5. Set Cover<br />A more general problem for vertex cover. The difficulty starts increasing here as it introduce randomized approximation algorithms. A deterministic greedy algorithm is also introduced.<br /><br />6. Max Flow, Min Cut, Ford-Fulkerson, Edmonds-Karl<br />Something taught in 3711, a fattest augmenting path algorithm is also introduced. Arya did a very great job in explaining the max flow min cut compared to Comp3711.<br /><br />7. Bipartite Matching, Hall's, Konig's algorithm<br />Application of Flow Network for bipartite problems.<br /><br />8. LP of Max Flow and its dual<br />Also another example for LP-duality<br /><br />9.Steiner Forrest<br />A more general version for Steiner Tree problem. The Primal-Dual Algorithm for this problem is quite messy to run on paper. Analysis of algorithm is a bit hard but still manageable.<br /><br />10. Multiway-cut Problem<br />I think this one is the hardest thing in this course for me. The ILP is not easy to write, the proof for randomized approximation algorithm is very lengthy and difficult to understand. (You have to project this problem in n-dimensions).<br /><br />11. Max Cut<br />As an introduction to semi-definite/vector programming. Proofs are not lengthy and it illustrate how to transform a problem to a vector program. (You need some basic geometry here)<br /><br />12. Max-SAT Max-2SAT<br />Randomized Algorithm combined with Vector Programs, for me this one is easy to understand. The hard part is to formulate a vector program.<br /><br />13. co-NP <br />Theory again on another conjecture: co-NP intersect NP = P . Focus on the well-characterised properties of a problem. Very interesting topic that understand how researchers will use this approach to explore the possibility of a poly-time algorithm exists for a particular problem.<br /><br />14. Global Min Cut, Edge-Contraction Algorithm<br />Not sure why it is here, no LP, no Semi-definite programming, no randomized approximation. Just analyse a clever approximation algorithm comes from no where.<br /><br />We cover a lot of problems. Therefore some tools we just treat it as a fact without giving a proof (LP, Vector Program can be solved in poly-time).",
            "comment_teaching": "The best teaching in HKUST.<br />If you have taken Arya's 2711H, you will know he is very good at explaining things/engaging students. Every lesson is an amazing show.<br /><br />The biggest takeaway from this course for me is to make sure everything is clear and explicit. Arya always dive deep into every details for a problem by mathematical notations or in words (I like this because it makes complicated stuff easier).<br /><br />He tries to avoid using a lot of mathematical notation like in the textbooks, but the level of rigorous is much much much more higher than in Comp3711. You can also appreciate the beauty of the proofs by the way they construct it, some convenient assumption makes the expression/analysis much more simpler.<br /><br />I think for a UG student, this course is actually the gateway to a brand new world. Arya does not only teach the problem itself but also include some known fact for the problems/the most recent advancement for the problem. Although the problem presented in this class are very classical, you can really feel how Computer Scientists or Mathematicians approach to solve these problems.",
            "comment_grading": "Grading Scheme:<br />Assignment x 4 20%<br />Midterm 35%<br />Final 45%<br /><br />My Scores:<br />Assignments: 29.5/30, 20/20, 40/40, 19/20 (remember to prune the edges in the Primal-Dual Algorithm in Steiner Forest Problem!)<br />Midterm: 79/100 (mean: 77, sd: 17)<br />Final: 85/100 (mean: 70, sd: 17)<br />Grade: A<br />The grading is very good, I think mean ~A-<br /><br />Arya gives one year of past paper for practice, the difficulty is similar/easier in the real exam for this offering.<br /><br />The toughest problem in the midterm exam is to write an ILP for a problem not taught in class and if you fail to write the ILP, you miss a lot of points in the following subquestions. Therefore, practice more on writing an ILP.",
            "comment_workload": "It really depends on your ability.<br />The assignments are hard, sometimes it takes me one whole day for one question only. I use around 3-4 days for the first assignment.<br />As the course progress and maybe my ability in writing proofs is getting better, I can usually finish within 1-2 days.<br /><br />The midterm and final exams are getting easier these years. At least 50% are directly from what is taught in lectures and the remaining requires some smart way to transform the question into course material. So it is some how requires both hard-work in memorizing and intelligence to perform well in exams.<br /><br />Btw, Arya writes his notes during lecture time and does not upload them, make sure you jot all them down.<br /><br />For a UG student, the course workload is still manageable and it is an enjoyment to learn these contents.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "pk6ZFhm3iq4Z3QXRhl9a34gzww7XZ1bK",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "HP Filter",
            "date": "Jun 04, 2021",
            "title": "",
            "comment_content": "An introduction to the basic tools of Combinatorial Optimization.<br />The professor may say something discouraging in the first class like someone should not take this course. But I think anybody can take it as long as they know what linear programming is, because I even did not know what NP is before taking the course.",
            "comment_teaching": "There's no doubt that the lectures are excellent. In some other courses, it seems that only top 50% of the students in the class can keep up with the professor. However, Prof. Arya tries to ensure that all students fully understand the key points. Every point will be introduced in detail even if it is quite basic. There's no slide used in this course. So, you need to be fully concentrated in the class and take notes when necessary. Otherwise, it would be quite tough to prepare for the exam.",
            "comment_grading": "The professor has gradually reduced the difficulty of the exams in recent years. The questions in previous semesters are quite hard. However, in this semester, nearly all the questions in the exams are derived from examples in the lectures or the questions in assignments. Since the gradings are strongly relevant to performance in the exams, it is not very hard to get A.",
            "comment_workload": "Four assignments with 4-6 questions in each one. Half of them can be easily solved with the techniques introduced in the class while the others require a little creativity.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "IwjmkJ69FnznVIVnmEx2ohYkgLmROYdI",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Croc",
            "date": "May 27, 2022",
            "title": "",
            "comment_content": "Check it in the course website.<br />You shouldn't take this course if you just want to pass or you plan to spend little time on it. If you are interested in Algorithms and are willing to take challenges then I truly recommend you this course.",
            "comment_teaching": "Arya's teaching is fantastic. At first I studied by textbook but found it really hard. Later I went back to see the zoom records(teaching this term) and I soon got into the core idea of this course. He's very good at illustrating the process of complicated proofs.<br /><br />I think it's the best course I ever take.",
            "comment_grading": "You can pass the course iff you study this course with efforts and understand every concept in the class. Every point mentioned in the class would be included in the exams, thus you will not find any shortcuts of passing this course.<br />A suggestion(or requisite) is taking note for every section. When you start reviewing this course, for each section you should ask yourself several questions in terms of:<br />(1) Problem Definition &amp; Modeling(Integer LP, LP, VP)<br />(2) Algorithm<br />(3) Analysis of approximation factor<br />(4) Analysis of running time<br /><br />For grading, I think if in every hw&amp;exam you get mean, then you will get around A-.",
            "comment_workload": "4 homeworks and each of them will take you about a whole day. You also need to spend a lot of time looking at your notes and understanding the ideas. When preparing for exams, make sure you have 5 days to get your self familiar with all the notes and the homework problems.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "vxqpVWwhABXH5wIQbhBc7vyXEYCvTeYc",
            "semester": "2016-17 Spring",
            "instructors": [
                {
                    "id": 107,
                    "name": "ARYA, Sunil",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Stephen",
            "date": "Jun 05, 2020",
            "title": "Upperbounding UST CS Teaching",
            "comment_content": "Please read other reviews.",
            "comment_teaching": "I would give A+ but A is the best possible grade to give. This is the only course I took with Arya and the few only course meetups that I think deserve my attention. We all know that UST CS course mainly depends on self-learning. However, Arya makes the content sounds really interesting, easy to follow as well as mentally stimulating through his well-posed questions in class. If you are a computer scientist who likes the old school white-board-writing teaching, his lectures definitely worth your time.",
            "comment_grading": "You will get A range if you are half-decent.",
            "comment_workload": "I think the workload is around the same level of COMP3711H, COMP5711 and etc.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 5,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        }
    ],
    "composer": []
}