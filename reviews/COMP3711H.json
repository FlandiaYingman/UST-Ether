{
    "error": false,
    "course": {
        "id": 226,
        "subject": "COMP",
        "code": "3711H",
        "name": "Honors Design and Analysis of Algorithms",
        "description": "Techniques for designing algorithms, proving their correctness, and analyzing their running times. Topics covered include: sorting, selection, heaps, balanced search trees, divide-and-conquer, greedy algorithms, dynamic programming, and graph algorithms. The class will also provide an introduction to advanced techniques such as amortized analysis and the design of randomized and approximation algorithms, as well as providing exposure to more advanced algorithmic solutions to optimization problems, e.g. linear programming and network flow.",
        "categories": [],
        "website": null,
        "credits": 4,
        "semesters": [
            2010,
            1910,
            1810,
            1710,
            1610,
            1510,
            1410
        ],
        "prerequisites": "(Grade B+ or above in  <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2011\" href=\"/review/COMP2011\" target=\"_blank\">COMP 2011</a> / <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2012\" href=\"/review/COMP2012\" target=\"_blank\">COMP 2012</a> / <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2012H\" href=\"/review/COMP2012H\" target=\"_blank\">COMP 2012H</a>) AND (grade A- or above in <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2711\" href=\"/review/COMP2711\" target=\"_blank\">COMP 2711</a> / <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2711H\" href=\"/review/COMP2711H\" target=\"_blank\">COMP 2711H</a> / <a class=\"course-link\" data-subject=\"MATH\" data-code=\"2343\" href=\"/review/MATH2343\" target=\"_blank\">MATH 2343</a>)",
        "corequisites": "",
        "exclusions": "<a class=\"course-link\" data-subject=\"COMP\" data-code=\"3711\" href=\"/review/COMP3711\" target=\"_blank\">COMP 3711</a>",
        "rating_content": 4.29,
        "rating_teaching": 4.71,
        "rating_grading": 4.29,
        "rating_workload": 3.43,
        "review_count": 7,
        "single_review": false,
        "enrollment_status": 3,
        "is_favourited": false,
        "is_subscribed": false,
        "user_review_hash": "",
        "contributor_has_more": false,
        "instructors": [
            {
                "id": 116,
                "name": "GOLIN, Mordecai Jay",
                "count": 7
            }
        ]
    },
    "reviews": [
        {
            "hash": "7UNFAsUMQvvfMfmVYWUvbivbdeILH8bU",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Celina_jr",
            "date": "Feb 03, 2021",
            "title": "come if you love writing proofs &amp; check if you really love CS",
            "comment_content": "( If you are a genius then don't read this post because I'm not one, especially when doing MATH )<br /><br />And this post is subjective&nbsp;&nbsp;:/<br /><br />First of all, it teaches algorithm so don't come if you are a coding lover and is taking the honors COMP course for more programming exercise.<br /><br />This is more a mathematical course than a COMP course ( at least when doing the assignments ), you are expected to write very strict and ( not too but still ) complicated proofs in assignments. <br /><br />SO if you don't do well at MATH and especially hates writing proofs - well, take care :/&nbsp;&nbsp;Getting start in writing a perfect proof and writing dozens of them hurts. <br /><br />However, these contents are not hard to understand. BTW if you are not very into algorithms and proofs - take COMP3711 instead. The contents should be basically the same.",
            "comment_teaching": "Nice professor, he teaches well but sometimes it gets boring ( sorry, my bad )<br /><br />The course has a piazza for posting question like the usual COMP courses and sometimes professor gives hints about some of the assignment questions.",
            "comment_grading": "This year no midterm and the final exam is not a difficult one, as long as you are familiar with the algorithms and definition you are going to manage it.<br /><br />You can improve you grade by doing some bonus questions, but it won't be useful if you are not on the cut-off edge.<br /><br />He mentioned that you are guaranteed a A if overall grade is &gt;=90, B if &gt;=80. Besides,&nbsp;&nbsp;he said around 90% of the students will get A or B while more are getting A.<br /><br />But bear in mind that it is still competitive &amp; time-consuming as honor course attracts people with golden medals :/<br /><br />Anyway, grading is fair. If you are not a genius but want to challenge yourself, make sure you have time and energy for it.",
            "comment_workload": "(&nbsp;&nbsp;I confess that I drift away when attending classes so I miss contents from time to time.&nbsp;&nbsp;)<br /><br />One can self-study the materials but it is also going to be tiring because they are long and full of proofs.<br /><br />The assignments took a decade to finish. by finish I mean going into every details and double or even triple checking for correctness. On average, I take six hours to finish a single question if I study one topic from nothing.<br /><br />Be prepared to become a study-holic (and even more than that) if you are also busy with other courses: I killed my weekends and most leisure events. ( never want to experience again )<br /><br />However, sometimes you can't save them all even work to heart-attack: when coming to the&nbsp;&nbsp;final p, you have loads of deadlines and have to review. Will you love a double-sized assignment? (&nbsp;&nbsp;`w'&nbsp;&nbsp;) <br /><br />BUT, if you have a plenty of time, come ahead, it is well-worth taking. At the end of this course you will be okay with MATH proofs, even though you might still dislike them.<br /><br />And try to finish the tutorial questions before attending the tutorial session.<br /><br /><br /><br /><br /><br /><br />( Even recalling is tiring )",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 5,
            "vote_count": 5,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "Zt2syl9rYs8tVosKGjVqMRKi0UlHm2Ii",
            "semester": "2019-20 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Tommy Li",
            "date": "Feb 26, 2020",
            "title": "Honors Introduction to Algorithms",
            "comment_content": "&quot;The course is running BFS but not DFS.&quot;<br /><br />This course covers lots and lots of algorithmic contents. From basic greedy algorithms, to advanced graph algorithms such as max flow. The content covered is mostly the same as the non-honor version, but with more proofs. <br /><br />Due to the wide range of content, most of them are not discussed in depth. Even worse, for those the topics with depth, you don't have time to digest the topic before moving on to the next one. I think it would be better to have fewer topics with more examples and techniques. <br /><br />Moreover, the course is supposed to put more focus on the tools of proofs, but not skimming through algorithms. The course just simply assume us to knowing how to write a mathy proof in advance. I believe the problem is the key steps of the proofs are not highlighted during lecture. So we will easily get stuck or end up with a proof that is not rigorous enough.<br /><br />It would be much better if this course can be splitted into two separate course. One is for introduction to the algorithms and the other one is advanced algos/data structures with analysis. The latter one should include things like basic reductions or some simple complexity theories. This is an honor course and it supposes to introduce things that are more difficult.",
            "comment_teaching": "I personally not a fan of golin's teaching style and most of the reviews are a little bit overrated in my opinion. The slides are lengthy with too much details. He claimed you can learn all the things from the slides without attending the lecture. It turns out he tend to talk a lot during lecture without emphasizing the main points. You will get lost easily if you do not have some prior knowledge.<br /><br />Nonetheless, I do feel his passion for the class. He did put quite a bit of effort into the class arrangements. Detailed instructions for course assessments are given. For the online exam on Feb, he sent out many emails and did test runs to ensure our setup run smoothly. The solution of homework and exams were provided in details with marking notes. You even have to send a special form for appealing. I sometimes feel he over-complicated many things....",
            "comment_grading": "It feels like you can easily get below mean in assignments and exams because this class is quite competitive. Despite my good algorithms background (being in competitive programming team and knew most of the algos in advance), I will still get a bad result if I do not work hard.<br /><br />My score and class stats:<br />Assignment 1: 91/100 (Mean: 94.2)<br />Assignment 2: 100/100 (Mean: 96.4)<br />Assignment 3: 95/100 (Mean: 90.1)<br />Assignment 4: 94/100 (Mean: 60.1, probably due to P/F scheme)<br />Assignment total: 380/400 =&gt; 28.5/30<br />Midterm: 79/100 (Mean: 80, Median: 80, Max: 98) =&gt; 23.7/30<br />Final: 94/100 (Stats not released) =&gt; 37.6/40<br />Extra Credit Problems: 13/16 <br />Total: 89.8/100 =&gt; A (A- without EC)<br /><br />Prof. sent me a email saying that my grade was just below the A threshold, and I would receive an A instead of A- because of the EC problems. I'm not sure but I guess this course uses absolute grading with a 90 A cutoff.",
            "comment_workload": "Considering this is an honor course, the workload is reasonable.<br /><br />The time-consuming part is the assignments. Writing up nice and detailed proofs take a lot of time. For me, each question takes me about 3 hours to complete while there are 4-5 questions in each assignment. Also, think twice before you submit. You may miss some small important parts that could mess up your whole proof.&nbsp;&nbsp;<br /><br />Both midterm and exam are closed-book. However, the questions are quite easy that they are slightly modified versions of the past paper and class notes. Be sure to do some practice with past paper or you may get below mean like me. :C Really regret I did not recite the answers of the past papers before the midterm. I lost most of the points in one of the directly copied from past paper question. So, in terms of revision, the only work would be reviewing the lecture notes and do past papers which would not be too much workload.<br /><br />Attendance in lectures or tutorials are not mandatory. As mentioned above, you can learn all the things from the slides without attending the lecture. I attended most of the lectures but not the tutorials. Don't expect too much from the course TAs......",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 3,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "SPatDx2MG7gOR8I437gm13bv3tcoIw2d",
            "semester": "2018-19 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "JimmyLeung1998",
            "date": "Dec 21, 2018",
            "title": "“Basic” algorithm course",
            "comment_content": "Pre-requisites: <br />Logic - implication, inference rules, iff, ...; <br />Data structure - pointer, linked list, queue, ...; <br />Math - probability, expectation, indicator rv, ...; <br />Proof - induction, contradiction, ...<br /><br />Here are some key topics.<br />(Before midterm exam)<br />1. Sorting algorithms &lt;- diff math and data structure<br />2. Decision tree &lt;- BST, AVL in comp2012<br />3. Divide-and-conquer algorithm &lt;- recursive def and sol to problems<br />(Rmk: D&amp;C’s application includes FFT algorithm, which is sth related to complex number a+bi, and the root-of-unity concept.)<br />4. Greedy algorithm &lt;- to prove a “take-all-we-can-now” algorithm is the best (or optimal) algorithm (may not always appear in midterm exam)<br />(Rmk: Pf here reqs careful induction/contradiction.)<br /><br />(After midterm exam)<br />5. Dynamic programming &lt;- to use memory or storage to eliminate recursive computations <br />6. Graph algorithms &lt;- including BFS, DFS, ...<br />6.1 Minimal spanning tree &lt;- Dijkstra, Prim<br />6.2 All-pair-shortest-path &lt;- Folyd-Warshall<br />6.3 Max-flow-min-cut &lt;- Ford-Fulkenson<br />7. Extra topics like hashing, not appearing in any hws or exams.",
            "comment_teaching": "As always, prof’s teaching is great. Even in H class, he still does not mind to explain every key concept in detail. This way of teaching often helps clear things up for me.<br /><br />But on the other hand, tutor’s presenting skill is not that good. If you are confident enough, you may skip the tutorials and do self-study.",
            "comment_grading": "20%+ hw (with optional bonus questions)<br />30%&nbsp;&nbsp;&nbsp;midterm exam <br />50%&nbsp;&nbsp;&nbsp;final exam<br /><br />Prof is quite strict in grading std’s work. As he said in the first class meeting, every answer to the hw (and exam) questions has to be clear and detailed with valid elaborations. So if you want to get high marks, you would have to be very smart AND careful.",
            "comment_workload": "Assignments are tricky. You really have to think about what’s going on. After you think you have the right idea, you would then have to formulate a nice algorithm and show a valid proof of correctness. Often this process takes time. If you don’t like to read and write clever codes with heavy mathy logic behind, you might want to reconsider about whether or not to take this course. <br /><br />One more thing to note is, exams are closed-book. Prof may say he would provide you with some fact sheets, but they are really of little values... So plz don’t simply rely on the given fact sheets and think you can solve every problem. Instead, you do need to revise on the above key topic materials.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 3,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "E0oJr8DQGSl3jOjDVN9D1FQ5S26y3ypb",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Think",
            "date": "Dec 23, 2020",
            "title": "",
            "comment_content": "Typical algorithm stuff.<br /><br />Sorting<br />Randomized algorithm<br />Greedy<br />Graph<br />Dynamic Programming<br />Max Flow<br />Stable Marriage<br />Hashing<br />String Matching<br />+ extra (if time allows)<br /><br />The focus is more on mathematical proofs of each algorithm than how to use them for specific problems. I would've appreciated more if some more practical usages of algorithms were included in the course..",
            "comment_teaching": "He is passionate, and a good teacher I think. He sometimes makes mistakes, but it is understandable. Also, he is a little bit strict on formality (of your proof). He replies to questions super fast, which is great.",
            "comment_grading": "Honestly, Prof. Golin seems like he would grade very strictly. However, I think grading scheme is quite lenient: it is hard to get full mark as he emphasizes on getting all the details correct too, but in fact he does not penalize you for the mistakes too much. Also, if there are multiple parts of questions (and there will always be multiple parts for one question), each subpart will be graded separately for the most part: you won't lose much point for the second part because you got wrong in the first part.<br /><br />This semester was entirely online, so no MT, but 6 assignments, 1 final. The last assignment was double sized, so essentially 7 assignments.<br /><br />HW 60% mean: 94/100<br />Final 40% mean: 82/100<br /><br />It is an H course so the class is quite competitive.<br /><br />One good thing of the course is that since it is an H course, some absolute grading is applied. If you get &gt;90%, you are guranteed an A-, and B- gurantee for &gt;80%, and so on. In practice, a little below 90% would still get you A- or even A (depending on the competitiveness of the class)",
            "comment_workload": "The HW takes freakishly long to finish. I mean, workload wise, it almost felt like 2012H, a 5 credit course, or even worse.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "SX0FswyrBvWNVBeN2AEvvtrw1msooL9U",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "liuzcz",
            "date": "Feb 03, 2021",
            "title": "Good Course!",
            "comment_content": "The course includes the following topics:<br />sorting, BST, randomized algorithm, divide&amp;conquer, graph, dynamic programming, max flow, hashing.<br /><br />The content is rich! This course introduces many famous algorithms and their proofs in CS.<br /><br />The content is quite difficult, some questions are extremely confusing. It really needs some time to understand them.<br /><br />Compared to the non-honor version i.e. COMP3711, this course includes lots of mathematical proofs. You can't miss this course if you are a MATH-CS person :).",
            "comment_teaching": "Prof Golin is good at explaining things clearly. I personally enjoy his teaching. Every lecture is worth listening to.<br /><br />Prof Golin is also really a helpful guy. If you have any questions, feel free to ask him.",
            "comment_grading": "60% homework + 40% final.<br /><br />HW mean: 651.7/700<br />Final mean: 82.7/100<br />overall mean: 88.94/100<br />Overall 90 will guarantee an A range. I've heard this course used to be absolute grading i.e. 95 A+, 90 A, 85 A-. But I don't know if this works for the new grading scheme. <br /><br />Me:<br />Homework: 673/700<br />Final: 96/100<br />final grade: A+",
            "comment_workload": "Workload is quite HEAVY!!!<br />There are in total 6 homework and each takes me at least 10 hours to finish it.<br /><br />But the homework really helps me figure out how the algorithms taught in the course work.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "6MIul9oaRgtYXFLziZclvlftl6KkzzYn",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ruozhilaji",
            "date": "May 30, 2021",
            "title": "",
            "comment_content": "The content is the same as before. You might pay some attention to the part that not covered before due to the different speed every year. <br /><br />IMO, I think the content could be more since this is a 4-credit course.",
            "comment_teaching": "As Golin is a &quot;native&quot; speaker, you could expect that the speed might be faster than normal CS professors. Then the course is really enjoyable since there will not be any &quot;en&quot; or &quot;uh&quot; during the lecture.",
            "comment_grading": "Actually not that good I guess. <br />I do not know how many people got A+ but I know the cutoff is 96. Even if you got an overall 95.9 without any bonus, you will receive an A.<br /><br />BTW, I heard that Golin gives a huge A&amp;B range in the spring semester (3711).<br /><br />So..., this honor version may not be good enough for normal students who satisfy the pre-requisite.",
            "comment_workload": "The workload is only a normal 4-credit course's load, which is much lighter than an honor math course.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 3,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "zvTCej3UpfUdcJSmngZ4VIIFiQiCEzCJ",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Iced Americano",
            "date": "Jan 24, 2017",
            "title": "Come if you meet the entry requirement",
            "comment_content": "Refer to the course description above for concrete content. I believe the difference between this class and the non-honor one is that this class skipped all the basic math at the very beginning, and introduce more involved and well-known algorithms which do NOT appear in the examinations(the reason may be that they are hard to test). I tried the past paper of the non-honor one, and I genuinely do not think that the tested content of the two classes differ much.",
            "comment_teaching": "Professor Golin is nice and devoted into teaching. He tried hard to encourage students to give some comments and questions in the class. Also, he was very willing to help with the assignments. His pace was quick, so the lectures were less boring. Although he did not test content that were only covered in class but not in the notes, skipping his lectures is not encouraged. His teaching can really facilitate your understanding. On the other hand, the TA is less helpful. The tutorials were extremely boring. The only function of tutorials was to get back the graded assignments and exam papers. Answers to tutorial notes written by Professor Golin would be uploaded to his website anyway.",
            "comment_grading": "Very good. There is some rumour that a lot of post graduates take this class, and they curve up the performance. But according to my personal conversation with the professor, he said most PG actually take the non-honor one, because of the seemingly large workload of this one. And they do not even do as good as the UG do. Also, this course used absolute grading, and it is sufficient to stay on the mean, which is not that difficult if you meet the prerequisite. If you are just a bit lower than the entry requirement, you can send a special request to the professor. As far as I know, some students in this class did not even take one of the two courses. So I think it's easy to obtain approval. Another good thing about this course is that the exams, unlike the non-honor one, do not ask you to do some tedious computations, but it is true that the questions are a bit harder. I think this is a good news to capable students who very often make silly mistakes.",
            "comment_workload": "Not much. 4 written assignments, each is given approximately two weeks to complete. The assignments are way more difficult than the non-honor one's, but you can ask help from Google as long as you put proper citations on them. Citing other people's answers do not hurt your marks.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        }
    ],
    "composer": []
}