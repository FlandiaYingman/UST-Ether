{
    "error": false,
    "course": {
        "id": 2264,
        "subject": "ELEC",
        "code": "5660",
        "name": "Introduction to Aerial Robotics",
        "description": "This course gives a comprehensive introduction to aerial robots. The goal of this course is to expose students to relevant mathematical foundations and algorithms, and train them to develop real-time software modules for aerial robotic systems. Topics to be covered include rigid-body dynamics, system modeling, control, trajectory planning, sensor fusion, and vision-based state estimation. Students will complete a series of projects which combine into an aerial robot that is capable of vision-based autonomous indoor navigation.",
        "categories": [],
        "website": null,
        "credits": 3,
        "semesters": [
            2230,
            2130,
            2030,
            1930,
            1830,
            1710
        ],
        "prerequisites": "",
        "corequisites": "",
        "exclusions": "",
        "rating_content": 4,
        "rating_teaching": 4,
        "rating_grading": 5,
        "rating_workload": 1,
        "review_count": 1,
        "single_review": false,
        "enrollment_status": 0,
        "is_favourited": false,
        "is_subscribed": false,
        "user_review_hash": "",
        "contributor_has_more": false,
        "instructors": [
            {
                "id": 202,
                "name": "SHEN, Shaojie",
                "count": 1
            }
        ]
    },
    "reviews": [
        {
            "hash": "vKuRO3O0FQuKkpGea4JgnREtTo7uckpU",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 202,
                    "name": "SHEN, Shaojie",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Pang.",
            "date": "May 31, 2020",
            "title": "Chur到呢屌你",
            "comment_content": "Covers knowledge about aerial robotics (i.e. drones) from three major aspects:<br /><br />1. Robot control<br />- Basic robotics knowledge (frames, transformations, angle representations etc.)<br />- Drone kinematics<br />- PID control<br />- Path planning<br />- Path search (A* algorithm)<br /><br />2. Vision<br />- Camera modeling / calibration<br />- Feature detection<br />- PnP pose estimation<br />- Optical flow<br />- Visual odometry (VO)<br /><br />3. Sensor fusion<br />- Bayes filter<br />- Kalman filter<br />- Extended Kalman filter (EKF)<br />- Particle filter<br /><br />Prerequisites:<br />- Solid knowledge on linear algebra and probability theory<br />- Matlab / C++ coding<br />- Ubuntu (for ROS)",
            "comment_teaching": "The course covers a wide range of topics and hence the pace is fast. I gave up attending lectures halfway through the course since I find it more effective to learn through listening to Zoom recordings and repeating the parts that I don't understand. Unfortunately, it's possible they won't provide lecture recordings when this course is offered in the future.<br /><br />TAs are in general helpful and reply emails quickly. However, the project instructions and documentation for provided skeleton code is sometimes unclear.",
            "comment_grading": "Grading is heavily dependent on project performance.<br />Midterm: 20%<br />Project 1: 30%<br />Project 2: 30%<br />Project 3: 20%<br /><br />Projects are graded leniently, perhaps due to the sheer complexity of the implementation. Even submitting part of the code could possibly earn you a few points.<br /><br />The midterm is also quite difficult this year. Some questions require deriving proofs regarding transformation / rotation matrices, angular velocities and the like. Other questions require tedious calculations such as manually calculating the Dijkstra's algorithm. It would help to specifically go through some of the derivations found in the lecture notes.<br /><br />Mean: 50.6/100<br />SD: 21.2",
            "comment_workload": "There is a total of 3 projects subdivided in phases. Each of them are due one week (two weeks for the really difficult ones) after the release date, and when one phase is due the next phase / project will be released immediately. The schedule of this course is therefore tightly packed, and as an undergrad I find it challenging to make time doing the projects amidst my FYP and other courses. Workload is significantly heavier than the average 3-credit course.<br /><br />Previous coding experience on Matlab / ROS / C++ is recommended. I had no previous Matlab experience and spent a lot of time in familiarizing myself with the software.<br /><br />Some of the projects also require you to reuse results / code from previous phases. If you couldn't finish the tasks in a project, this could affect the completion of the upcoming projects.<br /><br />Since the labs are cancelled this semester, all of the projects are performed in simulated environments in Matlab / ROS. This actually makes them easier to do, since pre-recorded sensor data is provided and therefore there is less uncertainty / variance to deal with in the first place.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": false,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 7,
            "vote_count": 7,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        }
    ],
    "composer": []
}