{
    "error": false,
    "course": {
        "id": 225,
        "subject": "COMP",
        "code": "3711",
        "name": "Design and Analysis of Algorithms",
        "description": "Techniques for designing algorithms, proving their correctness, and analyzing their running times. Topics covered include: sorting, selection, heaps, balanced search trees, divide-and-conquer, greedy algorithms, dynamic programming, and graph algorithms.",
        "categories": [],
        "website": "https://course.cse.ust.hk/comp3711/",
        "credits": 3,
        "semesters": [
            2230,
            2210,
            2130,
            2110,
            2030,
            2010,
            1930,
            1910,
            1830,
            1810,
            1730,
            1710,
            1630,
            1610,
            1530,
            1510,
            1430,
            1410
        ],
        "prerequisites": "(<a class=\"course-link\" data-subject=\"COMP\" data-code=\"2011\" href=\"/review/COMP2011\" target=\"_blank\">COMP 2011</a> OR <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2012\" href=\"/review/COMP2012\" target=\"_blank\">COMP 2012</a> OR <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2012H\" href=\"/review/COMP2012H\" target=\"_blank\">COMP 2012H</a>) AND (<a class=\"course-link\" data-subject=\"COMP\" data-code=\"2711\" href=\"/review/COMP2711\" target=\"_blank\">COMP 2711</a> OR <a class=\"course-link\" data-subject=\"COMP\" data-code=\"2711H\" href=\"/review/COMP2711H\" target=\"_blank\">COMP 2711H</a> OR <a class=\"course-link\" data-subject=\"MATH\" data-code=\"2343\" href=\"/review/MATH2343\" target=\"_blank\">MATH 2343</a>)",
        "corequisites": "",
        "exclusions": "<a class=\"course-link\" data-subject=\"COMP\" data-code=\"3711H\" href=\"/review/COMP3711H\" target=\"_blank\">COMP 3711H</a>",
        "rating_content": 4.21,
        "rating_teaching": 4.23,
        "rating_grading": 3.65,
        "rating_workload": 3.02,
        "review_count": 52,
        "single_review": false,
        "enrollment_status": 3,
        "is_favourited": false,
        "is_subscribed": false,
        "user_review_hash": "",
        "contributor_has_more": false,
        "instructors": [
            {
                "id": 116,
                "name": "GOLIN, Mordecai Jay",
                "count": 19
            },
            {
                "id": 114,
                "name": "PAPADIAS, Dimitrios",
                "count": 13
            },
            {
                "id": 122,
                "name": "CHENG, Siu Wing",
                "count": 11
            },
            {
                "id": 805,
                "name": "MA, Xiaojuan",
                "count": 7
            },
            {
                "id": 115,
                "name": "YI, Ke",
                "count": 4
            },
            {
                "id": 131,
                "name": "QU, Huamin",
                "count": 2
            },
            {
                "id": 106,
                "name": "TAI, Chiew Lan",
                "count": 1
            },
            {
                "id": 1366,
                "name": "ZHANG, Tong",
                "count": 1
            }
        ]
    },
    "reviews": [
        {
            "hash": "Gq2pVlWziqdbeDH26ORU2pKwsZUfdllP",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "{Curly Braces}",
            "date": "May 28, 2021",
            "title": "The gateway to another dimension",
            "comment_content": "The content of the course is actually some practical programming skills and hacks, and we have to design and analyze the running time of the programs.<br /><br />Contents include:<br />Comparison sorting algorithms (Insertion, Merge, Quick, etc.)<br />Divide and Conquer (Recursion)<br />Maximum Subarray Problem<br />Multiplication<br />Randomized Algorithms and Random Variables<br />Heaps<br />Linear time sorting algorithms (Radix, Count)<br />Greedy Algorithms (and Huffman Coding)<br />Dynamic Programming (1D, 2D, over intervals)<br />Graph Algorithms (BFS, DFS, etc.)<br />Minimum Spanning Trees (Prim, Kruskal)<br />Shortest path/Pathfinding (Dijkstra, Floyd Warshall)<br />Max Flow, Maximum Bipartite (Ford Fulkerson)<br />Stable Matching<br />AVL Trees<br />String Matching (Naive, Rabin Karp, String Match Automata)<br /><br />Optional: Hashing",
            "comment_teaching": "In my opinion, Golin must be one of the best tutors teaching this course.<br /><br />Not only his answers to students' questions are detailed and quick, but the explanations to the concepts were also clear too.",
            "comment_grading": "The grading scheme in this semester is as follows:<br />55% Assignments<br />45% Final Exam<br />Notice that this course adapt the &quot;guaranteed grade range&quot; scheme. This means if you get a certain grade percentage, you will be guaranteed to get a range of grade:<br />&gt;= 60% Guaranteed D-range<br />&gt;= 70% Guaranteed C-range<br />&gt;= 80% Guaranteed B-range<br />&gt;= 90% Guaranteed A-range<br />The thresholds shown above will be adjusted at the end of the semester according to the actual performance of students (usually downwards).<br />The mean/median of the course is usually at B- to C+.<br /><br />My grades are as follows:<br />Homeworks (total): 580/600 (mean: 482.4)<br />Final exam: 71/100 (mean: &gt;63.9)<br />(At the time they finish grading, they announce that the mean is 63.9. The final mean should be slightly higher due to appeals and incorrect solution for Q1)<br /><br />Final grade: B+ (85.1%)",
            "comment_workload": "The workload of this course is an absolute nightmare. Although there are no group projects or presentations, the homework itself is enough to give the experience of hell.<br /><br />There is 5 homework, with the 3rd one being double-sized, which is assumed to alleviate the workload of the course by replacing midterm with it. The homework has many questions asked for proof, which makes students found frustrating and took a long time to do.<br /><br />For me, it cost me the whole easter holiday to finish HW3 and finalized HW5 one day before the deadline (And not to mention that the deadline of HW5 was extended for 4 more days before the release of the homework. This means, if the deadline wasn't extended, I am unable to finalize it into the best version).<br /><br />During the period of HW3, some claimed that they &quot;transcended to another dimension&quot;, had mental breakdowns, and even stated HW3 is &quot;scarier than horror films&quot;. (I wasn't joking here, they really put these statements on Piazza!) You may imagine how insane these assignments can get.<br />At last, the teaching team came up with an agreement with the students to put up fewer algorithm design problems in the homework (like 50:50 ratio with problems requiring running algorithms).<br /><br />You may think that since the homework is hard, and so does the final exam. However, the final exam is much easier than the homework. One reason is that it is a closed book exam, even though it is &quot;more orientated to algorithm design questions&quot;.<br />Prof. Golin stated that since the questions on homework are too dense (i.e. takes too much time to think), they appear on homework but not exams (even for questions similar to the ones in homework).<br /><br />Side note: For Non-CSE students who somehow wish to take this course (e.g. CPEG students who want to take it as an elective), please think thrice before actually taking it, especially please evaluate the expected workload first.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 20,
            "vote_count": 22,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "xlrGw8XYIGfsKFTU6dddW2Au2cO9DILu",
            "semester": "2018-19 Spring",
            "instructors": [
                {
                    "id": 805,
                    "name": "MA, Xiaojuan",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Kabul",
            "date": "May 25, 2019",
            "title": "A challenging one",
            "comment_content": "Mainly on techniques of algorithmic design, correctness proofs and running time analysis. Content is very difficult and needs a lot of time to digest. But it's indeed one of the most important courses for COMP students.<br /><br />There are several main parts.<br /><br />1Ô∏è‚É£ Fundamentals<br />üî∂ Asymptotic Analysis<br />üî∂ Master Theorem<br />üî∑ Selection Sort<br />üî∂ Insertion Sort<br /><br />2Ô∏è‚É£ Divide-and-Conquer<br />üî∂ Binary Search<br />üî∂ Mergesort<br />üî∑ Towers of Hanoi<br />üî∑ Counting Inversions<br />üî∑ Maximum Subarray Problem<br />üî∑ Integer and Matrix Multiplication<br /><br />3Ô∏è‚É£ Randomized Algorithms<br />üî∑ Hiring Problem<br />üî∑ Generating Random Permutations<br />üî∑ Birthday Paradox<br />üî∑ Coupon Collectors Problem<br />üî∂ Quicksort<br />üî∂ Randomized Selection<br /><br />4Ô∏è‚É£ Other Sorting<br />üî∂ Heapsort<br />üî∂ Counting Sort and Radix Sort<br /><br />5Ô∏è‚É£ Greedy Algorithms<br />üî∂ Interval Scheduling<br />üî∂ Knapsack Problem<br />üî∂ Interval Partitioning<br />üî∂ Huffman Coding<br /><br />6Ô∏è‚É£ Dynamic Programming<br />üî∑ Fibonacci Numbers<br />üî∂ Rod-Cutting Problem<br />üî∂ Weighted Interval Scheduling<br />üî∂ 0/1 Knapsack Problem<br />üî∂ Longest Common Subsequence<br />üî∑ Longest Palindromic Substring<br />üî∂ Optimal BST<br />üî∑ RNA Secondary Structure<br />üî∑ Matrix-Chain Multiplication<br /><br />7Ô∏è‚É£ Graph Algorithms<br />üî∂ BFS and DFS<br />üî∂ Topological Sort<br />üî∂ Minimum Spanning Trees<br />üî∂ Shortest Paths<br />üî∂ Maximum Flow<br />üî∂ Stable Matching<br /><br />8Ô∏è‚É£ AVL Trees<br /><br />9Ô∏è‚É£ String Matching<br />üî∑ Na√Øve String Matcher<br />üî∂ Rabin-Karp Algorithm<br />üî∂ Matching with Automatons<br /><br />üîü Hashing (not tested in exams)<br />üî∑ Chaining<br />üî∑ Open Addressing<br />üî∑ Universal Hashing<br /><br />Pay attention to topics marked with üî∂.<br /><br />Overall a very fast-paced course with lots of content packed in just one single semester. Dynamic programming and graph algorithms are the most difficult parts of all. Proofs (of anything) are extremely annoying, and may cost you a lot of points if not done properly. Make sure you spend time memorizing the main flow of the proofs.",
            "comment_teaching": "Prof Ma's teaching is okay. Good preparation, clear explanation, though her pace is pretty fast. You need regular revision in order to catch up with her pace.<br /><br />Tutorials are usually a recap of what is taught in the lectures with additional examples.",
            "comment_grading": "‚úèÔ∏è 30% Written Assignments<br />‚úèÔ∏è 30% Midterm Exam<br />‚úèÔ∏è 40% Final Exam<br /><br />Got 1 SD above mean in the midterm, but only 0.6 SD above mean in the final. Scored 90-ish or 80-ish in the assignments.<br /><br />üíØ Final grade: B+<br /><br />Quite harsh given the difficulty of this course. But still fair enough.<br /><br />And my bad for not attempting the final past papers and not memorizing the proof of Dijkstra algorithm. üò≠",
            "comment_workload": "The workload mainly lies in the 4 written assignments. The assignments are very challenging and usually take 1 or 2 days to finish.<br /><br />Exams are closed book and there are a lot of materials to revise, so it takes much time for preparation. Make sure you do enough practice cuz some of the exam questions are actually directly copied from the past papers and tutorial questions with minor modification.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 2,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 10,
            "vote_count": 10,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "vXtwDGOGI4A5n0wGCP5RU9Q2c8NLWYEA",
            "semester": "2014-15 Fall",
            "instructors": [
                {
                    "id": 115,
                    "name": "YI, Ke",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "KirinoBB",
            "date": "Aug 23, 2015",
            "title": "",
            "comment_content": "This course is more likely to be a MATH course than a COMP course as I thought. No coding. Just design a algorithm in good speed. Might be interesting to MATH students. But it can also be a nightmare for COMP student who have less mathematics practice.<br />ÈÄôË™≤Á®ã‰ººÊòØÊï∏Â≠∏Â§öÊñºÈõªËÖ¶ÁßëÔºå‰∏çÁî®ÂØ´codeÔºåÂè™È†àË®≠Ë®àalgorithmÔºåÁêÜË´ñÂ±§Èù¢ÁÇ∫‰∏ª„ÄÇÊï∏Â≠∏‰∫∫ÊúÉÊÑüËààË∂£Ôºå‰ΩÜ‰∫¶ÂèØ‰ª•ÊàêÁÇ∫Êï∏Â≠∏‰∏çÁ≤æÁöÑË®àÁßë‰∫∫ÁöÑÊÉ°Â§¢„ÄÇ",
            "comment_teaching": "The English pronunciation of Dr. Yi is among the top 30% of Mainland China professors. Most of the slides provide a step-by-step simulation to the algorithm. Not bad... At least good slides are the common characteristic of all COMP courses.<br />ÊòìÁèÇÂÖàÁîüÂú®Â§ßÈô∏ÊïôÊéà‰∏≠ÔºåËã±ÊñáËÆÄÈü≥Â±¨È†≠‰∏âÊàêÔºåÁÑ°Ë´ñÊú¨Âú∞„ÄÅÂ§ßÈô∏„ÄÅÊµ∑Â§ñÔºåÊáâË©≤ÁöÜËÉΩËÅΩÂæóÊòéÁôΩ„ÄÇSlideÊúâÂ§ßÈÉ®‰ªΩalgorithmÁöÑÈÄêÊ≠•Êé®ÊºîÂúñÔºåÂπ´Âä©ÁêÜËß£algorithm„ÄÇSlideË®≠Ë®àËâØÂ•ΩÊòØÊâÄÊúâCOMPË™≤Á®ã‰∏≠ÁöÑÂÖ±ÂêåÁâπËâ≤ÔºåÊâÄ‰ª•Â§ßÂÆ∂‰∏çÁî®ÈÅéÊñºÊìîÂøÉËµ∞Ë™≤ÊúÉ‰∏çÊòéÁôΩ(Á¨ë)„ÄÇ",
            "comment_grading": "I guess the grade should be absolute grading.<br />Mid-term 92/100 =&gt; ~above 1.5sd<br />Final 7X/100 =&gt; ~above 1.5sd<br />Still got a B+<br />ÊáâË©≤ÊòØabsolute grade„ÄÇMidterm final Â§ßÁ¥ÑÈÉΩÈ´ò1.5 sdÔºåÁÑ∂ËÄåÈÇÑÊòØÂæóB+„ÄÇ",
            "comment_workload": "No lab lesson. Only 4 assessments. No real codes needed. It would be the one of the lightest workload course in CS dept. Either pseudo-code or any major programming language can be used for answering questions. You may feel convenient from this.<br />ÁÑ°labÔºåÂè™ÊúâÂõõ‰ªΩÂäüË™≤Ôºå‰∏çÁî®ÂØ´ÁúüÂØ¶code„ÄÇÊáâË©≤ÊòØÂÖ®CSË™≤Á®ã‰∏≠ÊúÄÂ∞ëÂ∑•‰ΩúÈáèÈÇ£Áæ§Ë™≤Á®ã„ÄÇÁÑ°Ë´ñpseudo-codeÈÇÑÊòØÂÖ∂‰ªñ‰∏ªË¶ÅË™ûË®ÄÈÉΩÂèØ‰ª•‰ΩúÂõûÁ≠îÂïèÈ°å‰πãÁî®ÔºåÊâÄ‰ª•ÂèØ‰ª•ÂÖçÂéªÈáçÂ≠∏Ë™ûË®Ä‰πãËôû„ÄÇ",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 2,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 11,
            "vote_count": 12,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "A5JHqAawwG6jxPDsSDW4LeKIhtWAhGx9",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 805,
                    "name": "MA, Xiaojuan",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ptrknow",
            "date": "Jun 13, 2020",
            "title": "Tough course with strict grade",
            "comment_content": "1. The content is actually simplified<br />In particular, this course has greatly simplified the discussion on depth-first search and topological sorting, and didn't talk about the notion of NP completeness. But given the CSE course pathway design, this simplification is actually reasonable.<br /><br />2. You better do self-learning before the start of the semester<br />Just because the content is simplified does not mean the content is simple! This is especially true when you are just an average student without experience in algorithm class (like me), since this course covers many algorithms in a rapid pace which, I think, an average beginner could hardly catch up. I would advise you to AT LEAST do the following before the semester starts:<br />- Get familiar with all divide-and-conquer algorithm and sorting algorithms (by get familiar, you should also understand all their properties and proofs)<br />- Grasp a basic idea on greedy algorithm and dynamic programming (e.g. the greedy choice property and the optimal substructure property)<br />- Get familiar with these graph algorithms: BFS, DFS, Topological sort, MST (Prim and Kruskal), SP (Dijkstra), APSP (Floyd-Warshall) (Again, by get familiar, you should also understand all their properties and proofs)<br />Although these topics comprise almost all the content of the whole course, I guarantee that you would have a much smoother and easier course experience by doing this. (I guarantee that my guarantee is better than Kenneth's guarantee!) The contents of this course are not easily absorbable for an average student.<br /><br />3. Prove by contradiction and M.I. (and its variants) are very important to this course.<br /><br />4. Better pay attention to these topics (and their variants) when preparing for the final exam (the following is essentially a summary of the kind of questions that has appeared in the exam set by professor Golin and Ma):<br /><br />- Asymptotic notation and recurrence<br />- Properties of sorting algorithms (e.g. best-case, average-case, worst-case running time, and stability)<br />- Sorting lower bound (comparison tree model)<br />- Radix sort on integers of bounded range<br />- Indicator R.V.<br />- Divide-and-conquer algorithms (e.g. subset-sum, x-discounted MCS, and designing the variants of binary search)<br />- Greedy algorithms (e.g. interval scheduling, interval partitioning, subsequence, minimum stopping)<br />- ****Dynamic Programming**** This topic is VERY IMPORTANT, since questions of this topic are usually the killer (e.g. longest monotone sequence, shuffling, minimum cost itinerary, x-discounted MCS, doubled string)<br />- BFS, DFS and Topological sort (How to apply or modify them to fit in other situations)<br />- MST (the cut lemma, prove by contradiction and counter-example)<br />- Dijkstra algorithm (its correctness proof)<br />- Variants of Floyd-Warshall algorithm (e.g. all-pair max-bottleneck problem)<br />- Application of maximum flow<br />- Dry-run of these algorithms: min-heap, AVL tree, sorting algorithms, Huffman tree, BFS, DFS, MST (Prim and Kruskal), SP (Dijkstra), Max-flow and Bipartite matching, Pattern matching automaton",
            "comment_teaching": "I don't think I need to repeat how good the teaching is.<br /><br />However, I want to address one point that is not mentioned by any other reviews. I really like the marking scheme with the detailed marking notes that is really a great plus for this semester. I can't imagine how much more time the professors and TAs have spent in order to sort out the common mistakes we have made and write the pages-long notes.",
            "comment_grading": "6 Assignments (50%):<br />my score = 660/700 (94/100)<br />mean = 560/700 (80/100)<br /><br />Final exam (50%):<br />my score = 79/100 (+1.25sd)<br />mean = 55/100<br />SD = 19<br /><br />Grade = A-<br /><br />The grading is strict in terms of curve, maybe because the grade is semi-absolute?",
            "comment_workload": "Assignment:<br />Need a lot of time to improve the writing of proofs even though some questions have source. (Some source actually does not provide proof of correctness, which means you might need to write up the proof by yourself!) <br /><br />Also need a lot of time to do dry-run! What is the meaning of executing an algorithm by hand on a graph with 10 or something vertices, when the idea of the algorithm can be clearly captured with examples of a much smaller size? What is the meaning of executing dynamic programming algorithm by hand where you need to dry run the for loop for more than 100 times, and at the end, everyone just codes the problem? What is the meaning of constructing a huffman tree with more than 20 nodes? .....<br /><br />Exam:<br />Better prepare early and spend enough time understanding all past paper problems. That is quite tough.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 3,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 8,
            "vote_count": 8,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "DgTGB4syci5VGO93xh8Al4RODqdxcz9E",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                },
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Hei123",
            "date": "Dec 18, 2021",
            "title": "ÊâìÂ§ß‰Ω¨Âä†Ê≤π ^^",
            "comment_content": "ÂîîÂØ´Âï¶ÔºåÈÉΩ‰øÇÂó∞Âï≤ÔºåÁùáÂÖ∂‰ªñ ^^",
            "comment_teaching": "‰∏ÄÂ†ÇlectureÈÉΩÁÑ°‰∏äÈÅéÔºåÂîîË©ïË´ñ„ÄÇÂÖ©ÂÄãprof ÂòÖË©ïÂÉπÊú¨Ë∫´ÈÉΩÂîîÂ∑ÆÔΩûÔºåÂÄã‰∫∫ÊØîËºÉprefer golin„ÄÇ",
            "comment_grading": "50% 5 Written Asg + 1 PA<br />50% Final<br /><br />GuaranteeÔºö<br />90+ at least A-<br />80+ at least B-<br />70+ at least C-<br /><br />Assignment (HW1 / 2 / 3 / 4 / 5 / PA1):<br />Mean: 518.5 / 600 (83.9 / 83.4 / 88 / 88.7 / 83.5 / 91)<br />Median: 567 / 600 (91 / 93 / 94 / 98 / 91 / 100)<br />SD: (18.12 / 21.0 / 15.4 / 21.1 / 20.3 / 19.5 / 23.1)<br /><br />Final:<br />Mean: 69.2 / 100 (Excluding Zero), 65.8 / 100 (Including Zero)<br />STD: 23.1<br />Median: 75 / 100<br /><br />Overall Score:<br />MedianÔºö 84.75 ÊúâB+ ÔΩû B<br />MeanÔºö76.11 ÊúâB-<br /><br />ÈÇÑÂ•ΩÂï¶Ôºåscore to grade ÁÆó acceptable„ÄÇ‰ΩÜÂï≤‰∫∫Áúü‰øÇÂ•ΩÊíöÂãÅÔºåÊàêÁè≠CS UGÔºåPGÔºånds Âñ∫Âà∞Á•û‰ªôÊâì‰∫§ = = ÈªûËß£A rangeÂîîÊ¥æÂæóÂÜçÈ¨ÜÊâãÂï≤ = =<br /><br />‰∏ãÈù¢Âë¢Â†ÜÂàÜÂèØ‰ª•assume Asg ÈÉΩÂñ∫ 570ÔΩû600 Âë¢ÂÄã range ÂÖ•Èù¢ÔºåÂ§ßÈÉ®‰ªΩÂàÜÈÉΩÂñ∫ final Âà∞Êâ£„ÄÇ<br /><br />OverallÔºö<br />96.5 ÔΩû 97ÔºåÂæóA ÔºàÁÑ°A+ ^^ ÊúâÂ∞ëÂ∞ëÊÑèÊñô‰πãÂ§ñÔºåÁúü‰øÇÂ±å‰Ω†ËÄÅÊØçÔºâ<br />93.5 ÔΩû 97 ÈÉΩ‰øÇA <br />87 ÔΩû 88 B+<br />75 ÔΩû 76 B-<br />68 ÔΩû 70 C+ Ôºàfinal below mean 1 s.d. ÈÉΩÊúâC+Ôºâ<br /><br />ÂîîÁü•Âí©ÂéüÂõ†ÔºåËÅΩË¨õÂîîÊúÉÂÜçÈñã3711HÔºåÂ§ßÂÆ∂ÂèØ‰ª•expect‰ª•ÂæåÈÉΩË¶ÅÂêåÁè≠Áó¥Á∑ö‰Ω¨È¨•„ÄÇBtw, Âë¢ÂÄãcourse MPhil PhD Â•Ω‰ººÈÉΩ‰øÇcompulÔºåÊâÄ‰ª•È´òmeanÔºåÈ´òmedian‰øÇÂêàÁêÜ„ÄÇÂ§ßÂÆ∂ÂèØ‰ª•expect‰πãÂæåÈÉΩÊúÉÂíÅ„ÄÇCPEG ÊÉ≥ÂÖ•ÂéªÂ≠∏Âò¢Â∞±Áúü‰øÇË¶ÅÂä†Ê≤π„ÄÇ<br /><br />Â∞ëÂ∞ëÂøÉÂæóÔºö<br />Âë¢ÂÄãcourse ÂπæÁùáË≥áË≥™Ôºånotes ÂÖßÂÆπÂÖ®ÈÉ®ÁêÜËß£ÂæóÂà∞Âü∫Êú¨‰∏äÊáâË©≤ÊîûÂà∞ A rangeÔºüÔºàÁêÜËß£‰øÇÊåáÁùáÊòéÂíó‰πãÂæåÈö®Âè£Ë¨õÈÉΩË¨õÂæóËøîÂá∫ÂöüÔºåÂîî‰øÇÊ≠ªËÉå ^^ÔºâFinal ÂÖ∂ÂØ¶ÁÑ°Â§ßÂÆ∂ÊÉ≥ÂÉè‰∏≠ÂíÅÈõ£Ôºå‰øÇÂï≤HW Èõ£Âà∞clsÔºåÊâÄ‰ª•Áúü‰øÇÂª∫Ë≠∞ÁêÜËß£ÂÆåÂÜçÊäÑsourceÔºåÂ∞§ÂÖ∂ÊòØÂï≤algo È°åÔºåÁúü‰øÇÂîî‰øÇÂíÅÂÆπÊòìË´óÔºåÁÑ°Ë¨ÇÊµ™Ë≤ªÂíÅÂ§öÊôÇÈñìÂñ∫Âë¢Âï≤‰Ωç‰∏äÈù¢ÔºåÂ∞çfinal ‰∫¶ÈÉΩÁÑ°Âí©Âπ´Âä©ÔºåÂ≠∏ÈÉΩÂ≠∏ÂæóÂîîefficient„ÄÇÊäÑÂÆåÁêÜËß£Âà∞Â∞±Áúü‰øÇÂ•ΩokÔºåÁùáÂæóÊòé model ans ÂÖ∂ÂØ¶ÈÉΩË¥èÂíóÂîîÂ∞ë‰∫∫„óéÂï¶ ^^<br /><br />Âêå2711Áõ∏ÊØîÔºå2711ÂòÖfinal Â•ΩÂ§öÂò¢ÈÉΩË¶ÅË´óÔºå3711ÂòÖfinal Â∞±Â∑ÆÂîîÂ§ö‰∏ÄÂçäÂòÖÈ°åÁõÆÈÉΩ‰øÇtracing Âë¢È°û ‚ÄúÈÄÅÂàÜÈ°å‚ÄùÔºåÊúâÊ∫´Êõ∏ÂòÖÂ∞±‰∏ÄÂÆöÊúÉË≠òÔºåÊâÄ‰ª•ÂÄãmeanÂÖàÊúÉÂíÅÈ´ò„ÄÇË¶ÅÂàÜÈ´ò‰∏ãÂ∞±Áùáalgo È°å„ÄÇ<br /><br />Aim A+ == Â∞ëÂ∞ëcareless ÈÉΩÂîîÂÆπË®±ÔºåÁõ¥Êé•aim fullÂï¶„ÄÇHW1 Âï±Âï±ÈñãÂßãÊú™‰∏äÊâãÔºåÂ∞èÂøÉÂï≤ÁùáÈ°åÁõÆÔºåÂîîÂ•ΩÂÅöÊºè„ÄÇe.g. show steps ÂòÖÈ°åÁõÆË¶Åshow Ë∂≥ÊôíÔºåpseudo code ÈÄöÂ∏∏ÈÉΩË¶ÅdocumentedÔºåÂîîÂ•ΩÊºèÂØ´comment„ÄÇ<br /><br />Aim A range ÂòÖÔºånotes Ë¶ÅÂÖ®ÈÉ®ÁêÜËß£Âà∞ÔºåÂèØ‰ª•ÂîîÁùánotes ÂíÅË¨õËøî‰∏ÄÊ¨°Âï≤algo ÂÅöÁ∑äÂí©ÔºåÈªûÊ®£proof correctness „ÄÇDP ÊáâË©≤‰øÇfinal ÂÖ•Èù¢ÂèØ‰ª•ËÄÉÂà∞ÊúÄÈõ£ÂòÖÂò¢„ÄÇÂ∞ëÂ∞ëÁùáÈÅãÊ∞£Ôºå‰ΩÜÂèØ‰ª•Èù†Êìç pastpaper Á∑¥ËøîÂöüÔºå‰æÜ‰æÜÂéªÂéªÈÉΩ‰øÇÂó∞ÂÄãformatÔºåÂÅöÂ§öÂπæÊ¢ùÂ∞±Â§ßËá¥get Âà∞ÂÄãÊÄùÁ∂≠„ÄÇ<br /><br />https://course.cse.ust.hk/comp3711_2021F/Exams/pastpapers/3711_Exam_Library.html<br /><br />Ââ©‰ΩéBCD range ÂèñÊ±∫Êñº‰Ω†Âã§ÂîîÂã§ÂäõÔºånotes ÁùáÂîîÊòéÂ∞±Ê≠ªËÉåÊ≠ªÊìçÔºåÂäüË™≤ÈÉΩ‰øÇÊäÑ„óéÂï¶ÔΩû „ÄÇÊúâÂï≤ÊàêÊó•ÂïèÂòÖproof, Ôºàe.g. greedy == optimalÔºüÔºådijkstraÔºåcomparison-based sorting nlogn lower boundÔºâÁùáÂîîÊòéÈÉΩÊúÄÂ•ΩËÉåÂíóÂÖàÔºåÁùáËøîpp‰æÜ‰æÜÂéªÂéªÈÉΩ‰øÇËÄÉÂæóÂó∞Âï≤„ÄÇHuffman CodingÔºåOptimal BST Âë¢Âï≤proof ÂÄã‰∫∫Ë¶∫ÂæóÂ§™Èõ£ÊâÄ‰ª•ÊØîËºÉ‰ΩéÊ©üÊúÉÂñ∫final Âà∞ÂïèÔºåË≠òtrace algo Â∞±ok„ÄÇ‰πãÂæåtracing Âë¢Âï≤ ‚ÄúÈÄÅÂàÜÈ°å‚Äù Â∞±Áõ°ÈáèÂü∑ÔºåDPÂîîË≠òÂÅöÈÉΩÂØ´‰∏ÄÂ§ßÂ†ÜÂª¢Ë©±ËêΩÂéªÔºåÊúâ3ÂàÜÂêåÊÉÖÂàÜ (out of 15)„ÄÇÁ®çÂæÆÁ∞°ÂñÆÂï≤ÂòÖalgoÈ°å‰øÇD&amp;CÔºåÂîîÊìÖÈï∑ÂØ´algoÂòÖÂèØ‰ª•Âñ∫Âë¢Âà∞ÂÖ•ÊâãÂÖàÔºåÂÅöppÂÅöÂà∞ÁÜüÂíóÂÖàÂéªË©¶DP„ÄÇ<br /><br />Á∞°ÂñÆË¨õ (Assume HW 90%+)<br />A+ÔºöAll full<br />A- or aboveÔºöÂï±ÊôíÂï≤tracing È°åÁõÆ + lectureÊúâÊïôÈÅéÂòÖproof + 2ÔΩû3È°å algo<br />B+ÔºöÂï±ÊôíÂï≤tracing È°åÁõÆ + lectureÊúâÊïôÈÅéÂòÖproof + 0ÔΩû1È°å algo<br />B- or aboveÔºöÂï±ÊôíÂï≤tracing È°åÁõÆ + lectureÊúâÊïôÈÅéÂòÖproof<br />C- or aboveÔºöÂï±ÊôíÂï≤tracing È°åÁõÆÔºàÂîî‰ΩøÂ§™È©öÔºåË≠ò‰∫∫final 4x ÈÉΩC+Ôºâ<br />DÔºöÂèØËÉΩÊäÑÊôíÂï≤assignmentÔºåfinal ‰∫ÇÂØ´Âï≤Âò¢ÊîûÂêåÊÉÖÂàÜÂ∞±Â∑≤Á∂ìÂ§†<br /><br />ÁÑ°sourceÂ∞±Áúü‰øÇËá™Ê±ÇÂ§öÁ¶èÔºåÊàëÈÉΩÂπæËÇØÂÆöÊàêÂÄãcourseÂÖ•Èù¢ÂîîÂà∞10%‰∫∫‰øÇËá™Â∑±ÂÅöasgÔºåÁï∂‰∏≠Â§ßÈÉ®ÂàÜÈÉΩ‰øÇnds / MPhil / PhDÔºåÂîîÊíö‰ø°ÂÖ®ÈÉ®‰∫∫ÈÉΩËá™Â∑±ÂÅöasg ÂòÖË©±ÊúÉÊúâ90% median„ÄÇ<br /><br />Âä†Ê≤π ^^",
            "comment_workload": "5‰ªΩwritten asgÔºå1‰ªΩpa„ÄÇÊØè‰ªΩworkloadÈÉΩÂîîÁ¥∞ÔºåÂª∫Ë≠∞ÊúâsourceÂ∞±ÊäÑsourceÔºåÁÑ°sourceÂ∞±Ëá™Ê±ÇÂ§öÁ¶èÔºåËá™Â∑±ÂÅöÂòÖË©±Ëµ∑Á¢ºÂÅö‰∏âÊó•„ÄÇÊúâ19-20 4ÂÄãsem ÂòÖ asg + 3711H ÂòÖ asg ‰∏ÄÂÆöÂ§†ÂÅö„ÄÇ<br /><br />Âª∫Ë≠∞ÊúâÂøÉËÆÄÂòÖ‰∫∫ÔºåÁ∞°ÂñÆtrace algo È°åÁõÆ‰∏ÄÂÆöË¶ÅË≠òËá™Â∑±ÂÅöÔºåÂ∞çfinalÈÉΩÊúâÂπ´Âä©„ÄÇË´óalgo / proof / correctness ÂòÖÈ°åÁõÆÂèØ‰ª•ÂÖàËá™Â∑±Ë©¶‰∏ÄÂÖ©ÂÄãÈêòÔºåtrain‰∏ãËá™Â∑±ÊÄùÁ∂≠„ÄÇÁúü‰øÇÂîîÂæóÂòÖÂÖàÂéªÁùásourceÔºåÈÄöÂ∏∏model ans ÈÉΩÂØ´Âà∞Â•ΩmathematicalÔºåÂ∞±ÁÆóÊäÑsource ÈÉΩÂîî‰øÇÂÄãÂÄãÁùáÂæóÊòé„ÄÇÁùáÊòéÂíó‰πãÂæåË©¶‰∏ãÁî®Ëá™Â∑±ÊñáÂ≠óÂØ´ËøîÔºåÂíÅÂ≠∏Âò¢ÊúÉÊúâÊïàÁéáÂï≤„ÄÇÁùáÂîîÊòéÂ∞±ÁÖßÊäÑÂï¶Âîâ„ÄÇ",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 7,
            "vote_count": 8,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "IvGq5C0HSEhArHNJev3TP7Q3fOP8Cn6N",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ogt",
            "date": "Dec 23, 2020",
            "title": "Good &amp; useful in the long run",
            "comment_content": "A lot of content is covered, so be ready and don't fall behind.<br /><br />Main topics:<br />- Divide &amp; Conquer<br />- Sorting algorithms<br />- Greedy algorithms<br />- Dynamic programming (hard! killer on the final exam, I had to skip the question)<br />- Graph algorithms<br /><br />Overall I am satisfied with what I've learned, a lot of valuable knowledge for software engineering &amp; interviews.",
            "comment_teaching": "Prof. Papadias knows what he's talking about. Examples were clear. Lecture slides were well organized and provided many examples.<br /><br />The only downside is that just like every student, he didn't turn on his camera, so felt very disconnected. Active participation in the chat helped though.",
            "comment_grading": "(50%) Written assignments (4 assignments)<br />(50%) Final examination<br /><br />Mean in the assignments ranged between 80-90 so make sure everything is correct, you can't afford to lose points on these as each assignment is worth 12.5 points!<br /><br />Final: Mean: 53.6\tHigh: 84\tLow: 19 SD: 17<br /><br />My scores:<br />A1: 90<br />A2: 86<br />A3: 100<br />A4: 100<br />Final: 60<br /><br />=&gt; B+<br />Acceptable grade I guess, as usual very competitive. Try to not mess up!<br /><br />For finals, one cheatsheet was allowed:<br />- Know every graph algorithm!! And their time complexities!! Our final included 10 pts on deciding which algorithms were most appropriate for X task<br />- Know how to do maximum flow, stable matching &amp; Huffman encoding. These were covered!<br />- Understand the ideas behind greedy/divide &amp; conquer<br />- Be ready to sacrifice the dynamic programming question to have enough time to do stuff that is doable!",
            "comment_workload": "The assignments are not easy! Assignment #3 took me 2h minimum per problem. But they prepare you well for the final as the question difficulty is similar. For many problems you have to write pseudo code for an algorithm, I always programmed my solution in C++ first to check if it was working properly (and practice for comp2012 which I was also taking).<br /><br />Be prepared to do some additional practice (leetcode, algoexpert, past papers...).",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 5,
            "vote_count": 5,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "TMs6cqDmO0RD1Vys9PMIBVo1dTE9y4iH",
            "semester": "2022-23 Spring",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "scyeung",
            "date": "May 26, 2023",
            "title": "High-quality course with decent teaching",
            "comment_content": "More or less similar to previous semesters. NO AVL tree (although the professor promised to teach it during lectures) and string matching this semester. There isn't enough time, the professor is basically flying through max flow in the last lecture.<br /><br />All algorithmic problems discussed in COMP3711 are pretty standard. The focus is in learning algorithms instead of the your problem-solving ability.",
            "comment_teaching": "The teaching pace is quite slow as the professor is trying to explain a lot of details of the algorithm. Sometimes he will ask some questions that clarify the correctness of an algorithm but most of the class doesn't get what he's trying to ask which is kind of funny. (because he doesn't want to reveal too much in his conceptual questions) <br /><br />He tried to make some jokes during lectures occasionally e.g., &quot;two-child policy&quot; in the correctness of huffman-encoding. He also repeatedly asked us to not think about algorithms during DP lecture in the course &quot;Design and Analysis of Algorithms&quot;.<br /><br />The PowerPoint of both lecture and tutorial are very-well designed like all COMP courses. The teaching of lecturer is in general good and the teaching of TA is not bad either.",
            "comment_grading": "Midterm: 40/70<br />Final: 52.5/70<br />HW1-3 full<br />HW4: 44/55<br />Grade: A",
            "comment_workload": "Given that I have some experience with algorithms before, the workload is average but you really have to attend lectures except if you already know the content very well.<br /><br />I'm a year 1 student so I waive COMP2012/2012H to take this course. It's certainly ok for you to do so since the course has nothing to do with C++. What you need is a little bit of &quot;mathematics sense&quot; and a basic idea of what complexity means. I also don't think COMP2711/2711H is any helpful to this course so you may waive that as well if you are really interested in taking this algorithm course in year 1. COMP2711/2711H is more helpful for COMP5711/5712.<br /><br />4 assignments throughout the semester. Some problem in assignment is quite difficult and may take you some time to figure out. On average, each assignment takes me about 5 hours to finish (most of the time is spent on formatting latex). I got almost full marks in asm1-3 except I always forgot to state the running time of some trivial algorithms. I also run binary merge tree wrong in asm4. That causes quite a lot of marks so you need to be careful and double-check your assignments since mean is usually around 80-90%.<br /><br />Both mid-term and final exam is of moderate difficulty but time is quite limited. The TAs is lenient on marking though. You don't need extremely rigorous proof. I tried to give formal proofs in mid-term, ending up not having enough time to finish some easy problems.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "nAMbXSt025PVIXY6cK8Kg34ruEIMpDJV",
            "semester": "2018-19 Fall",
            "instructors": [
                {
                    "id": 131,
                    "name": "QU, Huamin",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "taewoo",
            "date": "Jan 23, 2019",
            "title": "Comp3711",
            "comment_content": "Learning various types of algorithms<br />Some concepts were not easy to follow but plenty of resources available on net and many good youtube lectures available.",
            "comment_teaching": "He just read the lecture notes and hard to understand his accent.(He mumbles...) Lecture videos available on Canvas but useless<br />Tutorial depends on the TA. Recommend to attend tutorials.",
            "comment_grading": "20% assignments<br />30% midterm<br />50% final<br />just average grading",
            "comment_workload": "four assignments in total, one in every 3 weeks<br />one or two questions from assignment is quite challenging.<br />But most of the questions are available on internet, just write the reference well",
            "rating_content": 4,
            "rating_teaching": 2,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "bNoKp009tOb8yt8SnhZtnpFcc7242sMU",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "DrainGang",
            "date": "May 29, 2022",
            "title": "Welcome to hell",
            "comment_content": "- Divide &amp; Conquer<br />- Sorting algorithms<br />- Greedy algorithms<br />- Dynamic programming<br />- Graph algorithms<br /><br />One of the hardest courses in CS/CPEG, during lectures you just look at how various algorithm works, which is already hard enough to do, but then in the assignments you also need to come up with your own algorithms, which is even harder. However as hard as this course is, the material is legitimately useful and I do not regret taking this course.",
            "comment_teaching": "Prof Dimitrios is good! He goes through all the algorithms clearly and asks many questions during the class to make sure that everyone is on the same page. A good chunk of every class is spent on going through extra examples together, which helped a lot in both the exams and assignments.<br /><br />The TAs vary in quality, however it's important to attend anyway since the problems discussed are related to the assignments and final, if you are still stuck I HIGHLY recommend watching Abdul Bari's youtube channel.",
            "comment_grading": "50% Assignments (5 in total, 10% each): 4-5 questions on recently taught topics, most of them would require you to come up with your OWN algorithms to solve problems, difficulty is VERY high and you will have little idea on how to design the algorithms despite understanding the algorithms taught in class. Each will take around a few days to complete if you aren't particularly talented like me.<br /><br />50% Final: 2 parts, in total 11 questions, by the grace of God it is easier than the assignments, a few questions will be just simply dryrunning the algorithms explained in class, and the complexity of the design questions is pretty low, studying the notes and assignments carefully should mean you can handle the questions decently.<br /><br />Ended up 1% above mean overall, B, quite surprised",
            "comment_workload": "Heavy. <br /><br />Assignments are incredibly difficult, each taking multiple days to do. Some questions do have answers online however, but for some proof questions you really have to just come up with your own proofs.<br /><br />The exam is closed book AND notes, so studying for the final requires quite a lot of memorization and it will take multiple days to prepare, be sure to do the past papers as they give a pretty good sense of how difficult the questions will be.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 3,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "wDOxx543dC55cIkjJ9NInbPeAChfaeMo",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "gossipgirl",
            "date": "Dec 30, 2016",
            "title": "",
            "comment_content": "Those who like math and theoretical aspect of CS will love the course. 5 broad topics:<br />1. Basic Sorting Algorithms<br />2. Randomized and Advanced Sorting Algorithms<br />3. Greedy Algorithms<br />4. Dynamic Programming<br />5. Graph Algorithms<br /><br />4 and 5 are the hard parts, rest are not that difficult concept wise. Would need a lot of practice for all topics to score well on the exams.",
            "comment_teaching": "I found Prof. Golin's teaching one of the best till now. Goes through all slides, answers all questions and repeats some of the challenging and difficult parts twice. <br />Only thing that could be slightly better would be if there were some more questions discussed in class, maybe some from past papers. Other than that, he writes the tutorials and solutions himself which are pretty good.",
            "comment_grading": "I think the grading is not that bad. <br /><br />4 Assignments 20%<br />1 Midterm 30%<br />1 Final 50%<br /><br />Midterm mean/sd 55/20<br />Final mean/sd 67/20<br />Final mean turned out to be pretty high. <br /><br />Course mean should be around 62-67. (pretty high)<br />With this, approx :<br />~75%&nbsp;&nbsp;B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~90%&nbsp;&nbsp;&nbsp;A<br />Seems that mean + sd -&gt; B+/A-",
            "comment_workload": "Workload for this course can be quite subjective to be honest. I feel the more questions from tutorials, past papers, CLRS book you solve, the better you get and more chances of solving questions on the exam since they usually tend to be of the similar kind.<br /><br />Fair amount of workload, I would say.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 5,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "XT3PTJ2mWt2qYyH3GeGEIjkJQCxOLOJ4",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "gdhdsv",
            "date": "Jun 06, 2022",
            "title": "",
            "comment_content": "Normal algorithm stuff<br /><br />divide and conquer<br />greedy algorithm<br />dynamic programming<br />graph algorithm<br /><br />You need to have a good math sense to study this course. At least you need to know what is big-O notation otherwise you surely cannot understand anything. Also you need to have a clear and logical mind. And you need to think smartly.<br /><br />Basic data structure and programming concepts are also needed like for loop, recursion, array, linked list, binary search tree.",
            "comment_teaching": "Teaching is good.<br />Prof. Dimitrious taught well and explained concepts clearly. He always points out something people don't understand. He always explains how an algorithm works using a given input as an example step-by-step to help us to understand the algorithm much easily. His teaching is intuitive and less mathematical. For example he don't like to use math formula when finding the T(n) in divide and conquer instead he like to use trees.<br />TA are also good.",
            "comment_grading": "5 hw 50%<br />1 final 50%<br /><br />hw1 100/100<br />hw2 88/100<br />hw3 82/100<br />hw4 100/100<br />hw5 90/100<br /><br />final 88/100, mean 80, sd 17<br /><br />overall 90%, B+<br />Maybe the final of this semester is much easier. Questions are less complex and with hints. So many people got high marks.<br />Seeing people in the previous sem were promised to get A range if their overall score&gt;=90% makes me quite disappointing.<br />Forgetting to explain the recurrence of problem 8 costed me one sub grade. Not being careful enough costed much.<br /><br />But as long as you understand the lecture and tutorial it should not be difficult.<br /><br />Assignments are much harder than the final. But some of the questions can be googled.<br /><br />Overall not an easy good grade course. You should avoid this course unless this is compulsory.<br /><br />Updated: I asked the professor about the A range cut-off and he said that the cut-off is 93.5% because they can't let more than 25% students have A range according to the school policy. It's fair but you can see how difficult it is to get good grade in this course because too many of your classmates are genius or cheaters presumably. If the final is hard, you need to be super clever. If the final is easy, you need to be super careful. Can't have an easy A in both cases. But if you aim at B range, it will be much easier, still it needs some effort.",
            "comment_workload": "Workload is low.<br />1 assignments per 2 weeks.<br />Only 4-5 questions per assignment.<br /><br />Some assignment questions can be googled. Some questions appeared in previous semesters.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 2,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 3,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "znLI7yvtHYHecVvOTszqQNox2y9CseZt",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 805,
                    "name": "MA, Xiaojuan",
                    "rating": 0
                },
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "homoliu",
            "date": "Jun 01, 2021",
            "title": "Toughest comp course in HKUST",
            "comment_content": "Others have typed the content for this semester, I am not going to repeat this~<br />(Divide and Conquer, Greedy, Dynamic Programming and Graph Algorithms)<br /><br />I am not so good at math and not familiar with those math notations. So I think the content are so difficult and most of the time I feel like they are &quot;making simple thing difficult&quot;. Just try to understand by yourself before having the lessons because you will be confused.",
            "comment_teaching": "I have watched both professors' lecture videos.<br />If u are good at math, golin is your choice.<br />If u need time to think and digest during lessons, ma, xiaojuan will be better.<br /><br />I think the professors are just average, not as good as mentioned in other review. When they are explaining some concepts, they are like &quot;making simple thing difficult&quot;. This takes more time to understand those concepts.<br /><br />Also, I feel like the teaching is separate from the assignments. The things they taught in class is so simple but the assignments is just another world I can say.",
            "comment_grading": "there are &quot;guarantee&quot; grade thresholds:<br />‚Ä¢ A- for ‚â• 90<br />‚Ä¢ B- for ‚â• 80<br />‚Ä¢ C- for ‚â• 70<br />‚Ä¢ D for ‚â• 60<br /><br />My grade is not that good compare to other review and my friend got mean overall but the grade is C+...too harsh for a compulsory cs course. Some reviews said the B-range will be very large but I don't think so, maybe due to the online mode and the professors.<br /><br />Â¶ÇÊûúmathÁúü‰øÇÂîîÂ•ΩÈÉΩÂîîÁ∑äË¶ÅÔºåÂè™Ë¶ÅÂä™ÂäõÂ∞±ÊúÉpassÂà∞ÔºåÂîîÊ¥óÂíÅÊìîÂøÉÂíÅÂ§öÔºåÈõñÁÑ∂Êú™ÂøÖÊúÉÊîûÂà∞Â•Ωgrade‰ΩÜËá≥Â∞ëÂîîÊ¥ófail!!!!ÂêåÂüãÂè™Ë¶Å‰Ω†ËÆÄÈÅéÂë¢Áßë ‰Ω†Â∞±ÊúÉÊúâÁ®ÆÊâìË¥èÂ§ß‰Ω¨ÂòÖfeel ÈõñÁÑ∂ÊúâÂï≤‰∫∫ÊúÉË¶∫ÂæóÂ•ΩÊòìÔºåÊàëÂíÅË¨õÂ•ΩË™á ‰ΩÜÂ∞çÊñº‰∏ÄÂï≤ÂîîÈçæÊÑèmathÂòÖCS‰∫∫(Êàë)ÂöüË¨õ‰øÇÁúü‰øÇÊúÉÊúâÂë¢Á®ÆÊÑüË¶∫",
            "comment_workload": "The workload is so large that every assignment takes me about a week to finish. There are total 5 assignments with 1 double-sized assignment (HW3). They are usually 4-6 questions for the normal assignment and doubled for HW3. Many of the quesetions is asking you to design an algorithm with the given running time and prove the correctness and the running time. This takes me a lot of time especially DP, as they are sooooo difficult!!!!!!!!!!!!!<br />You will not be able to finish those HW by just reading the lecture. So please attend the tutorials, there are some hints for the HWs and exam! <br /><br />There are also a final exam. Prof provided a lot of past papers, so you can practice and know how to answer them! Prof also said that the final exam is orientated to algorithm design problems as the assignments have a lot of working example, it is about 60-40(design - working example). I think it is fair and the questions are not that difficult (except the DP).<br /><br />ÊàëÁî®‰∏≠ÊñáË¨õÂï¶ÔºåÂ¶ÇÊûúÂîî‰øÇCS compulsoryÔºåÊàëË´óÂîîÊúÉÊúâ‰∫∫regÂë¢ÁßëÔºåÂõ†ÁÇ∫Áúü‰øÇÂ•ΩÈõ£Â•ΩÈõ£ÂêåÂ•ΩÈõ£ÔºåÁî±ÂÖ∂ÊòØ‰Ω†ÁÑ°Êï∏Â≠∏Â∫ïÊàñËÄÖ‰Ω†ÁùáÂîîÊòémath notation <br />Â¶ÇÊûú‰Ω†‰øÇCS‰∏ÄÂÆöË¶ÅËÆÄÂòÖÔºåÊúÄÂ•ΩÊØîÂ§öÂï≤ÊôÇÈñìÂë¢Áßë+Âä™ÂäõÂï≤ÂÅöÈ°åÁõÆ <br />ÂêåÂüãË¶ÅË°°Èáè‰∏ã‰øÇÂí™Ë¶Å‰∏ÄÂÄãsemËÆÄÊõ¨3111 3511 3711.ÊàëÂª∫Ë≠∞ÂîîÂ•Ω <br />ÂêåÂüãÂ•ΩÂ§ö‰∫∫Ë©±Âë¢3ÁßëÈÉΩÁàõgradeÔºåÂÖ∂ÂØ¶3111Âêå3511ÂîîÁÆóÁàõÔºå3711ÂÖàÁúü‰øÇÁàõÔºå‰∏çÈÅé3ÁßëÂòÖÊïôÂ≠∏ÈÉΩÈ∫ªÈ∫ª",
            "rating_content": 1,
            "rating_teaching": 2,
            "rating_grading": 1,
            "rating_workload": 1,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 6,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "tDHfk1Oic18KFEGJcXwGsSo9N7tgmQDU",
            "semester": "2017-18 Fall",
            "instructors": [
                {
                    "id": 115,
                    "name": "YI, Ke",
                    "rating": 1
                },
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Alistair",
            "date": "Jan 09, 2018",
            "title": "",
            "comment_content": "Content covered is very suitable for an introduction to algorithm design - relatively basic but interesting, including big-O notation, sorting algorithms, algorithm paradigms (divide and conquer, dynamic programming) and graph theory.<br /><br />It takes some time and effort to properly understand all the concepts, but once you do, it is very easy to follow and intuitive.",
            "comment_teaching": "Teaching is adequate - sometimes difficult to understand, but the instructors and TA's are more than willing to explain in more detail or repeat their explanations.<br /><br />Just remember to speak up, otherwise the first explanation is sometimes half-hearted.<br /><br />The lecture notes are mostly self-explanatory and covers all the materials, but a practice is important, because the lectures only teach concepts, but the exam question test the application of those concepts. <br /><br />Skipping lectures is okay, but it is advised to read through the lecture materials first, because some concepts can be harder to understand.",
            "comment_grading": "Grading is spread across 4 homework assignments, midterm and final.<br /><br />As usual, the final has the greatest weighting, followed by midterm and assignments.<br /><br />Mean gives around a B or B-.",
            "comment_workload": "The workload is very acceptable. The 4 homework assignments come after a major section of topics has been thoroughly taught in lectures and tutorials. The later homework assignments make good exam practice.",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "Qn3stLr4mFcyCs0KS0axC9oBFnILGRTm",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "GEPC",
            "date": "Feb 11, 2017",
            "title": "",
            "comment_content": "The course focus on sorting algorithms, dynamic programming and graph theory. It is a useful course, learning those topics help improve writing programs.",
            "comment_teaching": "Professor and TAs's teaching are clear, and easy to follow. But in fact I skip many classes and don't know too much.<br />Lecture notes are enough for handling assignments and exam, plus practising on homework is sufficient to understand most course material.",
            "comment_grading": "Grading depend on 4 assignments, midterm and final exam.<br />The grading is normal, getting~0.75 in homework, ~0.75sd in midterm, ~1sd in exam get a B+ at last.",
            "comment_workload": "Workload is fine.<br />Assignments are short, each need only 2-3 page to answer. Most questions require write an algorithm to answer, or proof of its correctness.",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 3,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "eDqNgm4DwmjOpfRhYNjoZlN5wSEMb5Zn",
            "semester": "2022-23 Spring",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "151044",
            "date": "Aug 21, 2023",
            "title": "Useful Course (but painful for non-Math enthusiasts)",
            "comment_content": "Contents are the same as any standard algorithms course.<br />Big-O, Theta, Omega (and the Master Theorem)<br />Divide and Conquer (Binary Search, Mergesort)<br />Randomized Algorithms (Probability, Quicksort)<br />Heap (and Heapsort)<br />Linear-time Sorting (Counting and Radix Sort)<br />Greedy Algorithms (Stable Marriage, Huffman Encoding)<br />Dynamic Programming (1D, Over intervals, 2D)<br />Graphs (Basic Properties, BFS, DFS)<br />Minimum Spanning Tree (Prim's, Kruskal's)<br />Shortest Paths (Bellman-Ford, Dijkstra's, Floyd-Warshall)<br />Maximum Flow (Briefly in 1 lecture)<br /><br />Overall, pretty applicable to many problems you'll see.",
            "comment_teaching": "Despite having a 9am Friday session, Siu Wing was a decent lecturer who could keep my attention and is generally easy to follow. He does tend to ask questions to students to illustrate some of the more tricky points - interactive, but perhaps not the cup of tea for everyone. <br /><br />One not-so-nice thing is that he tends to skim over chapters when he doesn't have time - so I got quite confused at the last chapter on maximum flow. Overall his lectures are well-paced though, with decent examples for you to revise to.",
            "comment_grading": "Grading was pretty good considering my performance.<br /><br />Grading scheme was Homework 30%, Midterm 30%, and Final 40%, so good homework performance is essential.<br /><br />Data (Low,LQ,Mean,Median,UQ,High,Max):<br />HW 1:0/38/40.27/43/47/50/50<br />HW 2:0/44/43.18/47/48/50/50<br />HW 3:0/26/29.9/33/35/40/40<br />HW4:0/41.75/43.57/48/52/55/55<br /><br />Midterm:11/27/35.2/34.5/42/63/70<br /><br />Final:5/23.5/33.95/34/42/60/70<br /><br />Scoring below mean in nearly every homework, slightly above mean in midterm, and slightly below mean in Finals yielded a B-.<br /><br />Note: Siu Wing's exams are not like Golin's exams or Papadias' exams: they are nearly all pure algorithm design questions with no &quot;dry run&quot; questions for you to get marks, and you need to prove the correctness of your solutions as well. Prepare adequately by reviewing homework and slides to see common proof techniques for algorithms.",
            "comment_workload": "The four assignments constituted the majority of the workload. Don't be fooled by the low number of questions - all of them require significant time to work out (especially the proofs). You are advised to at least read through the homework when it comes out and think about it in your spare time. Find groups to do your homework as well - some of the more difficult questions would definitely benefit from you bouncing ideas off each other. <br /><br />From someone who's definitely not a math guy and got overwhelmed by the homework: it's okay if you find the homework difficult. The mean of the exams are way lower, and you can get your marks back there. Good luck!",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 2,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "roFMMFfBcZdBb8hxUserNkUQsIVurdNp",
            "semester": "2022-23 Spring",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "AP2112",
            "date": "May 31, 2023",
            "title": "Math and Lang Course",
            "comment_content": "Very important for interview or master/Phd ?<br />Some guy go for master or Phd will study this course<br /><br />Big O, theta, omega<br />Divide and Conquer<br />Sorting<br />Master Theorem<br />Greedy<br />Huffman<br />Stable Marriage <br />Dynamic Programming (no idea wt it talking)<br />Graph<br />BFS DFS<br />MST<br />shortest path<br />max flow",
            "comment_teaching": "Siu Wing will point at ppl to answer quesitons<br />If u scared u can dont go lecture, quite sad that some lesson is 9am<br />only 4 ppl in classroom<br /><br />If u watch zoom recording, u maybe cannot see clearly wt is in the screen, cuz they used is bad camera and the words in screen is blurred.",
            "comment_grading": "Grade: A <br />Some frds MT UQ, Final LQ can still B<br />OK good grade<br />---<br />Stat:<br />HW1: (full 50)<br />Mean: 40.27<br />Median: 43\tHigh: 50<br />Upper Quartile: 47\tLow: 0<br />Lower Quartile: 38<br /><br />HW2: (full 50)<br />Mean: 43.18<br />Median: 47\tHigh: 50<br />Upper Quartile: 48\tLow: 0<br />Lower Quartile: 44<br /><br />HW3: (full 40)<br />Mean: 29.9<br />Median: 33\tHigh: 40<br />Upper Quartile: 35\tLow: 0<br />Lower Quartile: 26<br /><br />HW4: (full 55)<br />Mean: 43.68<br />Median: 48\tHigh: 55<br />Upper Quartile: 52\tLow: 0<br />Lower Quartile: 42<br /><br />MT: (full 70)<br />Mean: 35.2<br />Median: 34.5\tHigh: 63<br />Upper Quartile: 42\tLow: 11<br />Lower Quartile: 27<br /><br />Final: (full 70)<br />Mean: 34.14<br />Median: 34\tHigh: 60<br />Upper Quartile: 42.5\tLow: 5<br />Lower Quartile: 26<br />---<br />Mine<br />HW1: 48 / 50<br />HW2: 50 / 50<br />HW3: 35 / 40<br />HW4: 47 / 55<br />MT: 50.5 / 70\t<br />Final: 46.5 / 70<br /><br />MT: Recurrence, sorting, D&amp;C, Greedy, Heap<br />Final: huffman, stable marrige, D&amp;C, many graph<br />Final total 6 quesiton, 4 is graph, 1 is DP mix with Graph<br /><br />Make sure your explaination skills is good<br />or else TAs don't know wt u saying",
            "comment_workload": "HW * 4<br />MT <br />Final<br /><br />Not many things to do<br />But hard to master and understand<br /><br />and this semester seems change prof to teach<br />past paper was very ez, just drawing some line and test u know to basic or not<br />But this semester is like a math couse, lots of proving, understanding, and design algo<br />Past paper quite useless<br />Dont waste time on past paper, go understand to algo",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "tbVxkIVEPnqtqmzQOQJFcIVUWuZF2nGc",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "ËêΩËªäË´ãÊó©ÊèöËÅ≤",
            "date": "Jun 10, 2022",
            "title": "Every bit as good as golin's lectures",
            "comment_content": "Among all CS compulsory courses, this one(3711) and COMP2011+12/2012H, in my opinion, are proboably the most important courses. The content of COMP3711 basically never changes since it's about &quot;classic algorithms&quot;, not the ML or DL algorithms that could be changing and developing everyday nowadays. <br /><br />Main Topics:<br />~ The idea of divide and conquer<br />~ The idea of greedy algorithm<br />~ Dynamic programming (1D/2D/interval)<br />~ Graph algorithms (from BFS/DFS to shortest paths)<br />~ Max flow problems<br /><br />From my perspective, &quot;divide and conquer&quot;, &quot;greedy&quot; and &quot;DP&quot; are about getting the idea, or the approach of thinking, while Graph algorithms really seems like a game of memorization, well at least I wasn't smart enough to figure out any &quot;generic&quot; idea behind them.",
            "comment_teaching": "Ever since entering ust and getting into CS major, I have been imagining taking this course from Prof Golin, because every rumor I heard about Golin is about how clear his teaching is. And I know he normally teaches this course. And also most rumors I heard about prof Papadias is how weird his accent is and how difficult it is to follow his lectures. So at first when I saw it was prof Papadias who was going to be the course instructor this semster, I was very disappointed and really wanted to drop the course. <br /><br />But it turns out that Papadias's teaching is just great! Yes, he has a strong greek accent, but it's absolutely undestandable, it's even easier to follow compared to the Chinese accent of some professors I think. Aside from the accent, everything else is very clear. He explains each concept clearly and in an organized manner, he also give plenty of examples to help us understand. And despite this was an online semester, he fully utilized the zoom chat to make the lecture as interactive as possible. I haven't really taken a course from Golin, but if all rumors about how good Golin's teaching is are true, I think Papadias's lectures are every bit as good as Golin's lectures.<br /><br />But there are two major difference between Papadias and golin's style. (See Grading and Workload section)",
            "comment_grading": "Usually if Golin is the only instructor of this course or coteaching this course with other instructors, golin will be the course coordinator, that means he gets to decide grading scheme. And Golin's style is to give a so called &quot;guarantee grading&quot;. (you may probably find the details about this in comp3711 review on Golin) And that &quot;guarantee&quot; is a &quot;lower bound guarantee&quot;, so as long as your overall score is high enough, you can secure an A range. But when Papadias is the only insturctor of the course (and hence the course coordinator), he doesn't have this &quot;guarantee&quot; scheme. Instead, it's pure curved grading. <br /><br />And it turns out that because the final exam is much easier this semester, the mean reached an astonishing 80 (which is probably never seen in comp3711 history I think), with an sd of 17. The mean of the final was even higher than many of the homework asignments. <br /><br />But despite that, since Papadias already gave an A range of 25%,&nbsp;&nbsp;which is normally the largest A range allowed according to ust policy (Bad Guy UST, why not allow for more A), I should say the grading of this course (at least this semester) is very good.<br /><br />And I also heard that the mean is B, while Golin claimed his mean is usually C+/B-, which is &quot;standard ust&quot;, quoted from Goin.",
            "comment_workload": "&quot;The workload of comp3711 is isane&quot;, this is what I heard for a thousand times before taking this course. However, the workload was ideed not small, but not that &quot;insane&quot;. <br /><br />This is probably another important difference between Golin and Papadias's style. Golin emphasizes a lot on proofs. He has a very standard and strict requirement on writing rigrous proofs for many kind of algorithms, which could often end up in pages. But Papadias has an more &quot;algorithmetic focus&quot;. He doesn't focus that much on proofs, but instead on the intuition and design of algorithms. So Papadias's assignments are lengthy, but the difficult part is about coming up with the idea of the algorithm, not writing pages of long and rigorous proofs. So the workload is actually smaller than I imageined.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 4,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "DMXsSOpAntQOXSEjxF0VdniRsocZgrWP",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Justin Ding",
            "date": "Jan 24, 2022",
            "title": "",
            "comment_content": "",
            "comment_teaching": "Professor Golin analyse the algorithms pretty specifically and tutorials will prepare you for the assignments.",
            "comment_grading": "Assignment 1: 77/ 100<br />Assignment 2: 72/ 100<br />Assignment 3: 98/ 100<br />Assignment 4: 98/ 100<br />Assignment 5: 98/ 100<br />Programming Assigment: 82/100<br />Final exam: 79/100 (median: 75)<br />Final grade: B<br />I would say the grading is reasonable due to my terrible grade in the 2 assignments and the programming assigment. Moreover, the&nbsp;&nbsp;assignments are much more harder than the exam so you will probably get 90s in the final exam if you go through the tutorials and the lectures again (I only got time to review the lectures and loss 15 marks already because I didn't remember a similar question in the tutorial)",
            "comment_workload": "The workload for me in this course is pretty high, I spent 3 days (whole) in the first assignment. However, you will probably spend less time than me since I used 1 day to finish the last assignment.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": true,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "syRm2RjxD1jAy704JOlQbPAlnWrBNnda",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Owie",
            "date": "Jan 08, 2022",
            "title": "Tough :)",
            "comment_content": "See other people comments ~",
            "comment_teaching": "Although I cannot fully understand what Golin said in the lecture, he always answers Piazza quickly, really appreciate it!",
            "comment_grading": "50% 5 assignment + 1 PA<br />50% Final Exam<br /><br />Mean: 76.11<br />Below Mean &lt;5 marks B-<br />As rubbish as me accept this grade<br />I spent my effort on it already ;(",
            "comment_workload": "The tough part is <br />when u finish one assignment and want to rest, another asm release.<br />Since it can cooperate, remember to find friends do with you.<br />Otherwise, u cannot finish it on time, and below mean :(<br /><br />Personal comment:<br />I do think this course is useful for training you how to think logically<br />The problem is that how can u express logically and maybe mathematically.<br />Yet, as a MATH major student, &quot;Proof it mathematically&quot; is the hardest part for me because it really gets me confused.<br />When I watch the assignment answer, I cannot get why it is mathematically ;(<br />To conclude, doing much more revision and trying to explain clearly in your own words is fine.<br />Add oil !",
            "rating_content": 3,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 1,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "kg0S5ibNKNE8rpO03GfTdVi4bUqd9kCh",
            "semester": "2021-22 Fall",
            "instructors": [],
            "is_author": false,
            "author": "kcy240",
            "date": "Dec 19, 2021",
            "title": "A-/BÂÆπÊòìÔºåA/A+Èõ£",
            "comment_content": "ÁùáÂÖ∂‰ªñ<br /><br />ÂÅáÂ¶ÇÂë¢ÂÄãcourseÂîîÊ¥óproofÈáéÊàëË´óÂ•ΩÂ§ö‰∫∫ÈÉΩÊúÉÈêòÊÑèÂë¢ÂÄãcourseÔºåÂÖßÂÆπË±êÂØåËÄå‰∏îÂπæÂØ¶Áî®<br /><br />ÂÄã‰∫∫ËÄåË®ÄgreedyÂó∞partÊúÉ‰øÇÊúÄÈõ£",
            "comment_teaching": "ÂÖ©ÂÄãprofÈÉΩÊïôÂæóÂ•ΩÂ•ΩÔºåGolin PiazzaÁ≠îÂïèÈ°åÈÄüÂ∫¶Ê•µÂø´",
            "comment_grading": "90%‰øùË≠âA range<br />80%‰øùË≠âB range<br />70%‰øùË≠âC range<br /><br />ÂÄã‰∫∫Ë¶∫ÂæóÊãâcurve course ÂÄãmeanÂÜáÊÑèÁæ©ÔºåÊâÄ‰ª•ÊØîÂÄãmedianÂ§ßÂÆ∂ÂèÉËÄÉ<br />ÂäüË™≤50% ÊØè‰ªΩÂäüË™≤ÂÄãmedian 90up <br />(HW1/2/3/4/5/Programming Assignment 1-&gt; 91/93/94/98/91/100)<br />ËÄÉË©¶50% median 75ÔºåSD 23.1<br /><br />Overall 98% -&gt; A+<br />Ë¶ãÂÖ∂‰ªñ‰∫∫97%ÂÜáA+ÔºåÊàëÊáâË©≤‰øÇÈÇäÁ∑£‰ΩçÔºåËá™Â∑±ÂèÉËÄÉ‰∏ã<br />(Âà©Áî≥: Ëá™Â∑±ÂÜáÂèÉÂä†ÈÅéÂí©ÊØîË≥ΩÔºå‰∫¶ÈÉΩÂÜá‰∏äÈñãH courseÔºåLocal)<br /><br />overall 80%ÂÖ∂ÂØ¶ÂîîÁÆóÈõ£ÔºåÂäüË™≤Êîû45%ËÄÉË©¶70ÂàÜ(mean)Â∑≤Á∂ìÂ§†ÂÅöÔºå‰ª≤Ë¶ÅÊúâ‰∫∫Â∞ëÈÅé80%ÈÉΩÊúâB-ÔºåÊâÄ‰ª•ÂÖ∂ÂØ¶A-Ê®ì‰∏ãgradingÂÖ∂ÂØ¶ÂîîÂ∑ÆÔºå‰ΩÜA/A+ÂòÖÂÆπÈåØÁéáÊ•µ‰Ωé(Â§™Â§öÁô≤‰Ω¨)",
            "comment_workload": "Èáç<br /><br />ÂäüË™≤x6 (Êúâ‰∏Ä‰ªΩ‰øÇprogramming assignment)ÔºåÊØè‰ªΩÂ§ßÁ¥ÑÊØî‰∏ÄÂÄãÂçäÁ¶ÆÊãú‰Ω†ÂÅö<br />ÈÄöÂ∏∏ÊØè‰ªΩÂäüË™≤Êúâ5È°åÔºåÂÖ©‰∏âÈ°åÈõ£(proof)ÔºåÂÖ©‰∏âÈ°åÂÆπÊòì(run algorithm)„ÄÇËá™Â∑±ËÄåË®ÄÊØè‰ªΩËá≥Â∞ëÂÅö12ÂÄãÈêòÔºåÊú™ÂåÖÂüã‰πãÂæåkeep‰Ωècheck PiazzaÁùá‰∏ãËá™Â∑±ÊúâÂÜáÊºèÈáé/ÈåØÂíóÈáçÂÅöÂòÖÊôÇÈñì<br />Âª∫Ë≠∞: Êó©Âï≤ÂÅöÔºå‰Ω†ÂîîÊúÉÁü•Ëá™Â∑±Ë¶ÅÂπæËÄêÂÖàÂÅöÂæóÂÆåÔºåÊúâÂï≤È°åÁõÆË´óÊàêÊó•ÈÉΩÊú™ÂøÖË´óÂà∞Èªûproof„ÄÇÊúâÂîîÊ∏ÖÊ•öÂèØ‰ª•ÂéªPiazzaÈñãpostÔºåÊÉ≥Ë¶Åhint‰∫¶ÈÉΩÂèØ‰ª•ÁùáÂÖ∂‰ªñ‰∫∫Âï≤postÔºåÈÄöÂ∏∏ÊúâÂ•ΩÂ§öËõõÁµ≤È¶¨Ë∑°<br /><br />ÊàëËá™Â∑±ËÄÉË©¶Ê∫ñÂÇôÊôÇÈñì‰øÇ5Êó•<br />Âª∫Ë≠∞: Ê∫´ÁÜüÊâÄÊúâlectureÊïôÈÅéÂòÖalgorithmÔºåÂÖ®ÈÉ®Ë¶ÅË®òÂæóÈªûrunÔºåÂ§ßÁ¥ÑÁü•ÈÅìÈªûproof(Êúâ‰∏ÄÊ¢ùËÄÉË©¶È°åÁõÆÂè´‰Ω†ÂÜçproof‰∏ÄÊ¨°ÔºåË®òÂ∑¶Â∞±ÊúâÂàÜ)„ÄÇTutorialÊïôÈÅéÂòÖÊâÄÊúâÈ°åÁõÆÂ•ΩÂª∫Ë≠∞Ëá™Â∑±ÂÅöÂ§öÊ¨°ÊàñËÄÖÁùáÂ§öÂÖ©ÁúºÔºåËÄÉË©¶È°åÁõÆÂ•ΩÂ§ßÊ©üÊúÉÁõ∏‰ºº(ÊîπÂ∞èÂ∞è)„ÄÇpast paperÊàëËá™Â∑±Ê∑®ÂÅöÂíó1‰ªΩÔºå‰ΩÜÊàëÂª∫Ë≠∞‰Ω†ÊúÄÂ•ΩÂÅö2-3‰ªΩ(ÂÅöÊúÄËøëÂπ¥‰ªΩ)ÔºåÂõ†ÁÇ∫Âï≤È°åÁõÆÊúâÊ©üÊúÉÁøªÁÇíÁöÑ(ÊàëÂú∞Êúâ1Ê¢ù‰øÇÁøªÁÇí)„ÄÇËÄå‰∏îÂÅöÂÆåÂøÉÊÉÖÊúÉÊØîËºÉÂ•ΩÔºåÂõ†ÁÇ∫‰Ω†ÊúÉÁôºÁèæÂÖ∂ÂØ¶examÈõ£Â∫¶Â∞çÊØîhwÁ∞°ÂñÆÂ•ΩÂ§ö„ÄÇ<br />***DPÊ•µÂ§öÔºå‰ΩîÂàÜÈáçÔºåË¶ÅË®ìÁ∑¥Â•ΩËá™Â∑±ÂÄãË´óÂò¢ÊñπÂºè",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 7,
            "voted": false,
            "is_upvote": false,
            "comment_count": 13,
            "attachments": []
        },
        {
            "hash": "BcuS8xJ9jb26oyCawtzASKEYMsvblt0X",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Threch",
            "date": "Dec 28, 2020",
            "title": "",
            "comment_content": "Syllabus:<br />1. Divide and Conquer<br />2. Master Theorem<br />3. Randomized Algorithms<br />4. Many Sorting Algorithms, e.g. Quicksort, Heapsort, Linearsort etc.<br />5. Balanced Binary Search Tree<br />6. Greedy Algorithms<br />7. Huffman encoding<br />8. Dynamic Programming<br />9. Graph search Algorithms<br />10. Shortest Path Algorithms<br />11. Maximum Flow<br />12. Stable marriage<br /><br />Content is difficult and complex, probably will make students who are not good in mathematics very tough.",
            "comment_teaching": "Professor speak in a fluent English. He will do the algorithm analysis step by step to show students how the algorithms working by writing some notes on the slides during lecture.<br /><br />If you are passionate in learning algorithms and you are smart then it will be easy to follow professor as his explanation in contents is detail.<br /><br />However, the sound of professor makes me feel sleepy in every lessons. D:",
            "comment_grading": "50% Assignments<br />50% Final Examination<br /><br />Actually your grade depends on your final examination.<br /><br />Assignment 1 88/100, mean 80.4<br />Assignment 2 100/100, mean 76.8<br />Assignment 3 100/100, mean 88.6<br />Assignment 4 100/100, mean 89.1<br /><br />Final 64/100, mean 53, sd 17<br />(Allow for 1 cheat sheet in this semester)<br /><br />Grade: A-",
            "comment_workload": "Extremely High.<br />There are 4 assignments in this semester. All of them are not the easy job. You may need to spend time to search the relevant materials to help you solve the questions in google.<br />Some questions can be directly searched so that you must give the relevant source and use your word to write it to prevent plagiarism if you use it.<br /><br />Assignments can be done in collaboration, so finding your friend to think the question together is a good way to solve it. Remember to do acknowledgement.<br /><br />Each assignments costs me at least few days to do it, especially the dynamic programming assignment. It is very tough and that TA cannot give you any help if you are stuck in that assignment. So the assignment difficulty also depends on the kindness of TA.<br /><br />Final is quite tough. Make sure you know all algorithms taught in lectures and how to use it. Preparing earlier will be better as course content is quite a lot.<br /><br />E for dynamic programming assignment. Excluding it, it will be a C.",
            "rating_content": 3,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 1,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "ErN0ff2JDitpSwdao8fQAaNaE7oE2wdF",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "jaspercyat",
            "date": "Sep 10, 2020",
            "title": "ÊÑüË¶∫‰øÇÊàêÂÄãcsÊúÄÈõ£ÂòÖcourse",
            "comment_content": "Ë¨õdata structureÊó¢Èáé<br />TopicsÔºö<br />Divide-and-Conquer <br />Quicksort and linear-time selection<br />Other Sorting<br />Greedy Algorithms<br />Dynamic Programming<br />Graph Algorithms<br />AVL Trees<br /><br />Â∞±ÂíÅÁùáDÂÖßÂÆπÂ•Ω‰ººÂîîÁÆóÈõ£Ôºå‰ΩÜassignmentÂêåexamÂüãÈ°åÁõÆÂ•Ω‰ººÂêåd notes ÂÖ©ÂÄãÂ±§Ê¨°ÂíÅÊ®£„ÄÇÊúÄÂ•ΩÈÉΩ‰øÇËá™Â∑±‰∏äÁ∂≤ÊêµÂ§öÂ∞ëÂ∞ëÈ°åÁõÆÂÅö",
            "comment_teaching": "ÊôÆÊôÆÈÄöÈÄö",
            "comment_grading": "Áî≥Ë´ãÂ∑¶P/FÊâÄ‰ª•ÂîîÁü•Ôºå‰ΩÜË≠ò‰∫∫final 30ÂàÜÈÉΩBÂ∑¶<br />mean = 55/100<br />SD = 19",
            "comment_workload": "6ÂÄãassignment 50%<br />Exam 50%<br />Assignment‰∏äÊõ¨Â†ÇÈÉΩ‰øÇÊúâÂ∞ëÂ∞ëÂîîË≠òÂÅö<br />ÁúüÂøÉÈõ£",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "E02gKH4Zh5Cj2sW89wQYTkibhROAvmhk",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "TerryWu",
            "date": "Jun 10, 2020",
            "title": "Workloads are CRAZY for virtual semester",
            "comment_content": "Unlike its course code, it's more like a MATH course actually. Throughout whole semester, the course is all about conceptual ideas and mathematical proofs for specific algorithms. Coding is not necessary but it may be useful when you're doing &quot;worked&quot; problems in assignments (you will see in WORKLOAD sections).<br />COMP2711 is the prerequisite of this course. <br /><br />Syllabus:<br />0. Course Mechanics<br />1. Introduction (Simple Revision of COMP2711)<br />2. Divide &amp; Conquer (DaC)<br />3.&nbsp;&nbsp;The Maximum Subarray Problem (DaC Application)<br />4. Integer and Matrix Multiplication (DaC Application) + Master Theorem<br />5. Randomized Algorithm<br />6. Quicksort and Linear-Time Selection<br />7. Priority Queues, Heaps and Heapsort<br />8. Sorting in Linear Time (Counting Sort, Radix Sort)<br />9. Greedy Algorithms<br />10. Huffman Coding (Another Greedy Algorithm)<br />11. Dynamic Programming (1D)<br />12. Dynamic Programming (2D)<br />13. Dynamic Programming over Intervals + Matrix Multiplication Application<br />14. Introductions to Graph<br />15. Basic Graph Algorithms (BFS &amp; DFS &amp; Topological Sort)<br />16. Minimum Spanning Tree <br />17. Shortest Paths<br />18. Maximum Flow <br />19. Maximum Flow Application<br />20. Stable Marriage Algorithm<br />21. Binary Search Trees Operation + AVL Trees<br /><br />(Extra Material: Introduction to Hashing)",
            "comment_teaching": "Lectures:<br />Professor Golin seems to be a native English speaker. He articulates all the concepts in details while maintaining the overall teaching pace quite well. <br />Don't hesitate to ask question if you're confused. Professor Golin is always willing to answer your concerns in details. One of the best instructors in this virtual semester I met.<br /><br />Tutorials:<br />Tutorials are conducted in Q&amp;A mode this semester i.e. TA would not teach/explain the tutorial notes unless you ask them about those problems. <br />However, solutions would be provided and they are usually quite detailed, I think it's not difficult to self-study so I haven't attended the tutorials after the first one.",
            "comment_grading": "In this virtual semester, grading scheme changes quite a lot. <br />Grading Scheme:<br />50% assignments + 50% finals<br /><br />There is no midterm and quiz in this semester (please refer to other reviews for normal semester) and I cannot really tell if it's better or worse.<br /><br />Assignments:<br />There are 7 assignments in total. They are posted around every two weeks.<br />I got 664/700 with all of them scoring much more than mean (SDs are not provided)<br /><br /><br />Final:<br />Just like normal ones, nothing special about it.<br />mean: 55.4<br />sd: 19.3<br />I got 78/100 (above 1 sd a bit). <br /><br />Conclusion: Don't make stupid mistakes on assignments so that you will save more points to be deducted for finals.<br /><br />In total: 86.43/100<br />Grade: A-<br />Thanks Golin :D",
            "comment_workload": "My suggestion: DO NOT take this course if it's virtual semester. It's assignments are really time and brain cells killer...<br /><br />There are relatively more &quot;worked&quot; problems in assignments this semester.<br />E.g. Given a graph with 10+ vertices. Find out minimum spanning tree / all-pairs shortest paths / max flow. We must show every substeps in details (the parents and distance form after adding a new vertices).<br />Using coding to finish assignments is a good approach. You can choose if you prefer to code or write it by hands (iPad recommended).<br />I have no idea if TA has done these problems by their own in advance. Doing such tedious process with so many times is kinda useless. I mean, the given data set could be smaller and we can still have a good practice on this concept.<br /><br />Professor and TA may think that as we almost stay in our home all the time, we would have much more time to spend on our assignments.<br />Well, it's actually true. But workloads become disastrous when all professors think in that way.<br /><br />To deal with these stupid tedious worked questions, I have almost no time for reviewing contents.<br />It's not about if you're a genius or not. It's just about time management and your patience.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "RaTq8c94sNkCQ3ZeMrMR2eZdY5qmMhEn",
            "semester": "2018-19 Fall",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                },
                {
                    "id": 131,
                    "name": "QU, Huamin",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "Dok",
            "date": "Jan 06, 2019",
            "title": "",
            "comment_content": "1. Divide and Conquer<br />- Asymptotic runtime analysis<br />- Merge sort<br />- Maximum subarray<br />- Integer and matrix multiplication<br />- Master theorem<br /><br />2. Selection and Sorting<br />- Randomised algorithms<br />- Quicksort/Quickselect<br />- Heaps and heapsort<br /><br />3. Greedy Algorithms<br />- Greedy algorithms<br />- Huffman coding<br /><br />4. Dynamic Programming<br />- 1D DP<br />- 2D DP<br />- DP over intervals<br />- Optimal BST<br /><br />5. Graph Algorithms<br />- BFS, DFS, Minspan trees<br />- Prim's Algo<br />- Kruskal's Algo<br />- Shortest paths<br />- Maxflow<br />- Max bipartrate matching<br />- Stable matching",
            "comment_teaching": "Prof Papadias is a very good lecturer and teaches every concept and every example very clearly. He makes sure everyone understands his logic before moving on. He sometimes explains uses examples from outside the slides so make sure to attend his lectures. He has a strong Greek accent but is very easy to understand.<br /><br />Prof Qu unfortunately has subpar English and mumbles his way through each lecture, merely reading off the slides (unlike Prof Papadias who solves every example on the whiteboard with the class). So if you have a choice between the two, I strongly suggest taking Prof Papadias' class.<br /><br />TAs' quality differs significantly as well. Some of them are very unprepared for the tutorial sessions, so go attend a tutorial session to see if the TA is good at explaining. Otherwise don't waste your time by going there.",
            "comment_grading": "Assignments = 5% * 4<br />Midterm = 30%<br />Final = 50%<br /><br />Got ~100 for all assignments, ~0.5sd midterm and final, got B-.<br />Usual grading.",
            "comment_workload": "Assignments: Some questions are quite difficult, so do them before the deadline comes, because you may have to think about them for a while. Only pseudocode is needed for the assignments, no real code. Sometimes have to write proofs, which is annoying. But overall very doable.<br /><br />Midterm and Final: Very similar to the assignment questions, so prepare by trying to do them by yourself. The professor provides past papers as well, so you may prepare by solving them as well. Final is cumulative.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "M2DBxI97zBddPPnQgUUfGYAygtNiNgP7",
            "semester": "2016-17 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "takecare",
            "date": "Dec 31, 2016",
            "title": "A bit out of my expectation",
            "comment_content": "The course is too theoretical this semester: previous semesters' coding implementation assignments were cancelled...it turns to be as impractical as COMP3511. Sad<br /><br />Topics:<br />1. Bubble sort, insertion sort, big O notations<br />2. Mergesort<br />3. Sub-array problem<br />4. Randomized algorithms<br />5. Quicksort<br />6. Heaps<br />7. Lower bounds, counting sort, radix sort<br />8. Huffman coding<br />9. Greedy algorithms<br />10. Dynamic programming (VERY HARD)<br />11. Graphs, trees<br />12. Breadth-first search and depth-first search<br />13. DAG and Topological sort<br />14. Minimum Spanning Trees<br />15. Shortest path algorithms<br />16. Maximum flow<br />17. Matching - Hungarian method (HARDEST but irrelevant)<br />18. Stable Matching<br /><br />Regardless of the grading and memorization, this is the most difficult undergraduate course in computer science because the concept of each topic is hard to understand in a short period of time and it requires a lot of thinking.",
            "comment_teaching": "I don't know why Golin hurries to teach every lesson...he just speaks too fast and there are just a few examples to demonstrate each concept. As a result, he almost finishes all the stuff in early November and extra content like bipartite matching in the course.<br /><br />The TA Lau Man Kit is helpful to explain the course materials in detail. If you have difficulty in the course, go to find him.",
            "comment_grading": "20% for 4 sets of assignments (which are difficult)<br />30% for Midterm (which is quite easy to get high marks)<br />50% for Final (which is harder than midterm)<br /><br />However, the mean of the final is higher than the midterm, so if you want to get good grade in this course and you are not genius, work harder in the midterm because a lot of midterm questions are DIRECTLY copied from past papers and tutorial solutions provided in the course website.<br /><br />I get marks above mean in the midterm but lower mean in the final exam, passing the assignments. I expected to get C range but finally a B range grade! Thus, don't get scared by the difficulty of this course at first!",
            "comment_workload": "DO NOT COPY ALL THE STUFF FROM THE OLD ASSIGNMENTS AND PAST PAPERS, although some may work.",
            "rating_content": 4,
            "rating_teaching": 3,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "rXO9JwGDqxTYXeJ1ACe3MdFG1NsiAuQ9",
            "semester": "2015-16 Fall",
            "instructors": [
                {
                    "id": 115,
                    "name": "YI, Ke",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Aye",
            "date": "May 25, 2016",
            "title": "",
            "comment_content": "1.divide and conquer<br />2.sorting<br />3.greedy algorithms<br />4.dynamic programming<br />5.graph algorithms <br />After learning these, those in COMP2012(H) will seem very easy to you.<br />Reference book: MIT press: Introduction to Algorithms",
            "comment_teaching": "Quite good and careful. Algorithms are implemented with examples. The instructor is nice. You can waive the requirement of COMP2711/2012 for this course. You can even get the permission of enrolling COMP5711 taught by him without any COMP courses taken.",
            "comment_grading": "4 Written Assignments: 5% * 4 = 20%<br />4 Programming Assignments: 1% * 4 = 4% (bonus)<br />(Actually there was 3 assignments due to time limitation)<br />Midterm exam: 30%<br />Final exam: 50%<br />midterm mean 66 sd 20<br />final mean 46 sd 19<br /><br />Around 1sd above mean in each exam =&gt; A-",
            "comment_workload": "Quite difficult for those with no computer science background such as me at first. After getting familiar with the contents and the way of thinking, it will be easier to comprehend. The workload mainly depends on how much time you spend on written and programming assignments.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "YiFQUhTGNkztgoO6VXw2Oh4NPSue8HRZ",
            "semester": "2022-23 Spring",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "mark_",
            "date": "May 30, 2023",
            "title": "Siu Wing's version is more difficult than the others",
            "comment_content": "- Divide and Conquer<br />- Random Algorithms<br />- Quicksort, Heapsort, Linear sort<br />- Greedy Algorithms, Huffman, Stable Marriage<br />- Dynamic programming (1D, 2D, over intervals)<br />- Graph Theory<br />- BFS, DFS, Min Spanning Tree<br />- Shortest path<br />- Max Flow<br /><br />My personal suggestion is to do some algorithms practice before taking this course.<br /><br />P.S. COMP3711H will be offered again next Fall by Prof. Goharshady.",
            "comment_teaching": "Professor Cheng's teaching is indeed quite interesting. I think he really wants you to understand the ideas taught in class, and goes into great detail with lots of diagrams and examples. He also sometimes throws in a few jokes to keep the lecture interesting.<br /><br />He will also sometimes ask the class questions and may randomly pick people, so be prepared to answer if you attend the lecture.<br /><br />However, sometimes he rambles too much, so it can be hard to pay attention. It also means he sometimes has to rush to finish the remaining content (or just skip it).<br /><br />The tutorials are not that useful, but it's good to review the tutorial slides before the exam.",
            "comment_grading": "The grading is curved but quite reasonable.<br /><br />30% Written Assignments x4<br />30% Midterm<br />40% Final<br />(No programming assignments)<br /><br />The midterm and final are much harder than Golin's and Dimitris's, since almost all the questions involve designing an algorithm and proving it. Don't even bother doing past paper analysis; it won't help. However, in return, the letter grade is more lenient (I think the A-range is wider).<br /><br />In the final exam, the marks are very sparsely spread out. However, maybe 20% of the total marks can be obtained by just reciting the lecture notes.<br /><br />STATS (Prof Cheng's section only)<br />--<br />Low&nbsp;&nbsp;LQ&nbsp;&nbsp;Median&nbsp;&nbsp;UQ&nbsp;&nbsp;&nbsp;Max&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Mean<br /><br />Assignment 1 (/50):<br />0&nbsp;&nbsp;38&nbsp;&nbsp;43&nbsp;&nbsp;47&nbsp;&nbsp;50&nbsp;&nbsp;|&nbsp;&nbsp;40.27<br />Assignment 2 (/50):<br />0&nbsp;&nbsp;44&nbsp;&nbsp;47&nbsp;&nbsp;48&nbsp;&nbsp;50&nbsp;&nbsp;|&nbsp;&nbsp;43.18<br />Assignment 3 (/40):<br />0&nbsp;&nbsp;26&nbsp;&nbsp;33&nbsp;&nbsp;35&nbsp;&nbsp;40&nbsp;&nbsp;|&nbsp;&nbsp;29.9<br />Assignment 4 (/55):<br />0&nbsp;&nbsp;42&nbsp;&nbsp;48&nbsp;&nbsp;52&nbsp;&nbsp;55&nbsp;&nbsp;|&nbsp;&nbsp;43.68<br /><br />Assignment mean is 157.03/195.<br /><br />Midterm (/70):<br />11&nbsp;&nbsp;27&nbsp;&nbsp;34.5&nbsp;&nbsp;42&nbsp;&nbsp;63&nbsp;&nbsp;|&nbsp;&nbsp;35.2<br />Final (/70):<br />5&nbsp;&nbsp;26&nbsp;&nbsp;34&nbsp;&nbsp;42.5&nbsp;&nbsp;60 | 34.14<br /><br />The overall mean is 58.75% and will get you a B-.<br /><br />The A+ cutoff is &lt;= 86% (not enough data to determine). I would guess it is around 80.<br /><br />Based on other reviews, 7x% is enough for A-range.",
            "comment_workload": "The majority of the workload will come from completing the four biweekly assignments.<br /><br />Each assignment has 5 problems, usually with one easier problem (such as just running an algorithm or solving recurrences), 2-3 moderately hard problems, and 1-2 really hard problems. Depending on your ability, it may take anywhere from a few hours to a week to complete.<br /><br />(Some questions in the assignments would be a better fit for MATH 1023 than COMP 3711...)<br /><br />Certainly, I will say you should take this course with some friends or teammates. You are allowed to collaborate on assignments, so it will be good to bounce some ideas around. Some of the assignment questions are genuinely really hard.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "3lIFPwJZ8q4RMHBJId76lqbHiH83JN2P",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "kizarrd",
            "date": "Jan 23, 2023",
            "title": "covers basic data structures and algorithms",
            "comment_content": "I could learn how to think and analyze codes in a perspective of time and space complexity, which I believe is an important skill for all programmers.<br /><br />Good overall, but only focuses on theories and proofs.",
            "comment_teaching": "I could feel that he wanted to make sure that every student understand the lecture. He knew all the topics very well and was willing to help students to understand.",
            "comment_grading": "I spent lots of time studying the contents of the course, and was quite confident with the course materials, but it was still difficult to apply the algorithms to solve some of the problems in the exams.",
            "comment_workload": "Quite heavy. <br />I had to spend quite a lot of time to digest each topic. <br />Homeworks were quite heavy and time comsuming as well, but it really helped me to prepare the exams.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "m4pkmdAuLcCatd1F0HoQsxZkpNulPaOz",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "sleepingbag",
            "date": "Dec 21, 2022",
            "title": "Difficult but important",
            "comment_content": "Many introduction about algorithms that covers different major topics in solving problems. <br /><br />The course would discuss why the algorithm is correct, the big O for the algorithm, what input would cause the worst case for the algorithm, the comparison with other algorithms on the same problem.<br /><br />Really useful for those technical interview. Highly recommend to spend time on this course for those who aim for an intern opportunity.",
            "comment_teaching": "Golin taught with passion and detail-oriented. He is also nice to the students.",
            "comment_grading": "Follow the instructions and detail to get marks for the homework.<br /><br />Study the past papers as many as you can for the exams. Exam questions are usually similar to the past exam problems.",
            "comment_workload": "The homework questions are hard and could take several days to figure them out. Usually there would be 3-4 standard medium questions and 1-2 hard questions. I strongly suggest to form a study team and work on this.<br /><br />A programming assignment which is normal difficulty.<br /><br />A final exam.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "PLzNySiNibY8rwtTWNLYL42VADBkJxCZ",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "wkleungau",
            "date": "Aug 24, 2022",
            "title": "",
            "comment_content": "1. Divide &amp; Conquer<br />2. Greedy Algorithms<br />3. 1D &amp; 2D Dynamic Programming<br />4. Graph Algorithms<br />5. Minimum spanning trees<br />6. Shortest paths<br />7. Maximum Flow",
            "comment_teaching": "Papadias teaches it very well. He also adds some additional examples to explain the algorithm. His accent may be a bit difficult to understand, but his explanations are very good. <br />If you are not familiar with some algorithms, he will also include some additional examples in his teaching.",
            "comment_grading": "It's easy to get a good grade, but it's hard to get an A+.&nbsp;&nbsp;Even if you get almost a perfect score, you may only get an A. <br />For assignment, it's easy to get high marks.",
            "comment_workload": "Workload is quite light<br />If you listen carefully in class, you can basically complete your assignments.<br />Assignment questions are similar to the lecture notes.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "M72MJXTp12puBTlJU8vUFHFgqtxp3sAY",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "rind",
            "date": "Dec 18, 2021",
            "title": "Good course",
            "comment_content": "This course is mainly about algorithm design and analysis. You will learn about how to calculate the space-time complexities of different algorithms.<br />This course should be very important for those who want to apply for ibank internships or start your journey of LeetCode, as all the fundamentals are taught in this course. We do not have COMP3711H this year. Therefore it may be better if you study this course in Yr2 Spring if you really want to get a job in the Fall recruiting season.<br /><br />1. Divide and Conquer, different sorting.<br />Introduction of different sorting algorithms. Learn how to use recursion to deal with problems. Some other sorting algorithm like quicksort, heapsort, linear sort are also taught.<br /><br />2. Greedy<br />Be greedy and take the best one among all choices in each steps, but...how do you define &quot;best&quot;? Very hard to proof its correctness, usually simple in implementation.<br /><br />3. Dynamic Programming<br />Very powerful tool that usually performed in optimization problems. Bottom-up approach of building up solutions compared to divide and conquer (top-down approach). The recurrence relationship will be key in this topic.<br /><br />4. Graph algorithms<br />BFS, DFS, Minimal Spanning Trees (Prim, Kruskal), Shortest Path algorithm (Dijkstra), Max-Flow-Min-Cut theorem, Ford-Fulkerson Algorithm.<br />The Max-Flow-Min-Cut is the best thing I learnt in this course, an effective tool solving many other problems.<br /><br />5. AVL Trees<br />Balanced BST. Relatively easy.<br /><br />6. String Matching (Finite-automata)<br />How does the computer do searching when you ctrl-F?",
            "comment_teaching": "Golin is quite good in teaching these things but he just explains something easy by a harder mathematical language.<br /><br />Every lesson, he speaks relatively slow, but as the class progress, he get excited and speaks faster and faster which takes you more and more effort to understand what he is talking about.<br /><br />He taught great before Graph Algorithms, but once he starts Graph Algorithms, he start messing a little bit, somehow he speaks too fast that makes a lot mistakes and has to speak again. He always said: &quot;ignore what I said in the last minute.&quot; and starts again. Maybe you can go the other section at this topic.",
            "comment_grading": "This year because there is no COMP3711H, the mean and median is relatively high (also related to final format, see in workload session) and seems like the teaching team do not adjust the grading for that, which makes it is very hard to get A/A+.<br /><br />But the teaching team promise a lower bound for grades:<br />90 or above get A range<br />80 or above get B range<br />70 or above get C range<br /><br />The grading part:<br />50% assignment (1 PA, 5 written assignments)<br />50% final exam<br /><br />Me:<br />Assignment: 594/600 (the mean for each assignment is around 80-90 but median is around 90+)<br />Final: 93/100 (mean 69.2, median 75)<br />Total: 95.8/100<br />Grade: A",
            "comment_workload": "The workload depends on your mathematical background, compare this course to those strict, rigorous math courses (e.g. MATH2033), this course is relatively loose in grading our proofs. Usually you still get full marks in your assignments/exam if you leave a bit loophole in your proofs (even one time I know my proof is not complete, but the TA still give full marks).<br /><br />The assignment 1 will be a big bomb for those who doesn't know how to write proofs, as somehow it requires a bit mathematical background to finish those upper bound/lower bound proofs (limit of sequences, epsilon-delta will help a lot).<br /><br />As the course progress, the assignments are easier, it no longer need an a-ha moment, but simply something covered in class.<br /><br />For the final exam, I am disappointed by its format, being a past-paper analysis course. There is one question from last year past paper directly, and mainly the proof questions comes from those already derived in lecture notes (Greedy proof of interval scheduling, Comparison-based sorting algorithms lower bound). What is the most disappointing is, there is only one question about graph, to draw BFS and DFS diagrams.<br /><br />I study my exam by understanding those key insight of each problem and proofs and I write the complete proof by those key insights then since I don't believe the exam will be a reciting game. However, for those who cannot regenerate the proof by key insights, congratulations, you can spend days and days reciting all the proofs and past paper. They are lenient in giving us the past papers. I would say this is good in some sense as hard work can really get you a good grade, since the professor promise for a grade lower bound, it doesn't hurt anyone that much. <br /><br />But I just don't believe that this is the correct way to examine students in a relatively hard course. Or maybe it will be a completely different story in COMP3711H but I don't have a choice this semester. I admit that in terms of hard work, I do not deserves an A+ compared to those who recite all materials.",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 4,
            "vote_count": 8,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "2Ib5BAdbedxj90dkapwRu6wvRlD4qkr6",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "misky",
            "date": "Dec 17, 2021",
            "title": "Good course , ‰∏âÈ†≠Áä¨no more",
            "comment_content": "Please refer to other posts.",
            "comment_teaching": "Good teaching although I didn't attend lesson but golin reply on piazza and email very quick , very nice and helpful professor.",
            "comment_grading": "Good grading, I believe half of the class get B or above as I am around median and I get a a B. Probably because 3711h got removed this semester. <br />I got around the minimum guarantee announced at the start of semester of &quot;getting„Äâ=80gurantees b-&quot;, managed to get a B , pretty good.<br />Just remember to get really familiar with DP&nbsp;&nbsp;then you are probably fine.",
            "comment_workload": "The homework are very hard and take days to do if you wanna get median i.e. 9x .",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 5,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 4,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "KVZqKFFzBt02bNJHTLMS70fwUtZt0SmF",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Z",
            "date": "Jul 30, 2021",
            "title": "Maybe this is MATH3711",
            "comment_content": "Compulsory COMP course. Basic algorithm stuff, including<br />divide and conquer<br />greedy algorithm<br />dynamic programming<br />graphs...<br /><br />3711 is almost a pure math course. It focus on proving the correctness rather than programing the code. All algorithms are described in pseudocode and there is no programming related content in this course, so if you are trying to pass a technical interview, you may need some extra exercise to write the algorithm in programming language.",
            "comment_teaching": "Golin is good at teaching and he answers questions posted to Piazza very quickly (like in 20 min?).<br /><br />Tutorial: I nearly skipped all. TA will explain some tutorial questions but i think you can read them on your own. There is a website where you can find all questions from tutorials and past exams along with explaining ppt slides.",
            "comment_grading": "My grades:<br />Assignment1 92/100<br />Assignment2 90/100<br />Assignment3 197/200<br />Assignment4 100/100<br />Assignment5 100/100<br />Final 86.5/100<br />Overall: 55% for assignments and 45% for final, 92. Got an A<br />Professors guarantee that you will at least receive an A- if your overall score is above 90.",
            "comment_workload": "Terrible<br />The first 2 assignments are fine because the course just begins and the contents are still basic things like big-Oh notation and binary search.<br /><br />However, hw3 is totally a nightmare. It consists of 9 DP problems and each one of the problem have some sub-problems and some sub-problems even have sub-sub-problems. It requires a good understanding on DP concepts and tricks. Do start it early otherwise you will be struggling with DDLs and midterms from other courses.<br /><br />Graph questions arrive in hw4 &amp; hw5. This time you will need to be familiar with the graph algorithms taught in class especially how they are proved and the correlated lemmas.<br /><br />Piazza is a useful platform for this course. You may ask questions&nbsp;&nbsp;or view questions asked by others. Professors will answer you very quickly and they will provide hints, which can save you lots of time in doing the homework. Besides, you may find the &quot;prototypes&quot; of some hw questions in tutorials.<br /><br />Final lasts for 3 hours and has two parts. Part 1 contains easy questions and slightly modified questions from past paper. Part 2 will have some new questions. Answers should be hand-written on pieces of paper then scanned and uploaded.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 2,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "NM2XElyZ4CUiUjCOpTWSjQifpaOdLzrm",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 805,
                    "name": "MA, Xiaojuan",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Arnold13067",
            "date": "Jul 29, 2021",
            "title": "useful course but I fucked up",
            "comment_content": "The course is teaching some of the fundamentals for a developer in general. The content is useful, but don't get fooled by how easy it appears to be in the first one or two weeks. The difficulty just increases exponentially. It will take a shit ton of brain work and a shit ton of luck to understand just one algorithm.",
            "comment_teaching": "Personally I feel like she is just reading PPT so I don't bother. Golin is a better speaker, but still the terms and variables are going to mess up your mind. Gotta stay focused throughout the lecture or you are going to miss everything.",
            "comment_grading": "I got a C but that's on me. I got two asms and my final below mean.<br /><br />Not sure bout others tho.",
            "comment_workload": "5 asms in one semster with one of them being double-sized. The first two are easy but the latter three ARE PURE TORTURE. Very difficult to get them straight. Do NOT attempt to solve them alone. You are going to miss out a lot of points if you do it alone (unless YOU ARE A FUCKING GENIUS). Make good use of piazza and your friends. They may not do much but still better than doing it alone.",
            "rating_content": 2,
            "rating_teaching": 3,
            "rating_grading": 2,
            "rating_workload": 1,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "S99h5ZqTvo9BApzmTz4IUUET88XAE9wQ",
            "semester": "2020-21 Fall",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "CSÊ∞¥Ê≥°",
            "date": "Dec 23, 2020",
            "title": "Useful content, but 50% final ‰∏ÄË©¶ÂÆöÁîüÊ≠ª",
            "comment_content": "AVL tree was skipped in this semester, otherwise the syllabus is identical. Useful stuff.",
            "comment_teaching": "Lectures are not very useful, read the lecture notes yourself and try the tutorial questions.",
            "comment_grading": "4 assignments 50% (mean: 334/400)<br />3-hour Final Exam 50% (mean: 53/100; SD: 17)<br /><br />Overall Grades<br />~68-70% B (mean)<br />~75% B+<br />~80% A-",
            "comment_workload": "Assignment 1 is easy, 2-4 are pretty challenging. <br /><br />My advise is to free up at least two full days for each, preferably with a friend. <br /><br />The final exam test for everything in the semester, very intense 3 hours. Past papers are essential. Safe to say it is the most difficult UG COMP course.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "bN0NS1j62rQtLUlEI8GAyNn911ng6sl1",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 805,
                    "name": "MA, Xiaojuan",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "elwc",
            "date": "Nov 05, 2020",
            "title": "",
            "comment_content": "Divide-and-Conquer<br />Quicksort and linear-time selection<br />Sorting<br />Greedy Algorithms<br />Dynamic Programming<br />Graph Algorithms<br />AVL Trees",
            "comment_teaching": "The instructor taught very well. I could follow her speech without any difficulties. She responded to questions nicely. You can ask her any stupid questions like what I did.<br /><br />Plus, in the beginning of each lesson, she would prepare a summary of things taught in the previous lesson. This is really good for ppl with bad memory.",
            "comment_grading": "Not bad. B+ for me.<br /><br />I lost 30% scores in one assignment but was fairly good in the other grading components.",
            "comment_workload": "Too crazy (19-20 Spring)<br />The midterm exam was cancelled and two (or three) more assignments were brought in. There were around seven assignments in just one course. And about half of the questions were like brain teaser that requires you to build the right algorithm. The remaining half was easier but still quite tedious. I have to admit as a deadline fighter this course is the most disastrous one ever. Watch out guys.",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 1,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "a1eWqIS3xxG02x05AmulqS7cRWSySiSU",
            "semester": "2019-20 Spring",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Doug Stamper",
            "date": "Jun 04, 2020",
            "title": "A course that requires hardwork",
            "comment_content": "Content is more or less the same as what you can see above.<br />Not much to add on.<br /><br />A noteworthy point is that these materials are almost impractical. Most of the time you can find online libraries for the implementation of almost ALL algorithms taught. So if you are expecting discovering new algorithms, I am here to correct you.",
            "comment_teaching": "Prof. Golin has good working ethics.<br />First, he knows how to teach. Generally, whenever he goes over an algorithm, he runs step-by-step example to give you intuition. <br />Second, he values feedback. Almost every lecture he stays behind and answer questions in details. And when I say answering questions, he really try understanding your hardship, for example, making wrong assumptions, lacking essential knowledge. Most of the time it isn't about the complexity of content but we, students, forgetting the essential assumptions.<br />Third, he answers email. I heard from him that quite some students simply take reference for their assignments, especially given this special semester where we have 7 assignments in total. So, I basically send him emails every time we have an assignment since I literally do each of them myself. Of course, they aren't dumb questions and I don't recommend you sending him dumb questions also. And he answered each of them timely and precisely. When I say timely, it is like within 2 hours even at night time like 2200. To be honest, this is admirable.<br />Last but not least, he encourages questions. So for example, since I was so busy and literally started revising 5 days before the exam and I got some questions on pastpapers, he literally told me to have a Zoom meeting for like half an hour for clearing all concepts.<br />To be brutally frank, this is an introductory course. So the content isn't that &quot;exciting&quot;. But you can see his enormous effort in making sure that students truely understand a concept both intuitively and rigorously.",
            "comment_grading": "This is a special semester as I said. We are in a lockdown and the school doesn't open for business. Thus, we have<br />50% assignments (6 in total, with one having 200 marks, it's about dynamic programming)<br />50% final<br />I am not going to enumerate each assignment's mean. Rather, I would just go over the overall mean.<br />Assignment: mean: 80 no sd<br />Final: mean: 55 SD: 19<br />My grades:<br />Assignment: 90<br />Final: 82<br />Grade: A-<br /><br />Prof. Golin has mentioned about the threshold. For example, if you go above 90% in course overall, it is guaranteed A range. In addition, this course is using a curve. That is why I got A-.<br /><br />Grading is tough in some sense. For assignments, you really need to nail the intuition rigorously. It isn't easy.",
            "comment_workload": "Now, it really depends since to be honest, you can really copy all the references into your assignments and get it done. You can also text some of your friends that have taken this course previously. I mean, there are literally multiple ways for scoring high in assignments, which are the most important thing to establish your concepts.<br />At the end of the day, it is your motivation. I spent a lot of time in doing all assignments by myself as well as perfecting them. <br />Also, please note that I type it in Latex. So it takes extra time again.<br />Not to mention the working problems in assignments where I coded the solution. Man, you can really decide the workload.<br />Second, tutorials.<br />There are literally on average 8 weekly tutorials. Not going to lie but if you cannot grasp the concept right after the lecture, those tutorials will simply overwhelm you.<br />And they are important since assignments maybe related to them!!!<br />And so the last thing is final. <br />Well, you literally need to memorize all the stuff, for example, some proofs so as not to screw yourself when there is such a question.<br />And there are literally 16 pastpapers offered by the professor.<br /><br />so as i said, this course can be tough if you take it seriously which I believe most don't.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "66V2LVzR0rwnSVQykwYfltJBEsaZmAOq",
            "semester": "2017-18 Spring",
            "instructors": [
                {
                    "id": 805,
                    "name": "MA, Xiaojuan",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "csisgood",
            "date": "Jul 12, 2018",
            "title": "It is an Applied Math Course",
            "comment_content": "This course introduces some commonly-used algorithms with proof in computer science field.And after taking this course, you will know how to design an efficient algorithm for a problem ,write a correctness proof and perform running time analysis for an algorithm.<br /><br />The content-design of this course is good. It can help you to improve the efficiency for designing an algorithm.I think it is one of the worth to take course in COMP (Another courses are COMP2012H and COMP4411) for those who are interested in Computer Science.<br /><br />Course Content:<br />1. Review of Computational Complexity and Correctness<br />2. Divide and Conquer and Merge Sort<br />3. Binary Search, Merging, Inversion Counting<br />4. The maximum Sub array Problem<br />5. Integer and matrix mutiplication<br />6. Master Theorem<br />7. Randomized Algorithum<br />8. Quick Sort and Selection<br />9. Randomized Quick Sort, Selection Analysis<br />10. Heaps and Heap Sort<br />11. Sorting in linear time<br />12. Greedy algorithum<br />13. Huffman codding<br />14. 1-D DP<br />15. 2-D DP<br />16. DP over intervals<br />17. Chain Matrix<br />18. Graph Intro<br />19. Basic Graph Algorithum<br />20. Topological Sorting<br />21. Minimum Spanning Trees<br />22. Shortest Path<br />23. Maximum Flows <br />24. Bipartite Matching<br />25. Stable Marriage<br />26. BST<br />27. AVL Trees<br />28. String Matching and Finite Automaton",
            "comment_teaching": "Not Bad. Good preparation. Better to read the lecture notes before taking the lecture since sometimes it is quite difficult to catch up the very long proof.",
            "comment_grading": "Fair Grading.<br />Many PHD and Mphil students take this course. It seems that it is one of the compulsory course for them and most of them got &gt;90 (in both midterm and final).&nbsp;&nbsp;<br /><br />Midterm Mean = ~60<br />Final Mean = ~68<br /><br />Grades Distribution (in both final and midterm)<br />A- or above, &gt;=90<br />B+ or above, &gt;=85 <br />C+, mean <br />D, &gt;=30<br /><br />Final and Midterm questions are composed with Proof and Algorithm Design with Presudo Code",
            "comment_workload": "4 HWs<br />1 Midterm<br />1 Final<br />Low workloads but the questions in HWs are difficult. <br />Usually cost 1-2 days to think about it.<br /><br />and TAs always mark the correctness proof simply by their feelings :).",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 0,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "0uWmUZnkXpCBfRS6wTA8IKx9eNPQHPAC",
            "semester": "2017-18 Spring",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "manselrian",
            "date": "Jun 05, 2018",
            "title": "",
            "comment_content": "There were reviews about contents of this course, and the content hasn't changed much from previous years.&nbsp;&nbsp;Personally, I like this course's content a lot.&nbsp;&nbsp;Some people say this course is mostly about math, which is true for some content, for instance, graph algorithms and run-time analysis.&nbsp;&nbsp;However, there are also topics like dynamic programming are less &quot;mathy&quot; in my view.",
            "comment_teaching": "The Professor is quite good at teaching.&nbsp;&nbsp;The notes are organized and fairly easy to understand.",
            "comment_grading": "I don't know the general grading.&nbsp;&nbsp;I don't know about SD.<br />Midterm 52/100&nbsp;&nbsp;mean 58.5<br />4HWs slightly below mean <br />Final 86/100 mean 66 <br />Got B.",
            "comment_workload": "Workload are quite low, only 4 HWs + Midterm + Final.&nbsp;&nbsp;HWs are fun to do in my opinion.",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 4,
            "rating_workload": 4,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "XEtu4c2XbAvXTSBqWiF5YY4aiPI5ksEL",
            "semester": "2014-15 Spring",
            "instructors": [
                {
                    "id": 115,
                    "name": "YI, Ke",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Âà•ÂïèÊàëÊòØË™∞",
            "date": "Jul 20, 2015",
            "title": "COMP 2711 Êó¢Âª∂Á∫å",
            "comment_content": "‰∏ÄÈñãÊ≥¢ÊúÉÊïô algorithm analysis (big-O, big-omega), Ë∑ü‰ΩèÈñãÂßãÊïôÂîîÂêåÁ®ÆÈ°ûÊó¢ algorithms (e.g. divide and conquer, greedy, dynamic programming, graph)„ÄÇÁï∂‰∏≠‰∫¶ÊúâÁî®‰πãÂâçÊïôÈÅéÊó¢ data structure (e.g. heap, binary tree, hash table, BST)<br /><br />4 ‰ªΩ Written Assignments + 4 ‰ªΩ Programming Assignments (Optional, as bonus) + MT + Final„ÄÇÂ§ßÂ§öÊï∏cs majorÊúÉ fall ËÆÄ„ÄÇ",
            "comment_teaching": "ÁÑ°‰∏ä LecturesÔºågrade ‰øÇÊØî TA„ÄÇ<br /><br />TA Lau Man Kit Êïô tutorial ÊïôÂæóÈùûÂ∏∏Â•ΩÔºåÊúâË∂≥Â§†ÊôÇÈñìÊó¢Ë©±ÊØèÊ¢ùÈÉΩÊúÉË¨õËß£‰∏ÄÊ¨°ÔºåÊúâÊôÇÊúÉreview‰∏ÄÊ¨°ÊúÄËøëlectureÊïôÈÅéÊó¢Êüêd concepts„ÄÇ‰ΩÜÁï∂ÁÑ∂‰∏ätutorial‰πãÂâçËµ∑Á¢ºÁêÜËß£‰∏ã lecture Êó¢ÈáéÔºåÂ¶ÇÊûúÂîî‰øÇÊàêÂ†ÇÈÉΩÂîîÊúÉËÅΩÂæóÊòéd concepts/terms„ÄÇ",
            "comment_grading": "MT above 0.7 sd + Final Ë∏©mean = B-<br /><br />MT mean 65.79 / sd 18.88<br />Final mean 50.9 / sd 20.3<br />Assignments mean Â§öÊï∏7, 8Â≠óÈ†≠, sd ÂçÅÂπæ",
            "comment_workload": "Âë¢Âπ¥ MT ÊòéÈ°ØËºÉÂæÄÂπ¥Ê∑∫, Final Â∞±ÊòéÈ°ØÈõ£Â•ΩÂ§ö„ÄÇÈ°åÂûã (e.g. ÊØèÂ§ßÊ¢ùËÄÉ1ÂÄãÂîîÂêåÊó¢chapter) Â∞±Âêå past paper Áõ∏‰ººÔºå‰ΩÜÂÖßÂÆπÂ•ΩÂ∞ëÊúÉÈáçË§á„ÄÇ",
            "rating_content": 4,
            "rating_teaching": 5,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "zBYwJrvBj4b1BsN76i6vJj6Q6MbXsuzq",
            "semester": "2022-23 Fall",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 0
                },
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "sycamore",
            "date": "Jan 13, 2023",
            "title": "Useful but require hard work",
            "comment_content": "Standard algorithm stuff, following the textbook Introduction to Algorithm.&nbsp;&nbsp;Time complexity, sorting, divide and conquer, greedy, dynamic programming and graph algorithm (the content of graph algorithm is largely simplified, and lots of proof have been omitted). All the contents are just primary stuff of algorithms, it's a good start if you like algorithms, but taking this course is far from even a shallow endeavor to actual algorithm research. You still need a lot of practice on the Leetcode problems if you want to enter big-name IT companies even though you earn a high score in this course.",
            "comment_teaching": "Cheng, Siu Wing teaches the first half (before dynamic programming), while Dimitris teaches the second half. Admittedly, Cheng, Siu Wing is indeed an excellent researcher in algorithms,&nbsp;&nbsp;but his teaching is a nightmare. He speaks monolithically, trying to explain every algorithm, but with too much lengthy background introduction. It is very hard to get the core idea of algorithms if you just follow his lecture.&nbsp;&nbsp;His lecture will only get you familiar with each algorithm and academic terms, but you really need to work harder by yourself after a lecture to gain a more insightful understanding. So my suggestion would be not even attending his lecture. Besides, the midterm problems set by him are more of a testing of reading and understanding of English than actually solving the algorithm problem: a single problem itself is more than 1 page long! I don't know why he did this to us, because as far as I know, only a few students taking this course are actually English native speakers. Dimitris teaches pretty well although he is not an expert in algorithm study,&nbsp;&nbsp;it's worth attending his lecture. He will give you inspirational insight into algorithm design (especially for the dynamic programming part).&nbsp;&nbsp;And the HW and final exam problems set by him are more reasonable, some of them come from Leetcode problems.",
            "comment_grading": "The mean is about B-, and the median is about B. A+ is extremely difficult, but A- is Ok if you work hard. A suggestion would be to take courses offered by foreign professors in cse department if possible because they generally grade well. Hong Kong local professors are usually tough on grading and stick strictly to assignments, grading, and other policies.",
            "comment_workload": "Extremely high!<br />4 assignments in total. Each takes a few days to finish if you are new to algorithms. Being an undergraduate student in cse at ust is so tough, and the average GPA is too low!",
            "rating_content": 5,
            "rating_teaching": 4,
            "rating_grading": 3,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 1,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "n1Udp0H1CkymaGrY3NTkCcaDkfA1UshO",
            "semester": "2015-16 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "advocate",
            "date": "Jan 08, 2017",
            "title": "Hard, but enjoyable",
            "comment_content": "The course can be divided into 2 big parts: sorting algorithms and graphs. The first part is tested on the midterm and relatively easier, than the second part. The hardest topic is dynamic programming, on which basically many students lost the majority of the points(both for midterm and final).",
            "comment_teaching": "Professor Golin speaks very fast, goes through the notes in a rush, but if you read the notes before the lecture, you will be able to follow his pace and everything will make much sense.",
            "comment_grading": "I got 100% for 3/4 of my assignments and slightly less for the last one, a bit above the mean for the midterm and 10 points above for the final, but still got a B-. They basically give a B-,B for those who are close to the mean (no matter how far you are in both directions), it's a piece of cake for those, who are below the mean, but still in the sd, and an unfair treat for those who are above.",
            "comment_workload": "No programming, but lots of theoretical stuff. Better to read notes before the lecture and read the book. Tutorials were poorly structured, so much work was left for self-learning.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "ZD9W6qaE0WafLIfNqGgawAi8YqjF0dC0",
            "semester": "2022-23 Spring",
            "instructors": [
                {
                    "id": 1366,
                    "name": "ZHANG, Tong",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "kk2w",
            "date": "Aug 04, 2023",
            "title": "An easy algorithm course",
            "comment_content": "This course teaches basic algorithms. Includes divide and conquer, sorting, DP, randomize, greedy algorithms, shortest path, and maximum flow. <br />&nbsp;&nbsp;But I think the course content is too easy for those who have learned some algorithms, especially in the semester that doesn't have COMP3711H.",
            "comment_teaching": "The professor teaches very carefully. He explained the correctness of the algorithm and the proofing in detail. Even a student that never learns algorithms can understand the content of the course.",
            "comment_grading": "(My comment about grading may be unfair because I learned about the algorithms in high school.)<br />The following parts determine the grade:<br /> 30% 4 writing assignment <br /> 30% midterm exam<br /> 40% final exam<br />My score is as follows:<br />assignment(49/50,50/50,32/40,50/55)<br />midterm(50/70,Mean 32.9)<br />Final exam(55/70,Mean 32.2)<br />My grade:A+",
            "comment_workload": "One assignment takes me 4 to 5 hours. And this course does not require much time to do the review. The workload of this course is nice.",
            "rating_content": 3,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "eJadyNScOSW1a86H67uqIR4oGILBJlUQ",
            "semester": "2018-19 Winter",
            "instructors": [
                {
                    "id": 805,
                    "name": "MA, Xiaojuan",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Alpha y",
            "date": "Aug 14, 2019",
            "title": "",
            "comment_content": "Clean instruction,<br />nice powerpoint<br /><br />Outline:<br />Introduction<br />Merge sort<br />Divide-and-Conquer <br />Quicksort and linear-time selection<br />Other Sorting<br />Greedy Algorithms<br />Dynamic Programming<br />Graph Algorithm",
            "comment_teaching": "They provide a ted-talk like lecture<br />it is funny and understandable<br />The teaching quality is excellent.",
            "comment_grading": "Grading is clear<br />You need to do the assignment carefully. It affect your grade<br />Exam is quite complex. You need to do a lot of question",
            "comment_workload": "4 assignment and quite easy<br />Only 4 series of homework questions were given, but the course itself demands a lot of more practices.",
            "rating_content": 4,
            "rating_teaching": 4,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 2,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "UUOLzdjIbvUtH0rTKFnKC0TojXQuTIrc",
            "semester": "2022-23 Fall",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                },
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Indo Mie",
            "date": "Dec 22, 2022",
            "title": "Interesting",
            "comment_content": "Topics Covered:<br />- Divide and Conquer (Binary Search)<br />- Sorting algorithms (Insertion Sort, Merge Sort, Heap Sort, Quick Sort, Counting Sort, etc.)<br />- Greedy algorithms<br />- Dynamic Programming (1D, 2D and Interval Partitioning)<br />- Graph algorithms (BFS, DFS, Topological Sort, Kruskal, Prim, Floyd Warshall, Ford-Fulkerson)",
            "comment_teaching": "For this semester, Professor Cheng Siu Wing taught first half and Professor Papadias taught the second. They had very different teaching styles. I actually liked both of them. Prof. Cheng Siu Wing may be quite boring when he teaches but as long as you focus on the materials, I best believe that it is manageable (except for the part where he taught DP since I did not understand anything during lecture hehe). Fortunately, DP was the time where Professor Papadias took over and taught for the rest of the semester. I understood 2D DP and interval partitioning mostly from his lectures :)).",
            "comment_grading": "Written Assignments (30%):<br />1: 55/55<br />2: 49/50<br />3: 100/100<br />4: 100/100<br /><br />Midterms (30%): 74/100, mean: 52.73<br /><br />The difficulty lies in the last problem (Greedy Algorithm) which involves proof on specific cases. I believe this question made the the mean very low since almost everyone received partial pity marks ~ (3 - 5 marks)<br /><br />Finals (40%): 95/100, mean: 61.24<br /><br />Finals was actually reasonable since there were many questions which were similar to past exam papers :))<br /><br />Final grade: A+",
            "comment_workload": "Workload is mediocre, not too much and not too little. i do suggest doing the HWs by yourself since it really trains your brain to be creative, which is especially useful for midterms and finals where you may need to think fast.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 5,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 5,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "NeoftWaheuuro0NS77YeBpU0lDmmDv81",
            "semester": "2021-22 Spring",
            "instructors": [
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "Peter24",
            "date": "Aug 18, 2022",
            "title": "",
            "comment_content": "Divide &amp; Conquer<br />Greedy algorithms<br />Dynamic programming 1D 2D and interval <br />Graph algorithms BFS/DFS minimal spanning tree, shortest paths<br />Max flow problems",
            "comment_teaching": "Papadias teaches really good, he explained everything very clear, although his accent is not that good, but I think is good enough for me to understand. <br />He also add some pages to the lecture note previously released for us to preview, it is better for understanding.",
            "comment_grading": "I don't think the grading is good, I got more than 97 overall, and 100 for the final, but still got an A. I don't think that the grading scheme should be this strict.",
            "comment_workload": "Overall the workload is quite light, if you have practised on leetcode before all the assignment should be easy, and also the proof questions are very similar to the examples in class, so it is easy to do. <br />For each question, you need around 4 hours to complete.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 3,
            "rating_workload": 5,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 3,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "doqFNFYZ4tEBOoIavXCJypxBWyomNhsX",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                },
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "525666",
            "date": "Oct 31, 2021",
            "title": "",
            "comment_content": "Good",
            "comment_teaching": "Good<br />Golin is very good at teaching. And he can give you very quick and adequate guidance in Piazza.",
            "comment_grading": "The average score is B-, but instructors will give you a guarantee. If your score &gt; 90, you at least can get A-, if your score &gt; 80, you at least can get B-.&nbsp;&nbsp;But this course seems cancel the Honor version. So I am not sure whether the content and grading has changed dramatically compared to the course before.",
            "comment_workload": "A lot of assignments because we do not have midterm this semester.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 3,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": true,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 1,
            "vote_count": 6,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "Q8DUlJ0H74Rs7GdRZjHl4S2i5yXRyeSf",
            "semester": "2020-21 Spring",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 0
                }
            ],
            "is_author": false,
            "author": "noriceeat",
            "date": "Jun 01, 2021",
            "title": "",
            "comment_content": "Please refer others for content as they are similar<br />Please refer others for content as they are similar<br />Please refer others for content as they are similar<br />Please refer others for content as they are similar<br />Please refer others for content as they are similar",
            "comment_teaching": "If you are bad at maths, attending GOLIN's lecture is a nightmare as he always try to turn simple things into very complicated ideas using math notation and such. I get it that you want the algorithms to be rigorous which involves a lot of proving. But when students don't even know what the algorithm is doing, how are we suppose to know all the proving and all the math symbols??",
            "comment_grading": "VERY BAD, I got above mean which gave me a C+, like WHAT?? I have seen other courses with bad grading but MEAN = C+???? PLEASE RECONSIDER IF THIS COURSE IS NOT MANDATORY AND YOU WISH TO TAKE IT!!",
            "comment_workload": "EXTREMELY HEAVY WORKLOAD. There are 5 assignments this semester, and assignment 3 is double-sized (double workload, double the score). Every assignment took me 1 week to finish, and even more for assignment 3.<br /><br />If you think you can handle this amount of workload, you are wrong, no matter how right you think you are<br />If you think you can handle this amount of workload, you are wrong, no matter how right you think you are<br />If you think you can handle this amount of workload, you are wrong, no matter how right you think you are<br />(This is very important so I repeat 3 times)<br /><br />Get ready to be blown away by this course",
            "rating_content": 2,
            "rating_teaching": 2,
            "rating_grading": 1,
            "rating_workload": 1,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 2,
            "vote_count": 8,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        },
        {
            "hash": "aly3kWDnpVBPtcY8TpOf3PpDTSEqq0f6",
            "semester": "2021-22 Fall",
            "instructors": [
                {
                    "id": 116,
                    "name": "GOLIN, Mordecai Jay",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "qjk",
            "date": "Dec 17, 2021",
            "title": "Bad Grading",
            "comment_content": "Please refer to other posts.<br /><br />There is enough content in this course to make it 5 credits, but somehow it is only 3 credits.",
            "comment_teaching": "I don't like this course, but Golin is a good teacher, he replies to Piazza posts in minutes and doesn't care if you hand in assignments late.<br /><br />But since he gave me such a bad grade, I have no choice to but to give him an E here. Sorry Golin.",
            "comment_grading": "Unbelievably bad. &gt;~92% -&gt; A-.<br />He guaranteed 90% A-, 80% B-, etc.<br />Some people got B with less than 80% but I got A- with 92%, WTF?<br /><br />Some dude got A with 92% last year. This year they axed 3711H so all the insane people came to the non-H version to bully us, but looks like they didn't bother adjusting the curve. So, the grading is going to get worse and worse in the coming years.",
            "comment_workload": "Each homework will take around 24 hours (plus 2 days to read the lecture notes covered since the last HW each time), and there are 6.<br />Revising for the finals should take at least 3 days.",
            "rating_content": 1,
            "rating_teaching": 1,
            "rating_grading": 1,
            "rating_workload": 1,
            "has_midterm": false,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 3,
            "vote_count": 17,
            "voted": false,
            "is_upvote": false,
            "comment_count": 13,
            "attachments": []
        },
        {
            "hash": "lKQSowsgGUJt0jZtnSbqqgfJEG3kY9TX",
            "semester": "2022-23 Fall",
            "instructors": [
                {
                    "id": 122,
                    "name": "CHENG, Siu Wing",
                    "rating": 1
                },
                {
                    "id": 114,
                    "name": "PAPADIAS, Dimitrios",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "jwnhy",
            "date": "Dec 21, 2022",
            "title": "Excellent Course",
            "comment_content": "Course coverage is introduced in other reviews.<br /><br />In this semester, due to time limit, they don't include AVL Tree and Hash algorithm.<br /><br />So we just learnt up to MST.",
            "comment_teaching": "Teaching is excellent comparing to OS (shit).<br />Instructor will make sure you understand the concepts and they are really welcome to questions (since this is a tough course)<br /><br />The course material is sufficient. Understanding all of them and some past papers is almost a garuanting A.<br /><br />TAs are also really nice (dnk why OS's TAs are shit), responding emails really fast and quick.",
            "comment_grading": "Grading varies from people to people.<br /><br />If you have basic mathematical background (i.e. you're familar to mathematical induction, basic proof techniques[argue by contradiction]), you'll probably have a hard-working but not hard-to-understand experience (unlike MATH courses where you work hard but still not understand anything).<br /><br />Most material if you pay enough work, you'll understand them and can solve questions in midterm/finals (they are relatively easy comparing to HWs)<br /><br />Just do all the past papers to make sure you understand the material.<br /><br />Also I think they go easy on the final since almost all problems except DP are from the SLIDES/PAST PAPERS.<br /><br />I really don't understand people who are complaining the difficulty of this course.<br /><br />If all the problems are right in there and you just need to understand them, where is the difficulty? You just need to work hard.<br /><br />My grade:<br />HW: 98/100 (some lost due to HW1) [mean: 80~?]<br />Mid: 81/100 mean: 50 SD: 15~<br />Final: 97/100 mean: 60 SD 15~<br /><br />Letter Grade: A+",
            "comment_workload": "4 HW<br />1 Mid<br />1 Final<br /><br />HW may takes 5-6 hrs to solve, involving a LOT proofs, but I don't think TAs are picky ass. They just go through the large picture and if you don't make fundamental mistakes, you will receive full marks.<br /><br />From my experience, this lossy marking appears even in mid/final.<br />So do try you best to write or make some shit up.",
            "rating_content": 5,
            "rating_teaching": 5,
            "rating_grading": 4,
            "rating_workload": 5,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 16,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "Hx20jWYfUjqhQ3tAPgg0E5BmIvzvgZFp",
            "semester": "2019-20 Fall",
            "instructors": [
                {
                    "id": 106,
                    "name": "TAI, Chiew Lan",
                    "rating": 1
                }
            ],
            "is_author": false,
            "author": "jcl",
            "date": "May 03, 2021",
            "title": "fdsdsf",
            "comment_content": "ourse information<br /><br />Teaching Assistants<br /><br />Lifeng SHEN (office hour: Fri, 1:30-3pm)<br />Lawrence CHAN (office hour: Wed, 3:30-5pm)<br />Lecture Notes<br /><br />Introduction (printer-friendly: pdf)<br />data preprocessing (pdf)<br />classification<br />intrduction (pdf)<br />decision tree (pdf)<br />nearest-neighbor classification (pdf)<br />support vector machines (pdf)<br />artificial neural networks<br />introduction (pdf)<br />perceptron and multilayer perceptron (pdf)<br />computational graph (from CS231n, Stanford)<br />convolutional neural network (pdf), image processing basics (pdf)<br />clustering<br />k-means clustering (pdf)<br />hierarchical clustering (pdf)<br />network communities<br />association analysis<br />introduction (pdf)<br />Apriori algorithm (pdf)<br />miscellaneous<br />recommender systems<br />Tutorial materials<br /><br />T1: introduction to anaconda, jupyter and UG lab setup<br />T2: data pre-processing<br />T3: kaggle and basic python<br />T4: decision tree<br />T5: pytorch basics<br />T6: pytorch CNN<br />T7: sklearn, clustering (code), networkx (code)<br />T8: apriori algorithm (code)<br />T9: k-nearest neighbor (code)<br />T10: SVM (code)<br />Assignments<br /><br />assignment 1<br />mini-project (data.csv)<br />assignment 2<br />project (data)<br />Dec22, 11:59pm: Deadline to upload the report/code/model to Canvas<br />Dec23: Project presentations<br />Each group will have 15min (including Q&amp;A). The presentation schedule is here. If you have any change requests, please email (together with strong reasons) to the TA.<br />Attendance of all the group presentations is compulsory (and you have to switch on the webcam). Failure to do so will lead to a penalty of 10% on the project.<br />If you run out of time, focus the presentation on your additional analysis.<br />Dec23, 11:59pm: Each group should upload to Canvas the slides used during the presentation<br />Dec23, 11:59pm: Each student should upload the following to Canvas<br />your self-evaluation with (a) a brief description of your contribution in the r eport and presentation; (b) your percentage contribution to the whole project;<br />evaluation of the percentage contribution of each individual members in the group to the whole project (you only need to give the TA a number, no description is needed).<br />peer-evaluation for all the other groups. The form is here.<br />assignment 3<br /><br />TEACHING<br /><br />Well, for the teaching remember to open your camera and just listen him to read the ppt. nothing special<br /><br />GRADING<br /><br />Worst.<br />All above mean B<br />No idea what happened.<br />probably others grade are great?<br /><br />WORKLOAD<br /><br />Workload is appropriate but all the content are irrelevant.",
            "comment_teaching": "dsfdsfdsfourse information<br /><br />Teaching Assistants<br /><br />Lifeng SHEN (office hour: Fri, 1:30-3pm)<br />Lawrence CHAN (office hour: Wed, 3:30-5pm)<br />Lecture Notes<br /><br />Introduction (printer-friendly: pdf)<br />data preprocessing (pdf)<br />classification<br />intrduction (pdf)<br />decision tree (pdf)<br />nearest-neighbor classification (pdf)<br />support vector machines (pdf)<br />artificial neural networks<br />introduction (pdf)<br />perceptron and multilayer perceptron (pdf)<br />computational graph (from CS231n, Stanford)<br />convolutional neural network (pdf), image processing basics (pdf)<br />clustering<br />k-means clustering (pdf)<br />hierarchical clustering (pdf)<br />network communities<br />association analysis<br />introduction (pdf)<br />Apriori algorithm (pdf)<br />miscellaneous<br />recommender systems<br />Tutorial materials<br /><br />T1: introduction to anaconda, jupyter and UG lab setup<br />T2: data pre-processing<br />T3: kaggle and basic python<br />T4: decision tree<br />T5: pytorch basics<br />T6: pytorch CNN<br />T7: sklearn, clustering (code), networkx (code)<br />T8: apriori algorithm (code)<br />T9: k-nearest neighbor (code)<br />T10: SVM (code)<br />Assignments<br /><br />assignment 1<br />mini-project (data.csv)<br />assignment 2<br />project (data)<br />Dec22, 11:59pm: Deadline to upload the report/code/model to Canvas<br />Dec23: Project presentations<br />Each group will have 15min (including Q&amp;A). The presentation schedule is here. If you have any change requests, please email (together with strong reasons) to the TA.<br />Attendance of all the group presentations is compulsory (and you have to switch on the webcam). Failure to do so will lead to a penalty of 10% on the project.<br />If you run out of time, focus the presentation on your additional analysis.<br />Dec23, 11:59pm: Each group should upload to Canvas the slides used during the presentation<br />Dec23, 11:59pm: Each student should upload the following to Canvas<br />your self-evaluation with (a) a brief description of your contribution in the r eport and presentation; (b) your percentage contribution to the whole project;<br />evaluation of the percentage contribution of each individual members in the group to the whole project (you only need to give the TA a number, no description is needed).<br />peer-evaluation for all the other groups. The form is here.<br />assignment 3<br /><br />TEACHING<br /><br />Well, for the teaching remember to open your camera and just listen him to read the ppt. nothing special<br /><br />GRADING<br /><br />Worst.<br />All above mean B<br />No idea what happened.<br />probably others grade are great?<br /><br />WORKLOAD<br /><br />Workload is appropriate but all the content are irrelevant.",
            "comment_grading": "ourse information<br /><br />Teaching Assistants<br /><br />Lifeng SHEN (office hour: Fri, 1:30-3pm)<br />Lawrence CHAN (office hour: Wed, 3:30-5pm)<br />Lecture Notes<br /><br />Introduction (printer-friendly: pdf)<br />data preprocessing (pdf)<br />classification<br />intrduction (pdf)<br />decision tree (pdf)<br />nearest-neighbor classification (pdf)<br />support vector machines (pdf)<br />artificial neural networks<br />introduction (pdf)<br />perceptron and multilayer perceptron (pdf)<br />computational graph (from CS231n, Stanford)<br />convolutional neural network (pdf), image processing basics (pdf)<br />clustering<br />k-means clustering (pdf)<br />hierarchical clustering (pdf)<br />network communities<br />association analysis<br />introduction (pdf)<br />Apriori algorithm (pdf)<br />miscellaneous<br />recommender systems<br />Tutorial materials<br /><br />T1: introduction to anaconda, jupyter and UG lab setup<br />T2: data pre-processing<br />T3: kaggle and basic python<br />T4: decision tree<br />T5: pytorch basics<br />T6: pytorch CNN<br />T7: sklearn, clustering (code), networkx (code)<br />T8: apriori algorithm (code)<br />T9: k-nearest neighbor (code)<br />T10: SVM (code)<br />Assignments<br /><br />assignment 1<br />mini-project (data.csv)<br />assignment 2<br />project (data)<br />Dec22, 11:59pm: Deadline to upload the report/code/model to Canvas<br />Dec23: Project presentations<br />Each group will have 15min (including Q&amp;A). The presentation schedule is here. If you have any change requests, please email (together with strong reasons) to the TA.<br />Attendance of all the group presentations is compulsory (and you have to switch on the webcam). Failure to do so will lead to a penalty of 10% on the project.<br />If you run out of time, focus the presentation on your additional analysis.<br />Dec23, 11:59pm: Each group should upload to Canvas the slides used during the presentation<br />Dec23, 11:59pm: Each student should upload the following to Canvas<br />your self-evaluation with (a) a brief description of your contribution in the r eport and presentation; (b) your percentage contribution to the whole project;<br />evaluation of the percentage contribution of each individual members in the group to the whole project (you only need to give the TA a number, no description is needed).<br />peer-evaluation for all the other groups. The form is here.<br />assignment 3<br /><br />TEACHING<br /><br />Well, for the teaching remember to open your camera and just listen him to read the ppt. nothing special<br /><br />GRADING<br /><br />Worst.<br />All above mean B<br />No idea what happened.<br />probably others grade are great?<br /><br />WORKLOAD<br /><br />Workload is appropriate but all the content are irrelevant.",
            "comment_workload": "ourse information<br /><br />Teaching Assistants<br /><br />Lifeng SHEN (office hour: Fri, 1:30-3pm)<br />Lawrence CHAN (office hour: Wed, 3:30-5pm)<br />Lecture Notes<br /><br />Introduction (printer-friendly: pdf)<br />data preprocessing (pdf)<br />classification<br />intrduction (pdf)<br />decision tree (pdf)<br />nearest-neighbor classification (pdf)<br />support vector machines (pdf)<br />artificial neural networks<br />introduction (pdf)<br />perceptron and multilayer perceptron (pdf)<br />computational graph (from CS231n, Stanford)<br />convolutional neural network (pdf), image processing basics (pdf)<br />clustering<br />k-means clustering (pdf)<br />hierarchical clustering (pdf)<br />network communities<br />association analysis<br />introduction (pdf)<br />Apriori algorithm (pdf)<br />miscellaneous<br />recommender systems<br />Tutorial materials<br /><br />T1: introduction to anaconda, jupyter and UG lab setup<br />T2: data pre-processing<br />T3: kaggle and basic python<br />T4: decision tree<br />T5: pytorch basics<br />T6: pytorch CNN<br />T7: sklearn, clustering (code), networkx (code)<br />T8: apriori algorithm (code)<br />T9: k-nearest neighbor (code)<br />T10: SVM (code)<br />Assignments<br /><br />assignment 1<br />mini-project (data.csv)<br />assignment 2<br />project (data)<br />Dec22, 11:59pm: Deadline to upload the report/code/model to Canvas<br />Dec23: Project presentations<br />Each group will have 15min (including Q&amp;A). The presentation schedule is here. If you have any change requests, please email (together with strong reasons) to the TA.<br />Attendance of all the group presentations is compulsory (and you have to switch on the webcam). Failure to do so will lead to a penalty of 10% on the project.<br />If you run out of time, focus the presentation on your additional analysis.<br />Dec23, 11:59pm: Each group should upload to Canvas the slides used during the presentation<br />Dec23, 11:59pm: Each student should upload the following to Canvas<br />your self-evaluation with (a) a brief description of your contribution in the r eport and presentation; (b) your percentage contribution to the whole project;<br />evaluation of the percentage contribution of each individual members in the group to the whole project (you only need to give the TA a number, no description is needed).<br />peer-evaluation for all the other groups. The form is here.<br />assignment 3<br /><br />TEACHING<br /><br />Well, for the teaching remember to open your camera and just listen him to read the ppt. nothing special<br /><br />GRADING<br /><br />Worst.<br />All above mean B<br />No idea what happened.<br />probably others grade are great?<br /><br />WORKLOAD<br /><br />Workload is appropriate but all the content are irrelevant.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": false,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 26,
            "voted": false,
            "is_upvote": false,
            "comment_count": 1,
            "attachments": []
        },
        {
            "hash": "6NUT7CL1RhHtjWp1z90KYHLM1RVTdJK6",
            "semester": "2018-19 Fall",
            "instructors": [],
            "is_author": false,
            "author": "Bernkastel",
            "date": "Mar 18, 2019",
            "title": "Easy_Get_A",
            "comment_content": "The content part I think the most difficult part is dynamic programming. This is the only part you need to pay attention to, other parts are not difficult.",
            "comment_teaching": "the teaching is very bad, the professor is just reading the lecture notes and always said &quot;don't need to know how to proof, and just do more exercise and you could get a good grade&quot;",
            "comment_grading": "You would get A easily without any study. The only things you need to study are the past exam problem question and dynamic programming. I got full mark for all assignment and above around 1.5 s.d. in all exam got A",
            "comment_workload": "just four assignment, each assignment easy to get full mark.",
            "rating_content": 3,
            "rating_teaching": 3,
            "rating_grading": 3,
            "rating_workload": 3,
            "has_midterm": true,
            "has_final": true,
            "has_quiz": false,
            "has_assignment": true,
            "has_essay": false,
            "has_project": false,
            "has_attendance": false,
            "has_reading": false,
            "has_presentation": false,
            "upvote_count": 0,
            "vote_count": 34,
            "voted": false,
            "is_upvote": false,
            "comment_count": 0,
            "attachments": []
        }
    ],
    "composer": []
}